using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.Enumerations;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupA;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupY
{
    
    
    /// <summary>
    /// The public interface for YLTC
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(YLTC))]
    [XmlDefaultImplementationTypeAttribute(typeof(YLTC))]
    public interface IYLTC : IModelElement, IGroupY
    {
        
        /// <summary>
        /// The OpCnt property
        /// </summary>
        IINS OpCnt
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Torq property
        /// </summary>
        IMV Torq
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MotDrvA property
        /// </summary>
        IMV MotDrvA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TapPos property
        /// </summary>
        IISC TapPos
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TapChg property
        /// </summary>
        IBSC TapChg
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EndPosR property
        /// </summary>
        ISPS EndPosR
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EndPosL property
        /// </summary>
        ISPS EndPosL
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OilFil property
        /// </summary>
        ISPS OilFil
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the OpCnt property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpCntChanging;
        
        /// <summary>
        /// Gets fired when the OpCnt property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpCntChanged;
        
        /// <summary>
        /// Gets fired before the Torq property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TorqChanging;
        
        /// <summary>
        /// Gets fired when the Torq property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TorqChanged;
        
        /// <summary>
        /// Gets fired before the MotDrvA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MotDrvAChanging;
        
        /// <summary>
        /// Gets fired when the MotDrvA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MotDrvAChanged;
        
        /// <summary>
        /// Gets fired before the TapPos property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TapPosChanging;
        
        /// <summary>
        /// Gets fired when the TapPos property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TapPosChanged;
        
        /// <summary>
        /// Gets fired before the TapChg property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TapChgChanging;
        
        /// <summary>
        /// Gets fired when the TapChg property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TapChgChanged;
        
        /// <summary>
        /// Gets fired before the EndPosR property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EndPosRChanging;
        
        /// <summary>
        /// Gets fired when the EndPosR property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EndPosRChanged;
        
        /// <summary>
        /// Gets fired before the EndPosL property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EndPosLChanging;
        
        /// <summary>
        /// Gets fired when the EndPosL property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EndPosLChanged;
        
        /// <summary>
        /// Gets fired before the OilFil property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilFilChanging;
        
        /// <summary>
        /// Gets fired when the OilFil property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilFilChanged;
    }
}

