//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupC
{
    
    
    /// <summary>
    /// The public interface for CCGR
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(CCGR))]
    [XmlDefaultImplementationTypeAttribute(typeof(CCGR))]
    public interface ICCGR : IModelElement, IGroupC
    {
        
        /// <summary>
        /// The EEHealth property
        /// </summary>
        IING EEHealth
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EEName property
        /// </summary>
        IDPL EEName
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OpTmh property
        /// </summary>
        IINS OpTmh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EnvTmp property
        /// </summary>
        IMV EnvTmp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OilTmpIn property
        /// </summary>
        IMV OilTmpIn
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OilTmpOut property
        /// </summary>
        IMV OilTmpOut
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OilMotA property
        /// </summary>
        IMV OilMotA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FanFlw property
        /// </summary>
        IMV FanFlw
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FanA property
        /// </summary>
        IMV FanA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CECtl property
        /// </summary>
        ISPC CECtl
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PmpCtlGen property
        /// </summary>
        IINC PmpCtlGen
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PmpCtl property
        /// </summary>
        IINC PmpCtl
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FanCtlGen property
        /// </summary>
        IINC FanCtlGen
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FanCtl property
        /// </summary>
        IINC FanCtl
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Auto property
        /// </summary>
        ISPS Auto
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FanOvCur property
        /// </summary>
        ISPS FanOvCur
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PmpOvCur property
        /// </summary>
        ISPS PmpOvCur
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PmpAlm property
        /// </summary>
        ISPS PmpAlm
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OilTmpSet property
        /// </summary>
        IASG OilTmpSet
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the EEHealth property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EEHealthChanging;
        
        /// <summary>
        /// Gets fired when the EEHealth property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EEHealthChanged;
        
        /// <summary>
        /// Gets fired before the EEName property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EENameChanging;
        
        /// <summary>
        /// Gets fired when the EEName property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EENameChanged;
        
        /// <summary>
        /// Gets fired before the OpTmh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpTmhChanging;
        
        /// <summary>
        /// Gets fired when the OpTmh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpTmhChanged;
        
        /// <summary>
        /// Gets fired before the EnvTmp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EnvTmpChanging;
        
        /// <summary>
        /// Gets fired when the EnvTmp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EnvTmpChanged;
        
        /// <summary>
        /// Gets fired before the OilTmpIn property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilTmpInChanging;
        
        /// <summary>
        /// Gets fired when the OilTmpIn property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilTmpInChanged;
        
        /// <summary>
        /// Gets fired before the OilTmpOut property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilTmpOutChanging;
        
        /// <summary>
        /// Gets fired when the OilTmpOut property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilTmpOutChanged;
        
        /// <summary>
        /// Gets fired before the OilMotA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilMotAChanging;
        
        /// <summary>
        /// Gets fired when the OilMotA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilMotAChanged;
        
        /// <summary>
        /// Gets fired before the FanFlw property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanFlwChanging;
        
        /// <summary>
        /// Gets fired when the FanFlw property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanFlwChanged;
        
        /// <summary>
        /// Gets fired before the FanA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanAChanging;
        
        /// <summary>
        /// Gets fired when the FanA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanAChanged;
        
        /// <summary>
        /// Gets fired before the CECtl property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CECtlChanging;
        
        /// <summary>
        /// Gets fired when the CECtl property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CECtlChanged;
        
        /// <summary>
        /// Gets fired before the PmpCtlGen property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpCtlGenChanging;
        
        /// <summary>
        /// Gets fired when the PmpCtlGen property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpCtlGenChanged;
        
        /// <summary>
        /// Gets fired before the PmpCtl property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpCtlChanging;
        
        /// <summary>
        /// Gets fired when the PmpCtl property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpCtlChanged;
        
        /// <summary>
        /// Gets fired before the FanCtlGen property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanCtlGenChanging;
        
        /// <summary>
        /// Gets fired when the FanCtlGen property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanCtlGenChanged;
        
        /// <summary>
        /// Gets fired before the FanCtl property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanCtlChanging;
        
        /// <summary>
        /// Gets fired when the FanCtl property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanCtlChanged;
        
        /// <summary>
        /// Gets fired before the Auto property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AutoChanging;
        
        /// <summary>
        /// Gets fired when the Auto property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AutoChanged;
        
        /// <summary>
        /// Gets fired before the FanOvCur property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanOvCurChanging;
        
        /// <summary>
        /// Gets fired when the FanOvCur property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FanOvCurChanged;
        
        /// <summary>
        /// Gets fired before the PmpOvCur property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpOvCurChanging;
        
        /// <summary>
        /// Gets fired when the PmpOvCur property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpOvCurChanged;
        
        /// <summary>
        /// Gets fired before the PmpAlm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpAlmChanging;
        
        /// <summary>
        /// Gets fired when the PmpAlm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PmpAlmChanged;
        
        /// <summary>
        /// Gets fired before the OilTmpSet property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilTmpSetChanging;
        
        /// <summary>
        /// Gets fired when the OilTmpSet property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilTmpSetChanged;
    }
}

