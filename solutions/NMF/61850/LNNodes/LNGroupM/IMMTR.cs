using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.Enumerations;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupM
{
    
    
    /// <summary>
    /// The public interface for MMTR
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(MMTR))]
    [XmlDefaultImplementationTypeAttribute(typeof(MMTR))]
    public interface IMMTR : IModelElement, IGroupM
    {
        
        /// <summary>
        /// The EEHealth property
        /// </summary>
        Nullable<HealthStateKind> EEHealth
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EEName property
        /// </summary>
        IDPL EEName
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TotVAh property
        /// </summary>
        IBCR TotVAh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TotWh property
        /// </summary>
        IBCR TotWh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TotVArh property
        /// </summary>
        IBCR TotVArh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SupWh property
        /// </summary>
        IBCR SupWh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SupVArh property
        /// </summary>
        IBCR SupVArh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DmdWh property
        /// </summary>
        IBCR DmdWh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DmdVArh property
        /// </summary>
        IBCR DmdVArh
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the EEHealth property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EEHealthChanging;
        
        /// <summary>
        /// Gets fired when the EEHealth property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EEHealthChanged;
        
        /// <summary>
        /// Gets fired before the EEName property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EENameChanging;
        
        /// <summary>
        /// Gets fired when the EEName property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EENameChanged;
        
        /// <summary>
        /// Gets fired before the TotVAh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TotVAhChanging;
        
        /// <summary>
        /// Gets fired when the TotVAh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TotVAhChanged;
        
        /// <summary>
        /// Gets fired before the TotWh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TotWhChanging;
        
        /// <summary>
        /// Gets fired when the TotWh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TotWhChanged;
        
        /// <summary>
        /// Gets fired before the TotVArh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TotVArhChanging;
        
        /// <summary>
        /// Gets fired when the TotVArh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TotVArhChanged;
        
        /// <summary>
        /// Gets fired before the SupWh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupWhChanging;
        
        /// <summary>
        /// Gets fired when the SupWh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupWhChanged;
        
        /// <summary>
        /// Gets fired before the SupVArh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupVArhChanging;
        
        /// <summary>
        /// Gets fired when the SupVArh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupVArhChanged;
        
        /// <summary>
        /// Gets fired before the DmdWh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DmdWhChanging;
        
        /// <summary>
        /// Gets fired when the DmdWh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DmdWhChanged;
        
        /// <summary>
        /// Gets fired before the DmdVArh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DmdVArhChanging;
        
        /// <summary>
        /// Gets fired when the DmdVArh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DmdVArhChanged;
    }
}

