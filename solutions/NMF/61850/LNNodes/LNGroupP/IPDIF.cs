using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupP
{
    
    
    /// <summary>
    /// The public interface for PDIF
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(PDIF))]
    [XmlDefaultImplementationTypeAttribute(typeof(PDIF))]
    public interface IPDIF : IModelElement, IGroupP
    {
        
        /// <summary>
        /// The Str property
        /// </summary>
        IACD Str
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Op property
        /// </summary>
        IACT Op
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TmASt property
        /// </summary>
        ICSD TmASt
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DifAClc property
        /// </summary>
        IWYE DifAClc
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RstA property
        /// </summary>
        IWYE RstA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The LinCapac property
        /// </summary>
        IASG LinCapac
        {
            get;
            set;
        }
        
        /// <summary>
        /// The LoSet property
        /// </summary>
        IING LoSet
        {
            get;
            set;
        }
        
        /// <summary>
        /// The HiSet property
        /// </summary>
        IING HiSet
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MinOpTmms property
        /// </summary>
        IING MinOpTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MaxOpTmms property
        /// </summary>
        IING MaxOpTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RstMod property
        /// </summary>
        IING RstMod
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RsDiTmms property
        /// </summary>
        IING RsDiTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TmACrv property
        /// </summary>
        ICURVE TmACrv
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Str property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrChanging;
        
        /// <summary>
        /// Gets fired when the Str property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrChanged;
        
        /// <summary>
        /// Gets fired before the Op property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanging;
        
        /// <summary>
        /// Gets fired when the Op property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanged;
        
        /// <summary>
        /// Gets fired before the TmASt property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TmAStChanging;
        
        /// <summary>
        /// Gets fired when the TmASt property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TmAStChanged;
        
        /// <summary>
        /// Gets fired before the DifAClc property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DifAClcChanging;
        
        /// <summary>
        /// Gets fired when the DifAClc property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DifAClcChanged;
        
        /// <summary>
        /// Gets fired before the RstA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RstAChanging;
        
        /// <summary>
        /// Gets fired when the RstA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RstAChanged;
        
        /// <summary>
        /// Gets fired before the LinCapac property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LinCapacChanging;
        
        /// <summary>
        /// Gets fired when the LinCapac property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LinCapacChanged;
        
        /// <summary>
        /// Gets fired before the LoSet property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LoSetChanging;
        
        /// <summary>
        /// Gets fired when the LoSet property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LoSetChanged;
        
        /// <summary>
        /// Gets fired before the HiSet property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HiSetChanging;
        
        /// <summary>
        /// Gets fired when the HiSet property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HiSetChanged;
        
        /// <summary>
        /// Gets fired before the MinOpTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinOpTmmsChanging;
        
        /// <summary>
        /// Gets fired when the MinOpTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinOpTmmsChanged;
        
        /// <summary>
        /// Gets fired before the MaxOpTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxOpTmmsChanging;
        
        /// <summary>
        /// Gets fired when the MaxOpTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxOpTmmsChanged;
        
        /// <summary>
        /// Gets fired before the RstMod property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RstModChanging;
        
        /// <summary>
        /// Gets fired when the RstMod property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RstModChanged;
        
        /// <summary>
        /// Gets fired before the RsDiTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RsDiTmmsChanging;
        
        /// <summary>
        /// Gets fired when the RsDiTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RsDiTmmsChanged;
        
        /// <summary>
        /// Gets fired before the TmACrv property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TmACrvChanging;
        
        /// <summary>
        /// Gets fired when the TmACrv property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TmACrvChanged;
    }
}

