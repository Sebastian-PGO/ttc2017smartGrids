using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupP
{
    
    
    /// <summary>
    /// The public interface for PMRI
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(PMRI))]
    [XmlDefaultImplementationTypeAttribute(typeof(PMRI))]
    public interface IPMRI : IModelElement, IGroupP
    {
        
        /// <summary>
        /// The Op property
        /// </summary>
        IACT Op
        {
            get;
            set;
        }
        
        /// <summary>
        /// The StrInh property
        /// </summary>
        ISPS StrInh
        {
            get;
            set;
        }
        
        /// <summary>
        /// The StrInhTmm property
        /// </summary>
        IINS StrInhTmm
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SetA property
        /// </summary>
        IASG SetA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SetTms property
        /// </summary>
        IING SetTms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MaxNumStr property
        /// </summary>
        IING MaxNumStr
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MaxWrmStr property
        /// </summary>
        IING MaxWrmStr
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MaxStrTmm property
        /// </summary>
        IING MaxStrTmm
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EqTmm property
        /// </summary>
        IING EqTmm
        {
            get;
            set;
        }
        
        /// <summary>
        /// The InhTmm property
        /// </summary>
        IING InhTmm
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Op property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanging;
        
        /// <summary>
        /// Gets fired when the Op property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanged;
        
        /// <summary>
        /// Gets fired before the StrInh property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrInhChanging;
        
        /// <summary>
        /// Gets fired when the StrInh property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrInhChanged;
        
        /// <summary>
        /// Gets fired before the StrInhTmm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrInhTmmChanging;
        
        /// <summary>
        /// Gets fired when the StrInhTmm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrInhTmmChanged;
        
        /// <summary>
        /// Gets fired before the SetA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SetAChanging;
        
        /// <summary>
        /// Gets fired when the SetA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SetAChanged;
        
        /// <summary>
        /// Gets fired before the SetTms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SetTmsChanging;
        
        /// <summary>
        /// Gets fired when the SetTms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SetTmsChanged;
        
        /// <summary>
        /// Gets fired before the MaxNumStr property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxNumStrChanging;
        
        /// <summary>
        /// Gets fired when the MaxNumStr property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxNumStrChanged;
        
        /// <summary>
        /// Gets fired before the MaxWrmStr property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxWrmStrChanging;
        
        /// <summary>
        /// Gets fired when the MaxWrmStr property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxWrmStrChanged;
        
        /// <summary>
        /// Gets fired before the MaxStrTmm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxStrTmmChanging;
        
        /// <summary>
        /// Gets fired when the MaxStrTmm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxStrTmmChanged;
        
        /// <summary>
        /// Gets fired before the EqTmm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EqTmmChanging;
        
        /// <summary>
        /// Gets fired when the EqTmm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EqTmmChanged;
        
        /// <summary>
        /// Gets fired before the InhTmm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> InhTmmChanging;
        
        /// <summary>
        /// Gets fired when the InhTmm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> InhTmmChanged;
    }
}

