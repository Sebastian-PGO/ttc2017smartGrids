using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupP
{
    
    
    /// <summary>
    /// The public interface for POPF
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(POPF))]
    [XmlDefaultImplementationTypeAttribute(typeof(POPF))]
    public interface IPOPF : IModelElement, IGroupP
    {
        
        /// <summary>
        /// The Str property
        /// </summary>
        IACD Str
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Op property
        /// </summary>
        IACT Op
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BlkA property
        /// </summary>
        ISPS BlkA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BlkV property
        /// </summary>
        ISPS BlkV
        {
            get;
            set;
        }
        
        /// <summary>
        /// The StrVal property
        /// </summary>
        IASG StrVal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OpDiTmms property
        /// </summary>
        IING OpDiTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RsDiTmms property
        /// </summary>
        IING RsDiTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BlkValA property
        /// </summary>
        IASG BlkValA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BlkValV property
        /// </summary>
        IASG BlkValV
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Str property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrChanging;
        
        /// <summary>
        /// Gets fired when the Str property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrChanged;
        
        /// <summary>
        /// Gets fired before the Op property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanging;
        
        /// <summary>
        /// Gets fired when the Op property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanged;
        
        /// <summary>
        /// Gets fired before the BlkA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkAChanging;
        
        /// <summary>
        /// Gets fired when the BlkA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkAChanged;
        
        /// <summary>
        /// Gets fired before the BlkV property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkVChanging;
        
        /// <summary>
        /// Gets fired when the BlkV property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkVChanged;
        
        /// <summary>
        /// Gets fired before the StrVal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrValChanging;
        
        /// <summary>
        /// Gets fired when the StrVal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrValChanged;
        
        /// <summary>
        /// Gets fired before the OpDiTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpDiTmmsChanging;
        
        /// <summary>
        /// Gets fired when the OpDiTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpDiTmmsChanged;
        
        /// <summary>
        /// Gets fired before the RsDiTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RsDiTmmsChanging;
        
        /// <summary>
        /// Gets fired when the RsDiTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RsDiTmmsChanged;
        
        /// <summary>
        /// Gets fired before the BlkValA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValAChanging;
        
        /// <summary>
        /// Gets fired when the BlkValA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValAChanged;
        
        /// <summary>
        /// Gets fired before the BlkValV property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValVChanging;
        
        /// <summary>
        /// Gets fired when the BlkValV property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValVChanged;
    }
}

