using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupP
{
    
    
    /// <summary>
    /// The public interface for PSCH
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(PSCH))]
    [XmlDefaultImplementationTypeAttribute(typeof(PSCH))]
    public interface IPSCH : IModelElement, IGroupP
    {
        
        /// <summary>
        /// The ProTx property
        /// </summary>
        ISPS ProTx
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ProRx property
        /// </summary>
        ISPS ProRx
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Str property
        /// </summary>
        IACD Str
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Op property
        /// </summary>
        IACT Op
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CarRx property
        /// </summary>
        IACT CarRx
        {
            get;
            set;
        }
        
        /// <summary>
        /// The LosOfGrd property
        /// </summary>
        ISPS LosOfGrd
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Echo property
        /// </summary>
        IACT Echo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The WeiOp property
        /// </summary>
        IACT WeiOp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RvABlk property
        /// </summary>
        IACT RvABlk
        {
            get;
            set;
        }
        
        /// <summary>
        /// The GrdRx property
        /// </summary>
        ISPS GrdRx
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SchTyp property
        /// </summary>
        IING SchTyp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OpDlTmms property
        /// </summary>
        IING OpDlTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CrdTmms property
        /// </summary>
        IING CrdTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DurTmms property
        /// </summary>
        IING DurTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The UnBlkMod property
        /// </summary>
        IING UnBlkMod
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SecTmms property
        /// </summary>
        IING SecTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The WeiMod property
        /// </summary>
        IING WeiMod
        {
            get;
            set;
        }
        
        /// <summary>
        /// The WeiTmms property
        /// </summary>
        IING WeiTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PPVVal property
        /// </summary>
        IASG PPVVal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PhGndVal property
        /// </summary>
        IASG PhGndVal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RvAMod property
        /// </summary>
        IING RvAMod
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RvATmms property
        /// </summary>
        IING RvATmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RvRsTmms property
        /// </summary>
        IING RvRsTmms
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the ProTx property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProTxChanging;
        
        /// <summary>
        /// Gets fired when the ProTx property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProTxChanged;
        
        /// <summary>
        /// Gets fired before the ProRx property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProRxChanging;
        
        /// <summary>
        /// Gets fired when the ProRx property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProRxChanged;
        
        /// <summary>
        /// Gets fired before the Str property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrChanging;
        
        /// <summary>
        /// Gets fired when the Str property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrChanged;
        
        /// <summary>
        /// Gets fired before the Op property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanging;
        
        /// <summary>
        /// Gets fired when the Op property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpChanged;
        
        /// <summary>
        /// Gets fired before the CarRx property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CarRxChanging;
        
        /// <summary>
        /// Gets fired when the CarRx property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CarRxChanged;
        
        /// <summary>
        /// Gets fired before the LosOfGrd property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LosOfGrdChanging;
        
        /// <summary>
        /// Gets fired when the LosOfGrd property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LosOfGrdChanged;
        
        /// <summary>
        /// Gets fired before the Echo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EchoChanging;
        
        /// <summary>
        /// Gets fired when the Echo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EchoChanged;
        
        /// <summary>
        /// Gets fired before the WeiOp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeiOpChanging;
        
        /// <summary>
        /// Gets fired when the WeiOp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeiOpChanged;
        
        /// <summary>
        /// Gets fired before the RvABlk property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvABlkChanging;
        
        /// <summary>
        /// Gets fired when the RvABlk property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvABlkChanged;
        
        /// <summary>
        /// Gets fired before the GrdRx property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GrdRxChanging;
        
        /// <summary>
        /// Gets fired when the GrdRx property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GrdRxChanged;
        
        /// <summary>
        /// Gets fired before the SchTyp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SchTypChanging;
        
        /// <summary>
        /// Gets fired when the SchTyp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SchTypChanged;
        
        /// <summary>
        /// Gets fired before the OpDlTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpDlTmmsChanging;
        
        /// <summary>
        /// Gets fired when the OpDlTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OpDlTmmsChanged;
        
        /// <summary>
        /// Gets fired before the CrdTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CrdTmmsChanging;
        
        /// <summary>
        /// Gets fired when the CrdTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CrdTmmsChanged;
        
        /// <summary>
        /// Gets fired before the DurTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DurTmmsChanging;
        
        /// <summary>
        /// Gets fired when the DurTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DurTmmsChanged;
        
        /// <summary>
        /// Gets fired before the UnBlkMod property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnBlkModChanging;
        
        /// <summary>
        /// Gets fired when the UnBlkMod property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnBlkModChanged;
        
        /// <summary>
        /// Gets fired before the SecTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SecTmmsChanging;
        
        /// <summary>
        /// Gets fired when the SecTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SecTmmsChanged;
        
        /// <summary>
        /// Gets fired before the WeiMod property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeiModChanging;
        
        /// <summary>
        /// Gets fired when the WeiMod property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeiModChanged;
        
        /// <summary>
        /// Gets fired before the WeiTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeiTmmsChanging;
        
        /// <summary>
        /// Gets fired when the WeiTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeiTmmsChanged;
        
        /// <summary>
        /// Gets fired before the PPVVal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PPVValChanging;
        
        /// <summary>
        /// Gets fired when the PPVVal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PPVValChanged;
        
        /// <summary>
        /// Gets fired before the PhGndVal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PhGndValChanging;
        
        /// <summary>
        /// Gets fired when the PhGndVal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PhGndValChanged;
        
        /// <summary>
        /// Gets fired before the RvAMod property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvAModChanging;
        
        /// <summary>
        /// Gets fired when the RvAMod property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvAModChanged;
        
        /// <summary>
        /// Gets fired before the RvATmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvATmmsChanging;
        
        /// <summary>
        /// Gets fired when the RvATmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvATmmsChanged;
        
        /// <summary>
        /// Gets fired before the RvRsTmms property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvRsTmmsChanging;
        
        /// <summary>
        /// Gets fired when the RvRsTmms property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RvRsTmmsChanged;
    }
}

