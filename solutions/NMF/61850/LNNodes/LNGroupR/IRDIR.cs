using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Dataclasses;
using TTC2017.SmartGrids.SubstationStandard.LNNodes.DomainLNs;

namespace TTC2017.SmartGrids.SubstationStandard.LNNodes.LNGroupR
{
    
    
    /// <summary>
    /// The public interface for RDIR
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(RDIR))]
    [XmlDefaultImplementationTypeAttribute(typeof(RDIR))]
    public interface IRDIR : IModelElement, IGroupR
    {
        
        /// <summary>
        /// The Dir property
        /// </summary>
        IACD Dir
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ChrAng property
        /// </summary>
        IASG ChrAng
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MinFwdAng property
        /// </summary>
        IASG MinFwdAng
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MinRvAng property
        /// </summary>
        IASG MinRvAng
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MaxFwdAng property
        /// </summary>
        IASG MaxFwdAng
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MaxRvAng property
        /// </summary>
        IASG MaxRvAng
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BlkValA property
        /// </summary>
        IASG BlkValA
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BlkValV property
        /// </summary>
        IASG BlkValV
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PolQty property
        /// </summary>
        IING PolQty
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MinPPV property
        /// </summary>
        IASG MinPPV
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Dir property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DirChanging;
        
        /// <summary>
        /// Gets fired when the Dir property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DirChanged;
        
        /// <summary>
        /// Gets fired before the ChrAng property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChrAngChanging;
        
        /// <summary>
        /// Gets fired when the ChrAng property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChrAngChanged;
        
        /// <summary>
        /// Gets fired before the MinFwdAng property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinFwdAngChanging;
        
        /// <summary>
        /// Gets fired when the MinFwdAng property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinFwdAngChanged;
        
        /// <summary>
        /// Gets fired before the MinRvAng property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinRvAngChanging;
        
        /// <summary>
        /// Gets fired when the MinRvAng property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinRvAngChanged;
        
        /// <summary>
        /// Gets fired before the MaxFwdAng property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxFwdAngChanging;
        
        /// <summary>
        /// Gets fired when the MaxFwdAng property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxFwdAngChanged;
        
        /// <summary>
        /// Gets fired before the MaxRvAng property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxRvAngChanging;
        
        /// <summary>
        /// Gets fired when the MaxRvAng property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxRvAngChanged;
        
        /// <summary>
        /// Gets fired before the BlkValA property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValAChanging;
        
        /// <summary>
        /// Gets fired when the BlkValA property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValAChanged;
        
        /// <summary>
        /// Gets fired before the BlkValV property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValVChanging;
        
        /// <summary>
        /// Gets fired when the BlkValV property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BlkValVChanged;
        
        /// <summary>
        /// Gets fired before the PolQty property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PolQtyChanging;
        
        /// <summary>
        /// Gets fired when the PolQty property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PolQtyChanged;
        
        /// <summary>
        /// Gets fired before the MinPPV property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinPPVChanging;
        
        /// <summary>
        /// Gets fired when the MinPPV property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinPPVChanged;
    }
}

