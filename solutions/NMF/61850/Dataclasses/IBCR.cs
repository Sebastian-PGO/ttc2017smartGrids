//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.SubstationStandard.Enumerations;

namespace TTC2017.SmartGrids.SubstationStandard.Dataclasses
{
    
    
    /// <summary>
    /// The public interface for BCR
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(BCR))]
    [XmlDefaultImplementationTypeAttribute(typeof(BCR))]
    public interface IBCR : IModelElement
    {
        
        /// <summary>
        /// The actVal property
        /// </summary>
        Nullable<int> ActVal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The frVal property
        /// </summary>
        Nullable<int> FrVal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The pulsQty property
        /// </summary>
        Nullable<float> PulsQty
        {
            get;
            set;
        }
        
        /// <summary>
        /// The frEna property
        /// </summary>
        Nullable<bool> FrEna
        {
            get;
            set;
        }
        
        /// <summary>
        /// The frPd property
        /// </summary>
        Nullable<int> FrPd
        {
            get;
            set;
        }
        
        /// <summary>
        /// The frRs property
        /// </summary>
        Nullable<bool> FrRs
        {
            get;
            set;
        }
        
        /// <summary>
        /// The frTm property
        /// </summary>
        ITimeStamp FrTm
        {
            get;
            set;
        }
        
        /// <summary>
        /// The q property
        /// </summary>
        IQuality Q
        {
            get;
            set;
        }
        
        /// <summary>
        /// The units property
        /// </summary>
        IUnits Units
        {
            get;
            set;
        }
        
        /// <summary>
        /// The strTm property
        /// </summary>
        ITimeStamp StrTm
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the ActVal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActValChanging;
        
        /// <summary>
        /// Gets fired when the ActVal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActValChanged;
        
        /// <summary>
        /// Gets fired before the FrVal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrValChanging;
        
        /// <summary>
        /// Gets fired when the FrVal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrValChanged;
        
        /// <summary>
        /// Gets fired before the PulsQty property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PulsQtyChanging;
        
        /// <summary>
        /// Gets fired when the PulsQty property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PulsQtyChanged;
        
        /// <summary>
        /// Gets fired before the FrEna property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrEnaChanging;
        
        /// <summary>
        /// Gets fired when the FrEna property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrEnaChanged;
        
        /// <summary>
        /// Gets fired before the FrPd property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrPdChanging;
        
        /// <summary>
        /// Gets fired when the FrPd property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrPdChanged;
        
        /// <summary>
        /// Gets fired before the FrRs property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrRsChanging;
        
        /// <summary>
        /// Gets fired when the FrRs property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrRsChanged;
        
        /// <summary>
        /// Gets fired before the FrTm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrTmChanging;
        
        /// <summary>
        /// Gets fired when the FrTm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FrTmChanged;
        
        /// <summary>
        /// Gets fired before the Q property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QChanging;
        
        /// <summary>
        /// Gets fired when the Q property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QChanged;
        
        /// <summary>
        /// Gets fired before the Units property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitsChanging;
        
        /// <summary>
        /// Gets fired when the Units property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitsChanged;
        
        /// <summary>
        /// Gets fired before the StrTm property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrTmChanging;
        
        /// <summary>
        /// Gets fired when the StrTm property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrTmChanged;
    }
}

