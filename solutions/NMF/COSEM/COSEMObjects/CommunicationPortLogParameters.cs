//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.COSEM.InterfaceClasses;

namespace TTC2017.SmartGrids.COSEM.COSEMObjects
{
    
    
    /// <summary>
    /// The default implementation of the CommunicationPortLogParameters class
    /// </summary>
    [XmlNamespaceAttribute("objects")]
    [XmlNamespacePrefixAttribute("objects")]
    [ModelRepresentationClassAttribute("http://www.transformation-tool-contest.eu/2017/smartGrids/cosem#//COSEMObjects/Co" +
        "mmunicationPortLogParameters")]
    public partial class CommunicationPortLogParameters : Data, ICommunicationPortLogParameters, IModelElement
    {
        
        /// <summary>
        /// The backing field for the Reserved property
        /// </summary>
        private string _reserved;
        
        private static Lazy<ITypedElement> _reservedAttribute = new Lazy<ITypedElement>(RetrieveReservedAttribute);
        
        /// <summary>
        /// The backing field for the Number_connections property
        /// </summary>
        private string _number_connections;
        
        private static Lazy<ITypedElement> _number_connectionsAttribute = new Lazy<ITypedElement>(RetrieveNumber_connectionsAttribute);
        
        /// <summary>
        /// The backing field for the Communication_port_parameter property
        /// </summary>
        private string _communication_port_parameter;
        
        private static Lazy<ITypedElement> _communication_port_parameterAttribute = new Lazy<ITypedElement>(RetrieveCommunication_port_parameterAttribute);
        
        /// <summary>
        /// The backing field for the GSM_field_strength property
        /// </summary>
        private string _gSM_field_strength;
        
        private static Lazy<ITypedElement> _gSM_field_strengthAttribute = new Lazy<ITypedElement>(RetrieveGSM_field_strengthAttribute);
        
        /// <summary>
        /// The backing field for the Communicationaddress property
        /// </summary>
        private string _communicationaddress;
        
        private static Lazy<ITypedElement> _communicationaddressAttribute = new Lazy<ITypedElement>(RetrieveCommunicationaddressAttribute);
        
        private static IClass _classInstance;
        
        /// <summary>
        /// The Reserved property
        /// </summary>
        [XmlAttributeAttribute(true)]
        public virtual string Reserved
        {
            get
            {
                return this._reserved;
            }
            set
            {
                if ((this._reserved != value))
                {
                    string old = this._reserved;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnReservedChanging(e);
                    this.OnPropertyChanging("Reserved", e, _reservedAttribute);
                    this._reserved = value;
                    this.OnReservedChanged(e);
                    this.OnPropertyChanged("Reserved", e, _reservedAttribute);
                }
            }
        }
        
        /// <summary>
        /// The Number_connections property
        /// </summary>
        [XmlAttributeAttribute(true)]
        public virtual string Number_connections
        {
            get
            {
                return this._number_connections;
            }
            set
            {
                if ((this._number_connections != value))
                {
                    string old = this._number_connections;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnNumber_connectionsChanging(e);
                    this.OnPropertyChanging("Number_connections", e, _number_connectionsAttribute);
                    this._number_connections = value;
                    this.OnNumber_connectionsChanged(e);
                    this.OnPropertyChanged("Number_connections", e, _number_connectionsAttribute);
                }
            }
        }
        
        /// <summary>
        /// The Communication_port_parameter property
        /// </summary>
        [XmlAttributeAttribute(true)]
        public virtual string Communication_port_parameter
        {
            get
            {
                return this._communication_port_parameter;
            }
            set
            {
                if ((this._communication_port_parameter != value))
                {
                    string old = this._communication_port_parameter;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnCommunication_port_parameterChanging(e);
                    this.OnPropertyChanging("Communication_port_parameter", e, _communication_port_parameterAttribute);
                    this._communication_port_parameter = value;
                    this.OnCommunication_port_parameterChanged(e);
                    this.OnPropertyChanged("Communication_port_parameter", e, _communication_port_parameterAttribute);
                }
            }
        }
        
        /// <summary>
        /// The GSM_field_strength property
        /// </summary>
        [XmlAttributeAttribute(true)]
        public virtual string GSM_field_strength
        {
            get
            {
                return this._gSM_field_strength;
            }
            set
            {
                if ((this._gSM_field_strength != value))
                {
                    string old = this._gSM_field_strength;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnGSM_field_strengthChanging(e);
                    this.OnPropertyChanging("GSM_field_strength", e, _gSM_field_strengthAttribute);
                    this._gSM_field_strength = value;
                    this.OnGSM_field_strengthChanged(e);
                    this.OnPropertyChanged("GSM_field_strength", e, _gSM_field_strengthAttribute);
                }
            }
        }
        
        /// <summary>
        /// The Communicationaddress property
        /// </summary>
        [XmlAttributeAttribute(true)]
        public virtual string Communicationaddress
        {
            get
            {
                return this._communicationaddress;
            }
            set
            {
                if ((this._communicationaddress != value))
                {
                    string old = this._communicationaddress;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnCommunicationaddressChanging(e);
                    this.OnPropertyChanging("Communicationaddress", e, _communicationaddressAttribute);
                    this._communicationaddress = value;
                    this.OnCommunicationaddressChanged(e);
                    this.OnPropertyChanged("Communicationaddress", e, _communicationaddressAttribute);
                }
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://www.transformation-tool-contest.eu/2017/smartGrids/cosem#//COSEMObjects/Co" +
                            "mmunicationPortLogParameters")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the Reserved property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> ReservedChanging;
        
        /// <summary>
        /// Gets fired when the Reserved property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> ReservedChanged;
        
        /// <summary>
        /// Gets fired before the Number_connections property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> Number_connectionsChanging;
        
        /// <summary>
        /// Gets fired when the Number_connections property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> Number_connectionsChanged;
        
        /// <summary>
        /// Gets fired before the Communication_port_parameter property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> Communication_port_parameterChanging;
        
        /// <summary>
        /// Gets fired when the Communication_port_parameter property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> Communication_port_parameterChanged;
        
        /// <summary>
        /// Gets fired before the GSM_field_strength property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> GSM_field_strengthChanging;
        
        /// <summary>
        /// Gets fired when the GSM_field_strength property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> GSM_field_strengthChanged;
        
        /// <summary>
        /// Gets fired before the Communicationaddress property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> CommunicationaddressChanging;
        
        /// <summary>
        /// Gets fired when the Communicationaddress property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> CommunicationaddressChanged;
        
        private static ITypedElement RetrieveReservedAttribute()
        {
            return ((ITypedElement)(((ModelElement)(CommunicationPortLogParameters.ClassInstance)).Resolve("Reserved")));
        }
        
        /// <summary>
        /// Raises the ReservedChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnReservedChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.ReservedChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the ReservedChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnReservedChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.ReservedChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        private static ITypedElement RetrieveNumber_connectionsAttribute()
        {
            return ((ITypedElement)(((ModelElement)(CommunicationPortLogParameters.ClassInstance)).Resolve("Number_connections")));
        }
        
        /// <summary>
        /// Raises the Number_connectionsChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnNumber_connectionsChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.Number_connectionsChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the Number_connectionsChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnNumber_connectionsChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.Number_connectionsChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        private static ITypedElement RetrieveCommunication_port_parameterAttribute()
        {
            return ((ITypedElement)(((ModelElement)(CommunicationPortLogParameters.ClassInstance)).Resolve("Communication_port_parameter")));
        }
        
        /// <summary>
        /// Raises the Communication_port_parameterChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnCommunication_port_parameterChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.Communication_port_parameterChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the Communication_port_parameterChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnCommunication_port_parameterChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.Communication_port_parameterChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        private static ITypedElement RetrieveGSM_field_strengthAttribute()
        {
            return ((ITypedElement)(((ModelElement)(CommunicationPortLogParameters.ClassInstance)).Resolve("GSM_field_strength")));
        }
        
        /// <summary>
        /// Raises the GSM_field_strengthChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnGSM_field_strengthChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.GSM_field_strengthChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the GSM_field_strengthChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnGSM_field_strengthChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.GSM_field_strengthChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        private static ITypedElement RetrieveCommunicationaddressAttribute()
        {
            return ((ITypedElement)(((ModelElement)(CommunicationPortLogParameters.ClassInstance)).Resolve("Communicationaddress")));
        }
        
        /// <summary>
        /// Raises the CommunicationaddressChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnCommunicationaddressChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.CommunicationaddressChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the CommunicationaddressChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnCommunicationaddressChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.CommunicationaddressChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Resolves the given attribute name
        /// </summary>
        /// <returns>The attribute value or null if it could not be found</returns>
        /// <param name="attribute">The requested attribute name</param>
        /// <param name="index">The index of this attribute</param>
        protected override object GetAttributeValue(string attribute, int index)
        {
            if ((attribute == "RESERVED"))
            {
                return this.Reserved;
            }
            if ((attribute == "NUMBER_CONNECTIONS"))
            {
                return this.Number_connections;
            }
            if ((attribute == "COMMUNICATION_PORT_PARAMETER"))
            {
                return this.Communication_port_parameter;
            }
            if ((attribute == "GSM_FIELD_STRENGTH"))
            {
                return this.GSM_field_strength;
            }
            if ((attribute == "COMMUNICATIONADDRESS"))
            {
                return this.Communicationaddress;
            }
            return base.GetAttributeValue(attribute, index);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "RESERVED"))
            {
                this.Reserved = ((string)(value));
                return;
            }
            if ((feature == "NUMBER_CONNECTIONS"))
            {
                this.Number_connections = ((string)(value));
                return;
            }
            if ((feature == "COMMUNICATION_PORT_PARAMETER"))
            {
                this.Communication_port_parameter = ((string)(value));
                return;
            }
            if ((feature == "GSM_FIELD_STRENGTH"))
            {
                this.GSM_field_strength = ((string)(value));
                return;
            }
            if ((feature == "COMMUNICATIONADDRESS"))
            {
                this.Communicationaddress = ((string)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://www.transformation-tool-contest.eu/2017/smartGrids/cosem#//COSEMObjects/Co" +
                        "mmunicationPortLogParameters")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the Reserved property
        /// </summary>
        private sealed class ReservedProxy : ModelPropertyChange<ICommunicationPortLogParameters, string>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public ReservedProxy(ICommunicationPortLogParameters modelElement) : 
                    base(modelElement, "Reserved")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override string Value
            {
                get
                {
                    return this.ModelElement.Reserved;
                }
                set
                {
                    this.ModelElement.Reserved = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the Number_connections property
        /// </summary>
        private sealed class Number_connectionsProxy : ModelPropertyChange<ICommunicationPortLogParameters, string>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Number_connectionsProxy(ICommunicationPortLogParameters modelElement) : 
                    base(modelElement, "Number_connections")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override string Value
            {
                get
                {
                    return this.ModelElement.Number_connections;
                }
                set
                {
                    this.ModelElement.Number_connections = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the Communication_port_parameter property
        /// </summary>
        private sealed class Communication_port_parameterProxy : ModelPropertyChange<ICommunicationPortLogParameters, string>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Communication_port_parameterProxy(ICommunicationPortLogParameters modelElement) : 
                    base(modelElement, "Communication_port_parameter")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override string Value
            {
                get
                {
                    return this.ModelElement.Communication_port_parameter;
                }
                set
                {
                    this.ModelElement.Communication_port_parameter = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the GSM_field_strength property
        /// </summary>
        private sealed class GSM_field_strengthProxy : ModelPropertyChange<ICommunicationPortLogParameters, string>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public GSM_field_strengthProxy(ICommunicationPortLogParameters modelElement) : 
                    base(modelElement, "GSM_field_strength")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override string Value
            {
                get
                {
                    return this.ModelElement.GSM_field_strength;
                }
                set
                {
                    this.ModelElement.GSM_field_strength = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the Communicationaddress property
        /// </summary>
        private sealed class CommunicationaddressProxy : ModelPropertyChange<ICommunicationPortLogParameters, string>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public CommunicationaddressProxy(ICommunicationPortLogParameters modelElement) : 
                    base(modelElement, "Communicationaddress")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override string Value
            {
                get
                {
                    return this.ModelElement.Communicationaddress;
                }
                set
                {
                    this.ModelElement.Communicationaddress = value;
                }
            }
        }
    }
}

