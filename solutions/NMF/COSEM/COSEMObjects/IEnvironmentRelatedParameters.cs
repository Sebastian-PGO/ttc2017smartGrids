using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.COSEM.InterfaceClasses;

namespace TTC2017.SmartGrids.COSEM.COSEMObjects
{
    
    
    /// <summary>
    /// The public interface for EnvironmentRelatedParameters
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(EnvironmentRelatedParameters))]
    [XmlDefaultImplementationTypeAttribute(typeof(EnvironmentRelatedParameters))]
    public interface IEnvironmentRelatedParameters : IModelElement, IRegister
    {
        
        /// <summary>
        /// The ambient_temperature property
        /// </summary>
        Nullable<double> Ambient_temperature
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Ambient_pressure property
        /// </summary>
        Nullable<double> Ambient_pressure
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Relative_humidity property
        /// </summary>
        Nullable<double> Relative_humidity
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Ambient_temperature property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Ambient_temperatureChanging;
        
        /// <summary>
        /// Gets fired when the Ambient_temperature property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Ambient_temperatureChanged;
        
        /// <summary>
        /// Gets fired before the Ambient_pressure property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Ambient_pressureChanging;
        
        /// <summary>
        /// Gets fired when the Ambient_pressure property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Ambient_pressureChanged;
        
        /// <summary>
        /// Gets fired before the Relative_humidity property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Relative_humidityChanging;
        
        /// <summary>
        /// Gets fired when the Relative_humidity property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Relative_humidityChanged;
    }
}

