using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.COSEM.InterfaceClasses;

namespace TTC2017.SmartGrids.COSEM.COSEMObjects
{
    
    
    /// <summary>
    /// The public interface for ElectricityValues
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ElectricityValues))]
    [XmlDefaultImplementationTypeAttribute(typeof(ElectricityValues))]
    public interface IElectricityValues : IModelElement, IData
    {
        
        /// <summary>
        /// The ActivePowerpL1 property
        /// </summary>
        Nullable<double> ActivePowerpL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerpall property
        /// </summary>
        Nullable<double> ActivePowerpall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerpL2 property
        /// </summary>
        Nullable<double> ActivePowerpL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerpL3 property
        /// </summary>
        Nullable<double> ActivePowerpL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowermL2 property
        /// </summary>
        Nullable<double> ActivePowermL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowermL1 property
        /// </summary>
        Nullable<double> ActivePowermL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowermL3 property
        /// </summary>
        Nullable<double> ActivePowermL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowermall property
        /// </summary>
        Nullable<double> ActivePowermall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerpL1 property
        /// </summary>
        Nullable<double> ReactivePowerpL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerpL2 property
        /// </summary>
        Nullable<double> ReactivePowerpL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerpL3 property
        /// </summary>
        Nullable<double> ReactivePowerpL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerpall property
        /// </summary>
        Nullable<double> ReactivePowerpall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowermL1 property
        /// </summary>
        Nullable<double> ReactivePowermL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowermL2 property
        /// </summary>
        Nullable<double> ReactivePowermL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowermL3 property
        /// </summary>
        Nullable<double> ReactivePowermL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowermall property
        /// </summary>
        Nullable<double> ReactivePowermall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIL1 property
        /// </summary>
        Nullable<double> ReactivePowerQIL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIL2 property
        /// </summary>
        Nullable<double> ReactivePowerQIL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIL3 property
        /// </summary>
        Nullable<double> ReactivePowerQIL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIall property
        /// </summary>
        Nullable<double> ReactivePowerQIall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIL1 property
        /// </summary>
        Nullable<double> ReactivePowerQIIL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIL2 property
        /// </summary>
        Nullable<double> ReactivePowerQIIL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIL3 property
        /// </summary>
        Nullable<double> ReactivePowerQIIL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIall property
        /// </summary>
        Nullable<double> ReactivePowerQIIall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIIL1 property
        /// </summary>
        Nullable<double> ReactivePowerQIIIL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIIL2 property
        /// </summary>
        Nullable<double> ReactivePowerQIIIL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIIL3 property
        /// </summary>
        Nullable<double> ReactivePowerQIIIL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIIIall property
        /// </summary>
        Nullable<double> ReactivePowerQIIIall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIVL1 property
        /// </summary>
        Nullable<double> ReactivePowerQIVL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIVL2 property
        /// </summary>
        Nullable<double> ReactivePowerQIVL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIVL3 property
        /// </summary>
        Nullable<double> ReactivePowerQIVL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReactivePowerQIVall property
        /// </summary>
        Nullable<double> ReactivePowerQIVall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowerpL1 property
        /// </summary>
        Nullable<double> ApparentPowerpL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowerpL2 property
        /// </summary>
        Nullable<double> ApparentPowerpL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowerpL3 property
        /// </summary>
        Nullable<double> ApparentPowerpL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowerpAll property
        /// </summary>
        Nullable<double> ApparentPowerpAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowermL1 property
        /// </summary>
        Nullable<double> ApparentPowermL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowermL2 property
        /// </summary>
        Nullable<double> ApparentPowermL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowermL3 property
        /// </summary>
        Nullable<double> ApparentPowermL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ApparentPowermAll property
        /// </summary>
        Nullable<double> ApparentPowermAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CurrentL1 property
        /// </summary>
        Nullable<double> CurrentL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CurrentL2 property
        /// </summary>
        Nullable<double> CurrentL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CurrentL3 property
        /// </summary>
        Nullable<double> CurrentL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CurrentAll property
        /// </summary>
        Nullable<double> CurrentAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The VoltageL1 property
        /// </summary>
        Nullable<double> VoltageL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The VoltageL2 property
        /// </summary>
        Nullable<double> VoltageL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The VoltageL3 property
        /// </summary>
        Nullable<double> VoltageL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The VoltageAll property
        /// </summary>
        Nullable<double> VoltageAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PowerFactorL1 property
        /// </summary>
        Nullable<double> PowerFactorL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PowerFactorL2 property
        /// </summary>
        Nullable<double> PowerFactorL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PowerFactorL3 property
        /// </summary>
        Nullable<double> PowerFactorL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PowerFactorAll property
        /// </summary>
        Nullable<double> PowerFactorAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SupplyFrequencyL1 property
        /// </summary>
        Nullable<double> SupplyFrequencyL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SupplyFrequencyL2 property
        /// </summary>
        Nullable<double> SupplyFrequencyL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SupplyFrequencyL3 property
        /// </summary>
        Nullable<double> SupplyFrequencyL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SupplyFrequencyAll property
        /// </summary>
        Nullable<double> SupplyFrequencyAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsPL1 property
        /// </summary>
        Nullable<double> ActivePowerAbsPL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsPL2 property
        /// </summary>
        Nullable<double> ActivePowerAbsPL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsPL3 property
        /// </summary>
        Nullable<double> ActivePowerAbsPL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsPAll property
        /// </summary>
        Nullable<double> ActivePowerAbsPAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsML1 property
        /// </summary>
        Nullable<double> ActivePowerAbsML1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsML2 property
        /// </summary>
        Nullable<double> ActivePowerAbsML2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsML3 property
        /// </summary>
        Nullable<double> ActivePowerAbsML3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerAbsMAll property
        /// </summary>
        Nullable<double> ActivePowerAbsMAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIL1 property
        /// </summary>
        Nullable<double> ActivePowerQIL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIL2 property
        /// </summary>
        Nullable<double> ActivePowerQIL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIL3 property
        /// </summary>
        Nullable<double> ActivePowerQIL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIall property
        /// </summary>
        Nullable<double> ActivePowerQIall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIL1 property
        /// </summary>
        Nullable<double> ActivePowerQIIL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIL2 property
        /// </summary>
        Nullable<double> ActivePowerQIIL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIL3 property
        /// </summary>
        Nullable<double> ActivePowerQIIL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIall property
        /// </summary>
        Nullable<double> ActivePowerQIIall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIIL1 property
        /// </summary>
        Nullable<double> ActivePowerQIIIL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIIL2 property
        /// </summary>
        Nullable<double> ActivePowerQIIIL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIIL3 property
        /// </summary>
        Nullable<double> ActivePowerQIIIL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIIIall property
        /// </summary>
        Nullable<double> ActivePowerQIIIall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIVL1 property
        /// </summary>
        Nullable<double> ActivePowerQIVL1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIVL2 property
        /// </summary>
        Nullable<double> ActivePowerQIVL2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIVL3 property
        /// </summary>
        Nullable<double> ActivePowerQIVL3
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ActivePowerQIVall property
        /// </summary>
        Nullable<double> ActivePowerQIVall
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Angles property
        /// </summary>
        Nullable<double> Angles
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Pulses property
        /// </summary>
        Nullable<int> Pulses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Ampere_squaredHours property
        /// </summary>
        Nullable<double> Ampere_squaredHours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Volt_squaredHours property
        /// </summary>
        Nullable<double> Volt_squaredHours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The NeutralCurrent property
        /// </summary>
        Nullable<double> NeutralCurrent
        {
            get;
            set;
        }
        
        /// <summary>
        /// The NeutralVoltage property
        /// </summary>
        Nullable<double> NeutralVoltage
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the ActivePowerpL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerpL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerpall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpallChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerpall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpallChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerpL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerpL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerpL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerpL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerpL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowermL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowermL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowermL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowermL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowermL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowermL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowermall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermallChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowermall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowermallChanged;
        
        /// <summary>
        /// Gets fired before the ReactivePowerpL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpL1Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerpL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpL1Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerpL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpL2Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerpL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpL2Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerpL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpL3Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerpL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpL3Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerpall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpallChanging;
        
        /// <summary>
        /// Gets fired when the ReactivePowerpall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerpallChanged;
        
        /// <summary>
        /// Gets fired before the ReactivePowermL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermL1Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowermL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermL1Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowermL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermL2Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowermL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermL2Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowermL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermL3Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowermL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermL3Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowermall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermallChanging;
        
        /// <summary>
        /// Gets fired when the ReactivePowermall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowermallChanged;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIL1Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIL1Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIL2Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIL2Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIL3Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIL3Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIallChanging;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIallChanged;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIL1Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIL1Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIL2Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIL2Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIL3Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIL3Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIallChanging;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIallChanged;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIIL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIL1Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIIL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIL1Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIIL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIL2Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIIL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIL2Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIIL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIL3Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIIL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIL3Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIIIall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIallChanging;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIIIall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIIIallChanged;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIVL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVL1Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIVL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVL1Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIVL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVL2Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIVL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVL2Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIVL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVL3Changing;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIVL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVL3Changed;
        
        /// <summary>
        /// Gets fired before the ReactivePowerQIVall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVallChanging;
        
        /// <summary>
        /// Gets fired when the ReactivePowerQIVall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReactivePowerQIVallChanged;
        
        /// <summary>
        /// Gets fired before the ApparentPowerpL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpL1Changing;
        
        /// <summary>
        /// Gets fired when the ApparentPowerpL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpL1Changed;
        
        /// <summary>
        /// Gets fired before the ApparentPowerpL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpL2Changing;
        
        /// <summary>
        /// Gets fired when the ApparentPowerpL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpL2Changed;
        
        /// <summary>
        /// Gets fired before the ApparentPowerpL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpL3Changing;
        
        /// <summary>
        /// Gets fired when the ApparentPowerpL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpL3Changed;
        
        /// <summary>
        /// Gets fired before the ApparentPowerpAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpAllChanging;
        
        /// <summary>
        /// Gets fired when the ApparentPowerpAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowerpAllChanged;
        
        /// <summary>
        /// Gets fired before the ApparentPowermL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermL1Changing;
        
        /// <summary>
        /// Gets fired when the ApparentPowermL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermL1Changed;
        
        /// <summary>
        /// Gets fired before the ApparentPowermL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermL2Changing;
        
        /// <summary>
        /// Gets fired when the ApparentPowermL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermL2Changed;
        
        /// <summary>
        /// Gets fired before the ApparentPowermL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermL3Changing;
        
        /// <summary>
        /// Gets fired when the ApparentPowermL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermL3Changed;
        
        /// <summary>
        /// Gets fired before the ApparentPowermAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermAllChanging;
        
        /// <summary>
        /// Gets fired when the ApparentPowermAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ApparentPowermAllChanged;
        
        /// <summary>
        /// Gets fired before the CurrentL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentL1Changing;
        
        /// <summary>
        /// Gets fired when the CurrentL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentL1Changed;
        
        /// <summary>
        /// Gets fired before the CurrentL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentL2Changing;
        
        /// <summary>
        /// Gets fired when the CurrentL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentL2Changed;
        
        /// <summary>
        /// Gets fired before the CurrentL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentL3Changing;
        
        /// <summary>
        /// Gets fired when the CurrentL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentL3Changed;
        
        /// <summary>
        /// Gets fired before the CurrentAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentAllChanging;
        
        /// <summary>
        /// Gets fired when the CurrentAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentAllChanged;
        
        /// <summary>
        /// Gets fired before the VoltageL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageL1Changing;
        
        /// <summary>
        /// Gets fired when the VoltageL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageL1Changed;
        
        /// <summary>
        /// Gets fired before the VoltageL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageL2Changing;
        
        /// <summary>
        /// Gets fired when the VoltageL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageL2Changed;
        
        /// <summary>
        /// Gets fired before the VoltageL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageL3Changing;
        
        /// <summary>
        /// Gets fired when the VoltageL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageL3Changed;
        
        /// <summary>
        /// Gets fired before the VoltageAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageAllChanging;
        
        /// <summary>
        /// Gets fired when the VoltageAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageAllChanged;
        
        /// <summary>
        /// Gets fired before the PowerFactorL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorL1Changing;
        
        /// <summary>
        /// Gets fired when the PowerFactorL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorL1Changed;
        
        /// <summary>
        /// Gets fired before the PowerFactorL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorL2Changing;
        
        /// <summary>
        /// Gets fired when the PowerFactorL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorL2Changed;
        
        /// <summary>
        /// Gets fired before the PowerFactorL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorL3Changing;
        
        /// <summary>
        /// Gets fired when the PowerFactorL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorL3Changed;
        
        /// <summary>
        /// Gets fired before the PowerFactorAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorAllChanging;
        
        /// <summary>
        /// Gets fired when the PowerFactorAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerFactorAllChanged;
        
        /// <summary>
        /// Gets fired before the SupplyFrequencyL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyL1Changing;
        
        /// <summary>
        /// Gets fired when the SupplyFrequencyL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyL1Changed;
        
        /// <summary>
        /// Gets fired before the SupplyFrequencyL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyL2Changing;
        
        /// <summary>
        /// Gets fired when the SupplyFrequencyL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyL2Changed;
        
        /// <summary>
        /// Gets fired before the SupplyFrequencyL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyL3Changing;
        
        /// <summary>
        /// Gets fired when the SupplyFrequencyL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyL3Changed;
        
        /// <summary>
        /// Gets fired before the SupplyFrequencyAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyAllChanging;
        
        /// <summary>
        /// Gets fired when the SupplyFrequencyAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SupplyFrequencyAllChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsPL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsPL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsPL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsPL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsPL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsPL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsPAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPAllChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsPAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsPAllChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsML1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsML1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsML1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsML1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsML2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsML2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsML2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsML2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsML3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsML3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsML3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsML3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerAbsMAll property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsMAllChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerAbsMAll property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerAbsMAllChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIallChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIallChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIallChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIallChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIIL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIIL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIIL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIIL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIIL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIIL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIIIall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIallChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIIIall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIIIallChanged;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIVL1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVL1Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIVL1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVL1Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIVL2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVL2Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIVL2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVL2Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIVL3 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVL3Changing;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIVL3 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVL3Changed;
        
        /// <summary>
        /// Gets fired before the ActivePowerQIVall property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVallChanging;
        
        /// <summary>
        /// Gets fired when the ActivePowerQIVall property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivePowerQIVallChanged;
        
        /// <summary>
        /// Gets fired before the Angles property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnglesChanging;
        
        /// <summary>
        /// Gets fired when the Angles property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnglesChanged;
        
        /// <summary>
        /// Gets fired before the Pulses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PulsesChanging;
        
        /// <summary>
        /// Gets fired when the Pulses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PulsesChanged;
        
        /// <summary>
        /// Gets fired before the Ampere_squaredHours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Ampere_squaredHoursChanging;
        
        /// <summary>
        /// Gets fired when the Ampere_squaredHours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Ampere_squaredHoursChanged;
        
        /// <summary>
        /// Gets fired before the Volt_squaredHours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Volt_squaredHoursChanging;
        
        /// <summary>
        /// Gets fired when the Volt_squaredHours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Volt_squaredHoursChanged;
        
        /// <summary>
        /// Gets fired before the NeutralCurrent property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NeutralCurrentChanging;
        
        /// <summary>
        /// Gets fired when the NeutralCurrent property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NeutralCurrentChanged;
        
        /// <summary>
        /// Gets fired before the NeutralVoltage property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NeutralVoltageChanging;
        
        /// <summary>
        /// Gets fired when the NeutralVoltage property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NeutralVoltageChanged;
    }
}

