using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.COSEM.InterfaceClasses;

namespace TTC2017.SmartGrids.COSEM.COSEMObjects
{
    
    
    /// <summary>
    /// The public interface for TransformerAndLineLosses
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(TransformerAndLineLosses))]
    [XmlDefaultImplementationTypeAttribute(typeof(TransformerAndLineLosses))]
    public interface ITransformerAndLineLosses : IModelElement, IData
    {
        
        /// <summary>
        /// The Active_line_losses_P property
        /// </summary>
        Nullable<double> Active_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_line_losses_M property
        /// </summary>
        Nullable<double> Active_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_line_losses property
        /// </summary>
        Nullable<double> Active_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_transformer_losses_P property
        /// </summary>
        Nullable<double> Active_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_transformer_losses_M property
        /// </summary>
        Nullable<double> Active_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_transformer_losses property
        /// </summary>
        Nullable<double> Active_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_losses_P property
        /// </summary>
        Nullable<double> Active_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_losses_M property
        /// </summary>
        Nullable<double> Active_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Active_losses property
        /// </summary>
        Nullable<double> Active_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_line_losses_P property
        /// </summary>
        Nullable<double> Reactive_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_line_losses_M property
        /// </summary>
        Nullable<double> Reactive_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_line_losses property
        /// </summary>
        Nullable<double> Reactive_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_transformer_losses_P property
        /// </summary>
        Nullable<double> Reactive_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_transformer_losses_M property
        /// </summary>
        Nullable<double> Reactive_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_transformer_losses property
        /// </summary>
        Nullable<double> Reactive_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_losses_P property
        /// </summary>
        Nullable<double> Reactive_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_losses_M property
        /// </summary>
        Nullable<double> Reactive_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reactive_losses property
        /// </summary>
        Nullable<double> Reactive_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Total_normalized_transformer_losses property
        /// </summary>
        Nullable<double> Total_normalized_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Total_normalized_line_losses property
        /// </summary>
        Nullable<double> Total_normalized_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_active_gross_P property
        /// </summary>
        Nullable<double> Compensated_active_gross_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_active_net_P property
        /// </summary>
        Nullable<double> Compensated_active_net_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_active_gross_M property
        /// </summary>
        Nullable<double> Compensated_active_gross_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_active_net_M property
        /// </summary>
        Nullable<double> Compensated_active_net_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_reactive_gross_P property
        /// </summary>
        Nullable<double> Compensated_reactive_gross_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_reactive_net_P property
        /// </summary>
        Nullable<double> Compensated_reactive_net_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_reactive_gross_M property
        /// </summary>
        Nullable<double> Compensated_reactive_gross_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Compensated_reactive_net_M property
        /// </summary>
        Nullable<double> Compensated_reactive_net_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_line_losses property
        /// </summary>
        Nullable<double> L1active_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_line_losses_M property
        /// </summary>
        Nullable<double> L1active_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_transformer_losses_P property
        /// </summary>
        Nullable<double> L1active_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_transformer_losses_M property
        /// </summary>
        Nullable<double> L1active_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_transformer_losses property
        /// </summary>
        Nullable<double> L1active_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_losses_P property
        /// </summary>
        Nullable<double> L1active_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_losses_M property
        /// </summary>
        Nullable<double> L1active_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1active_losses property
        /// </summary>
        Nullable<double> L1active_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1reactive_line_losses_P property
        /// </summary>
        Nullable<double> L1reactive_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1reactive_line_losses_M property
        /// </summary>
        Nullable<double> L1reactive_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1reactive_line_losses property
        /// </summary>
        Nullable<double> L1reactive_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1reactive_transformer_losses_P property
        /// </summary>
        Nullable<double> L1reactive_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1reactive_transformer_losses_M property
        /// </summary>
        Nullable<double> L1reactive_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1reactive_transformer_losses property
        /// </summary>
        Nullable<double> L1reactive_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1Reactive_losses_P property
        /// </summary>
        Nullable<double> L1Reactive_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1Reactive_losses_M property
        /// </summary>
        Nullable<double> L1Reactive_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1Reactive_losses property
        /// </summary>
        Nullable<double> L1Reactive_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1Ampere_squared_hours property
        /// </summary>
        Nullable<double> L1Ampere_squared_hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L1Volt_squared_hours property
        /// </summary>
        Nullable<double> L1Volt_squared_hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_line_losses_P property
        /// </summary>
        Nullable<double> L2active_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_line_losses_M property
        /// </summary>
        Nullable<double> L2active_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_transformer_losses_P property
        /// </summary>
        Nullable<double> L2active_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_transformer_losses_M property
        /// </summary>
        Nullable<double> L2active_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_transformer_losses property
        /// </summary>
        Nullable<double> L2active_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_losses_P property
        /// </summary>
        Nullable<double> L2active_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_losses_M property
        /// </summary>
        Nullable<double> L2active_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2active_losses property
        /// </summary>
        Nullable<double> L2active_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_line_losses_P property
        /// </summary>
        Nullable<double> L2reactive_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_line_losses_M property
        /// </summary>
        Nullable<double> L2reactive_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_line_losses property
        /// </summary>
        Nullable<double> L2reactive_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_transformer_losses property
        /// </summary>
        Nullable<double> L2reactive_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_transformer_losses_P property
        /// </summary>
        Nullable<double> L2reactive_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_transformer_losses_M property
        /// </summary>
        Nullable<double> L2reactive_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_losses property
        /// </summary>
        Nullable<double> L2reactive_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_losses_P property
        /// </summary>
        Nullable<double> L2reactive_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2reactive_losses_M property
        /// </summary>
        Nullable<double> L2reactive_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2Ampere_squared_hours property
        /// </summary>
        Nullable<double> L2Ampere_squared_hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L2Volt_squared_hours property
        /// </summary>
        Nullable<double> L2Volt_squared_hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3Active_line_losses_P property
        /// </summary>
        Nullable<double> L3Active_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3Active_line_losses_M property
        /// </summary>
        Nullable<double> L3Active_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3active_transformer_losses_P property
        /// </summary>
        Nullable<double> L3active_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3active_transformer_losses_M property
        /// </summary>
        Nullable<double> L3active_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3active_transformer_losses property
        /// </summary>
        Nullable<double> L3active_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3active_losses_P property
        /// </summary>
        Nullable<double> L3active_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3active_losses_M property
        /// </summary>
        Nullable<double> L3active_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3active_losses property
        /// </summary>
        Nullable<double> L3active_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_line_losses_P property
        /// </summary>
        Nullable<double> L3reactive_line_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_line_losses_M property
        /// </summary>
        Nullable<double> L3reactive_line_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_line_losses property
        /// </summary>
        Nullable<double> L3reactive_line_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_transformer_losses_P property
        /// </summary>
        Nullable<double> L3reactive_transformer_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_transformer_losses_M property
        /// </summary>
        Nullable<double> L3reactive_transformer_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_transformer_losses property
        /// </summary>
        Nullable<double> L3reactive_transformer_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_losses_P property
        /// </summary>
        Nullable<double> L3reactive_losses_P
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_losses_M property
        /// </summary>
        Nullable<double> L3reactive_losses_M
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3reactive_losses property
        /// </summary>
        Nullable<double> L3reactive_losses
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3Ampere_squared_hours property
        /// </summary>
        Nullable<double> L3Ampere_squared_hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// The L3Volt_Squared_hours property
        /// </summary>
        Nullable<double> L3Volt_Squared_hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Active_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the Active_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the Active_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the Active_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the Active_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Active_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Active_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the Active_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the Active_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the Active_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the Active_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Active_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Active_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the Active_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the Active_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the Active_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the Active_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Active_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Active_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the Reactive_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Reactive_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reactive_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Total_normalized_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Total_normalized_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Total_normalized_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Total_normalized_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Total_normalized_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Total_normalized_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the Total_normalized_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Total_normalized_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_active_gross_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_gross_PChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_active_gross_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_gross_PChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_active_net_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_net_PChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_active_net_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_net_PChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_active_gross_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_gross_MChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_active_gross_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_gross_MChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_active_net_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_net_MChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_active_net_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_active_net_MChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_reactive_gross_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_gross_PChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_reactive_gross_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_gross_PChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_reactive_net_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_net_PChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_reactive_net_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_net_PChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_reactive_gross_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_gross_MChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_reactive_gross_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_gross_MChanged;
        
        /// <summary>
        /// Gets fired before the Compensated_reactive_net_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_net_MChanging;
        
        /// <summary>
        /// Gets fired when the Compensated_reactive_net_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Compensated_reactive_net_MChanged;
        
        /// <summary>
        /// Gets fired before the L1active_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L1active_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L1active_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L1active_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L1active_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L1active_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L1active_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L1active_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L1active_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L1active_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L1active_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L1active_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L1active_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L1active_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L1active_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L1active_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1active_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L1reactive_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L1reactive_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L1reactive_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L1reactive_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L1reactive_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L1reactive_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L1reactive_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L1reactive_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L1reactive_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L1reactive_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L1reactive_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L1reactive_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1reactive_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L1Reactive_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Reactive_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L1Reactive_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Reactive_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L1Reactive_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Reactive_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L1Reactive_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Reactive_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L1Reactive_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Reactive_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L1Reactive_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Reactive_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L1Ampere_squared_hours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Ampere_squared_hoursChanging;
        
        /// <summary>
        /// Gets fired when the L1Ampere_squared_hours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Ampere_squared_hoursChanged;
        
        /// <summary>
        /// Gets fired before the L1Volt_squared_hours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Volt_squared_hoursChanging;
        
        /// <summary>
        /// Gets fired when the L1Volt_squared_hours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L1Volt_squared_hoursChanged;
        
        /// <summary>
        /// Gets fired before the L2active_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L2active_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L2active_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L2active_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L2active_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L2active_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L2active_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L2active_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L2active_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L2active_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L2active_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L2active_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L2active_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L2active_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L2active_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L2active_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2active_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L2reactive_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L2reactive_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2reactive_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L2Ampere_squared_hours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2Ampere_squared_hoursChanging;
        
        /// <summary>
        /// Gets fired when the L2Ampere_squared_hours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2Ampere_squared_hoursChanged;
        
        /// <summary>
        /// Gets fired before the L2Volt_squared_hours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2Volt_squared_hoursChanging;
        
        /// <summary>
        /// Gets fired when the L2Volt_squared_hours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L2Volt_squared_hoursChanged;
        
        /// <summary>
        /// Gets fired before the L3Active_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Active_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L3Active_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Active_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L3Active_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Active_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L3Active_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Active_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L3active_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L3active_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L3active_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L3active_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L3active_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L3active_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L3active_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L3active_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L3active_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L3active_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L3active_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L3active_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3active_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_line_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_line_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_line_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_line_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_line_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_line_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_line_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_line_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_line_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_line_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_line_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_line_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_transformer_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_transformer_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_transformer_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_transformer_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_transformer_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_transformer_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_transformer_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_transformer_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_transformer_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_transformer_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_transformer_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_transformer_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_losses_P property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_losses_PChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_losses_P property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_losses_PChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_losses_M property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_losses_MChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_losses_M property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_losses_MChanged;
        
        /// <summary>
        /// Gets fired before the L3reactive_losses property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_lossesChanging;
        
        /// <summary>
        /// Gets fired when the L3reactive_losses property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3reactive_lossesChanged;
        
        /// <summary>
        /// Gets fired before the L3Ampere_squared_hours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Ampere_squared_hoursChanging;
        
        /// <summary>
        /// Gets fired when the L3Ampere_squared_hours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Ampere_squared_hoursChanged;
        
        /// <summary>
        /// Gets fired before the L3Volt_Squared_hours property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Volt_Squared_hoursChanging;
        
        /// <summary>
        /// Gets fired when the L3Volt_Squared_hours property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> L3Volt_Squared_hoursChanged;
    }
}

