using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.COSEM.InterfaceClasses;

namespace TTC2017.SmartGrids.COSEM.COSEMObjects
{
    
    
    /// <summary>
    /// The public interface for BatteryEntries
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(BatteryEntries))]
    [XmlDefaultImplementationTypeAttribute(typeof(BatteryEntries))]
    public interface IBatteryEntries : IModelElement, IData
    {
        
        /// <summary>
        /// The Battery_use_time_counter property
        /// </summary>
        Nullable<int> Battery_use_time_counter
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Battery_charge_display property
        /// </summary>
        string Battery_charge_display
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Date_of_next_battery_change property
        /// </summary>
        string Date_of_next_battery_change
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Battery_voltage property
        /// </summary>
        Nullable<double> Battery_voltage
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Battery_initial_capacity property
        /// </summary>
        Nullable<double> Battery_initial_capacity
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Battery_installation_date_and_time property
        /// </summary>
        string Battery_installation_date_and_time
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Battery_estimated_remaining_use_time property
        /// </summary>
        string Battery_estimated_remaining_use_time
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Aux_supply_use_time_counter property
        /// </summary>
        Nullable<int> Aux_supply_use_time_counter
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Aux_voltage property
        /// </summary>
        Nullable<double> Aux_voltage
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Battery_use_time_counter property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_use_time_counterChanging;
        
        /// <summary>
        /// Gets fired when the Battery_use_time_counter property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_use_time_counterChanged;
        
        /// <summary>
        /// Gets fired before the Battery_charge_display property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_charge_displayChanging;
        
        /// <summary>
        /// Gets fired when the Battery_charge_display property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_charge_displayChanged;
        
        /// <summary>
        /// Gets fired before the Date_of_next_battery_change property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Date_of_next_battery_changeChanging;
        
        /// <summary>
        /// Gets fired when the Date_of_next_battery_change property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Date_of_next_battery_changeChanged;
        
        /// <summary>
        /// Gets fired before the Battery_voltage property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_voltageChanging;
        
        /// <summary>
        /// Gets fired when the Battery_voltage property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_voltageChanged;
        
        /// <summary>
        /// Gets fired before the Battery_initial_capacity property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_initial_capacityChanging;
        
        /// <summary>
        /// Gets fired when the Battery_initial_capacity property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_initial_capacityChanged;
        
        /// <summary>
        /// Gets fired before the Battery_installation_date_and_time property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_installation_date_and_timeChanging;
        
        /// <summary>
        /// Gets fired when the Battery_installation_date_and_time property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_installation_date_and_timeChanged;
        
        /// <summary>
        /// Gets fired before the Battery_estimated_remaining_use_time property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_estimated_remaining_use_timeChanging;
        
        /// <summary>
        /// Gets fired when the Battery_estimated_remaining_use_time property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Battery_estimated_remaining_use_timeChanged;
        
        /// <summary>
        /// Gets fired before the Aux_supply_use_time_counter property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Aux_supply_use_time_counterChanging;
        
        /// <summary>
        /// Gets fired when the Aux_supply_use_time_counter property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Aux_supply_use_time_counterChanged;
        
        /// <summary>
        /// Gets fired before the Aux_voltage property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Aux_voltageChanging;
        
        /// <summary>
        /// Gets fired when the Aux_voltage property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Aux_voltageChanged;
    }
}

