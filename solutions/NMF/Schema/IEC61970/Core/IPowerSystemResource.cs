using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61970.Contingency;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCore;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.OperationalLimits;
using TTC2017.SmartGrids.CIM.IEC61970.Outage;
using TTC2017.SmartGrids.CIM.IEC61970.Protection;
using TTC2017.SmartGrids.CIM.IEC61970.StateVariables;
using TTC2017.SmartGrids.CIM.IEC61970.Topology;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Core
{
    
    
    /// <summary>
    /// The public interface for PowerSystemResource
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(PowerSystemResource))]
    [XmlDefaultImplementationTypeAttribute(typeof(PowerSystemResource))]
    public interface IPowerSystemResource : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The ReportingGroup property
        /// </summary>
        IOrderedSetExpression<IReportingGroup> ReportingGroup
        {
            get;
        }
        
        /// <summary>
        /// The NetworkDataSets property
        /// </summary>
        IOrderedSetExpression<INetworkDataSet> NetworkDataSets
        {
            get;
        }
        
        /// <summary>
        /// The Location property
        /// </summary>
        ILocation Location
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OutageSchedule property
        /// </summary>
        IOutageSchedule OutageSchedule
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PSREvent property
        /// </summary>
        IOrderedSetExpression<IPSREvent> PSREvent
        {
            get;
        }
        
        /// <summary>
        /// The SafetyDocuments property
        /// </summary>
        IOrderedSetExpression<ISafetyDocument> SafetyDocuments
        {
            get;
        }
        
        /// <summary>
        /// The ErpOrganisationRoles property
        /// </summary>
        IOrderedSetExpression<IOrgPsrRole> ErpOrganisationRoles
        {
            get;
        }
        
        /// <summary>
        /// The CircuitSections property
        /// </summary>
        IOrderedSetExpression<ICircuitSection> CircuitSections
        {
            get;
        }
        
        /// <summary>
        /// The Measurements property
        /// </summary>
        IOrderedSetExpression<IMeasurement> Measurements
        {
            get;
        }
        
        /// <summary>
        /// The Assets property
        /// </summary>
        IOrderedSetExpression<IAsset> Assets
        {
            get;
        }
        
        /// <summary>
        /// The ScheduleSteps property
        /// </summary>
        IOrderedSetExpression<ISwitchingStep> ScheduleSteps
        {
            get;
        }
        
        /// <summary>
        /// The PSRType property
        /// </summary>
        IPSRType PSRType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PsrLists property
        /// </summary>
        IOrderedSetExpression<IPsrList> PsrLists
        {
            get;
        }
        
        /// <summary>
        /// The OperatingShare property
        /// </summary>
        IOrderedSetExpression<IOperatingShare> OperatingShare
        {
            get;
        }
        
        /// <summary>
        /// The ChangeItems property
        /// </summary>
        IOrderedSetExpression<IChangeItem> ChangeItems
        {
            get;
        }
        
        /// <summary>
        /// The DocumentRoles property
        /// </summary>
        IOrderedSetExpression<IDocPsrRole> DocumentRoles
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Location property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LocationChanging;
        
        /// <summary>
        /// Gets fired when the Location property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LocationChanged;
        
        /// <summary>
        /// Gets fired before the OutageSchedule property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OutageScheduleChanging;
        
        /// <summary>
        /// Gets fired when the OutageSchedule property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OutageScheduleChanged;
        
        /// <summary>
        /// Gets fired before the PSRType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PSRTypeChanging;
        
        /// <summary>
        /// Gets fired when the PSRType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PSRTypeChanged;
    }
}

