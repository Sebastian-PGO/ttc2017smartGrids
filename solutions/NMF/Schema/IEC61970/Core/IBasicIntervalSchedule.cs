using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61970.Contingency;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCore;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.OperationalLimits;
using TTC2017.SmartGrids.CIM.IEC61970.Outage;
using TTC2017.SmartGrids.CIM.IEC61970.Protection;
using TTC2017.SmartGrids.CIM.IEC61970.StateVariables;
using TTC2017.SmartGrids.CIM.IEC61970.Topology;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Core
{
    
    
    /// <summary>
    /// The public interface for BasicIntervalSchedule
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(BasicIntervalSchedule))]
    [XmlDefaultImplementationTypeAttribute(typeof(BasicIntervalSchedule))]
    public interface IBasicIntervalSchedule : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The value2Multiplier property
        /// </summary>
        Nullable<UnitMultiplier> Value2Multiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The value1Multiplier property
        /// </summary>
        Nullable<UnitMultiplier> Value1Multiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The startTime property
        /// </summary>
        string StartTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// The value2Unit property
        /// </summary>
        Nullable<UnitSymbol> Value2Unit
        {
            get;
            set;
        }
        
        /// <summary>
        /// The value1Unit property
        /// </summary>
        Nullable<UnitSymbol> Value1Unit
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Value2Multiplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value2MultiplierChanging;
        
        /// <summary>
        /// Gets fired when the Value2Multiplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value2MultiplierChanged;
        
        /// <summary>
        /// Gets fired before the Value1Multiplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value1MultiplierChanging;
        
        /// <summary>
        /// Gets fired when the Value1Multiplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value1MultiplierChanged;
        
        /// <summary>
        /// Gets fired before the StartTime property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StartTimeChanging;
        
        /// <summary>
        /// Gets fired when the StartTime property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StartTimeChanged;
        
        /// <summary>
        /// Gets fired before the Value2Unit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value2UnitChanging;
        
        /// <summary>
        /// Gets fired when the Value2Unit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value2UnitChanged;
        
        /// <summary>
        /// Gets fired before the Value1Unit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value1UnitChanging;
        
        /// <summary>
        /// Gets fired when the Value1Unit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Value1UnitChanged;
    }
}

