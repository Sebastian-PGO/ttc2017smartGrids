//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.Production;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Generation.GenerationDynamics
{
    
    
    /// <summary>
    /// The public interface for SteamTurbine
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(SteamTurbine))]
    [XmlDefaultImplementationTypeAttribute(typeof(SteamTurbine))]
    public interface ISteamTurbine : IModelElement, IPrimeMover
    {
        
        /// <summary>
        /// The shaft2PowerLP1 property
        /// </summary>
        float Shaft2PowerLP1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft2PowerLP2 property
        /// </summary>
        float Shaft2PowerLP2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft2PowerHP property
        /// </summary>
        float Shaft2PowerHP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft1PowerIP property
        /// </summary>
        float Shaft1PowerIP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The reheater1TC property
        /// </summary>
        float Reheater1TC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft1PowerLP2 property
        /// </summary>
        float Shaft1PowerLP2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft1PowerLP1 property
        /// </summary>
        float Shaft1PowerLP1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The crossoverTC property
        /// </summary>
        float CrossoverTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The steamChestTC property
        /// </summary>
        float SteamChestTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft1PowerHP property
        /// </summary>
        float Shaft1PowerHP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The shaft2PowerIP property
        /// </summary>
        float Shaft2PowerIP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The reheater2TC property
        /// </summary>
        float Reheater2TC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SteamSupplys property
        /// </summary>
        IOrderedSetExpression<ISteamSupply> SteamSupplys
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Shaft2PowerLP1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerLP1Changing;
        
        /// <summary>
        /// Gets fired when the Shaft2PowerLP1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerLP1Changed;
        
        /// <summary>
        /// Gets fired before the Shaft2PowerLP2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerLP2Changing;
        
        /// <summary>
        /// Gets fired when the Shaft2PowerLP2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerLP2Changed;
        
        /// <summary>
        /// Gets fired before the Shaft2PowerHP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerHPChanging;
        
        /// <summary>
        /// Gets fired when the Shaft2PowerHP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerHPChanged;
        
        /// <summary>
        /// Gets fired before the Shaft1PowerIP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerIPChanging;
        
        /// <summary>
        /// Gets fired when the Shaft1PowerIP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerIPChanged;
        
        /// <summary>
        /// Gets fired before the Reheater1TC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reheater1TCChanging;
        
        /// <summary>
        /// Gets fired when the Reheater1TC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reheater1TCChanged;
        
        /// <summary>
        /// Gets fired before the Shaft1PowerLP2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerLP2Changing;
        
        /// <summary>
        /// Gets fired when the Shaft1PowerLP2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerLP2Changed;
        
        /// <summary>
        /// Gets fired before the Shaft1PowerLP1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerLP1Changing;
        
        /// <summary>
        /// Gets fired when the Shaft1PowerLP1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerLP1Changed;
        
        /// <summary>
        /// Gets fired before the CrossoverTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CrossoverTCChanging;
        
        /// <summary>
        /// Gets fired when the CrossoverTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CrossoverTCChanged;
        
        /// <summary>
        /// Gets fired before the SteamChestTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamChestTCChanging;
        
        /// <summary>
        /// Gets fired when the SteamChestTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamChestTCChanged;
        
        /// <summary>
        /// Gets fired before the Shaft1PowerHP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerHPChanging;
        
        /// <summary>
        /// Gets fired when the Shaft1PowerHP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft1PowerHPChanged;
        
        /// <summary>
        /// Gets fired before the Shaft2PowerIP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerIPChanging;
        
        /// <summary>
        /// Gets fired when the Shaft2PowerIP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Shaft2PowerIPChanged;
        
        /// <summary>
        /// Gets fired before the Reheater2TC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reheater2TCChanging;
        
        /// <summary>
        /// Gets fired when the Reheater2TC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Reheater2TCChanged;
    }
}

