//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.GenerationDynamics;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Generation.Production
{
    
    
    /// <summary>
    /// The public interface for TargetLevelSchedule
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(TargetLevelSchedule))]
    [XmlDefaultImplementationTypeAttribute(typeof(TargetLevelSchedule))]
    public interface ITargetLevelSchedule : IModelElement, ICurve
    {
        
        /// <summary>
        /// The highLevelLimit property
        /// </summary>
        float HighLevelLimit
        {
            get;
            set;
        }
        
        /// <summary>
        /// The lowLevelLimit property
        /// </summary>
        float LowLevelLimit
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Reservoir property
        /// </summary>
        IReservoir Reservoir
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the HighLevelLimit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HighLevelLimitChanging;
        
        /// <summary>
        /// Gets fired when the HighLevelLimit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HighLevelLimitChanged;
        
        /// <summary>
        /// Gets fired before the LowLevelLimit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LowLevelLimitChanging;
        
        /// <summary>
        /// Gets fired when the LowLevelLimit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LowLevelLimitChanged;
        
        /// <summary>
        /// Gets fired before the Reservoir property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReservoirChanging;
        
        /// <summary>
        /// Gets fired when the Reservoir property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReservoirChanged;
    }
}

