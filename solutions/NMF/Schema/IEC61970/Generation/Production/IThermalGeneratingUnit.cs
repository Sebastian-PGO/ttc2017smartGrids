using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.GenerationDynamics;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Generation.Production
{
    
    
    /// <summary>
    /// The public interface for ThermalGeneratingUnit
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ThermalGeneratingUnit))]
    [XmlDefaultImplementationTypeAttribute(typeof(ThermalGeneratingUnit))]
    public interface IThermalGeneratingUnit : IModelElement, IGeneratingUnit
    {
        
        /// <summary>
        /// The oMCost property
        /// </summary>
        float OMCost
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CombinedCyclePlant property
        /// </summary>
        ICombinedCyclePlant CombinedCyclePlant
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CAESPlant property
        /// </summary>
        ICAESPlant CAESPlant
        {
            get;
            set;
        }
        
        /// <summary>
        /// The EmissionCurves property
        /// </summary>
        IOrderedSetExpression<IEmissionCurve> EmissionCurves
        {
            get;
        }
        
        /// <summary>
        /// The HeatInputCurve property
        /// </summary>
        IHeatInputCurve HeatInputCurve
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ShutdownCurve property
        /// </summary>
        IShutdownCurve ShutdownCurve
        {
            get;
            set;
        }
        
        /// <summary>
        /// The HeatRateCurve property
        /// </summary>
        IHeatRateCurve HeatRateCurve
        {
            get;
            set;
        }
        
        /// <summary>
        /// The IncrementalHeatRateCurve property
        /// </summary>
        IIncrementalHeatRateCurve IncrementalHeatRateCurve
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CogenerationPlant property
        /// </summary>
        ICogenerationPlant CogenerationPlant
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FossilFuels property
        /// </summary>
        IOrderedSetExpression<IFossilFuel> FossilFuels
        {
            get;
        }
        
        /// <summary>
        /// The StartupModel property
        /// </summary>
        IStartupModel StartupModel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FuelAllocationSchedules property
        /// </summary>
        IOrderedSetExpression<IFuelAllocationSchedule> FuelAllocationSchedules
        {
            get;
        }
        
        /// <summary>
        /// The EmmissionAccounts property
        /// </summary>
        IOrderedSetExpression<IEmissionAccount> EmmissionAccounts
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the OMCost property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OMCostChanging;
        
        /// <summary>
        /// Gets fired when the OMCost property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OMCostChanged;
        
        /// <summary>
        /// Gets fired before the CombinedCyclePlant property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CombinedCyclePlantChanging;
        
        /// <summary>
        /// Gets fired when the CombinedCyclePlant property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CombinedCyclePlantChanged;
        
        /// <summary>
        /// Gets fired before the CAESPlant property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CAESPlantChanging;
        
        /// <summary>
        /// Gets fired when the CAESPlant property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CAESPlantChanged;
        
        /// <summary>
        /// Gets fired before the HeatInputCurve property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HeatInputCurveChanging;
        
        /// <summary>
        /// Gets fired when the HeatInputCurve property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HeatInputCurveChanged;
        
        /// <summary>
        /// Gets fired before the ShutdownCurve property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ShutdownCurveChanging;
        
        /// <summary>
        /// Gets fired when the ShutdownCurve property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ShutdownCurveChanged;
        
        /// <summary>
        /// Gets fired before the HeatRateCurve property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HeatRateCurveChanging;
        
        /// <summary>
        /// Gets fired when the HeatRateCurve property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HeatRateCurveChanged;
        
        /// <summary>
        /// Gets fired before the IncrementalHeatRateCurve property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IncrementalHeatRateCurveChanging;
        
        /// <summary>
        /// Gets fired when the IncrementalHeatRateCurve property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IncrementalHeatRateCurveChanged;
        
        /// <summary>
        /// Gets fired before the CogenerationPlant property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CogenerationPlantChanging;
        
        /// <summary>
        /// Gets fired when the CogenerationPlant property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CogenerationPlantChanged;
        
        /// <summary>
        /// Gets fired before the StartupModel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StartupModelChanging;
        
        /// <summary>
        /// Gets fired when the StartupModel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StartupModelChanged;
    }
}

