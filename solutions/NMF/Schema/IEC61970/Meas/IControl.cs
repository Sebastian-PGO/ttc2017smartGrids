using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Reservation;
using TTC2017.SmartGrids.CIM.IEC61970.SCADA;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Meas
{
    
    
    /// <summary>
    /// The public interface for Control
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Control))]
    [XmlDefaultImplementationTypeAttribute(typeof(Control))]
    public interface IControl : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The operationInProgress property
        /// </summary>
        bool OperationInProgress
        {
            get;
            set;
        }
        
        /// <summary>
        /// The timeStamp property
        /// </summary>
        DateTime TimeStamp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RegulatingCondEq property
        /// </summary>
        IRegulatingCondEq RegulatingCondEq
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ControlType property
        /// </summary>
        IControlType ControlType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Unit property
        /// </summary>
        IUnit Unit
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RemoteControl property
        /// </summary>
        IRemoteControl RemoteControl
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the OperationInProgress property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OperationInProgressChanging;
        
        /// <summary>
        /// Gets fired when the OperationInProgress property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OperationInProgressChanged;
        
        /// <summary>
        /// Gets fired before the TimeStamp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TimeStampChanging;
        
        /// <summary>
        /// Gets fired when the TimeStamp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TimeStampChanged;
        
        /// <summary>
        /// Gets fired before the RegulatingCondEq property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RegulatingCondEqChanging;
        
        /// <summary>
        /// Gets fired when the RegulatingCondEq property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RegulatingCondEqChanged;
        
        /// <summary>
        /// Gets fired before the ControlType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ControlTypeChanging;
        
        /// <summary>
        /// Gets fired when the ControlType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ControlTypeChanged;
        
        /// <summary>
        /// Gets fired before the Unit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitChanging;
        
        /// <summary>
        /// Gets fired when the Unit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitChanged;
        
        /// <summary>
        /// Gets fired before the RemoteControl property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteControlChanging;
        
        /// <summary>
        /// Gets fired when the RemoteControl property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteControlChanged;
    }
}

