//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets
{
    
    
    /// <summary>
    /// The public interface for StructureSupportInfo
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(StructureSupportInfo))]
    [XmlDefaultImplementationTypeAttribute(typeof(StructureSupportInfo))]
    public interface IStructureSupportInfo : IModelElement, IAssetInfo
    {
        
        /// <summary>
        /// The anchorKind property
        /// </summary>
        Nullable<AnchorKind> AnchorKind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The kind property
        /// </summary>
        Nullable<StructureSupportKind> Kind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The size property
        /// </summary>
        string Size
        {
            get;
            set;
        }
        
        /// <summary>
        /// The anchorRodCount property
        /// </summary>
        int AnchorRodCount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The length property
        /// </summary>
        float Length
        {
            get;
            set;
        }
        
        /// <summary>
        /// The anchorRodLength property
        /// </summary>
        float AnchorRodLength
        {
            get;
            set;
        }
        
        /// <summary>
        /// The direction property
        /// </summary>
        float Direction
        {
            get;
            set;
        }
        
        /// <summary>
        /// The SecuredStructure property
        /// </summary>
        IStructureInfo SecuredStructure
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the AnchorKind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnchorKindChanging;
        
        /// <summary>
        /// Gets fired when the AnchorKind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnchorKindChanged;
        
        /// <summary>
        /// Gets fired before the Kind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanging;
        
        /// <summary>
        /// Gets fired when the Kind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanged;
        
        /// <summary>
        /// Gets fired before the Size property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeChanging;
        
        /// <summary>
        /// Gets fired when the Size property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeChanged;
        
        /// <summary>
        /// Gets fired before the AnchorRodCount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnchorRodCountChanging;
        
        /// <summary>
        /// Gets fired when the AnchorRodCount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnchorRodCountChanged;
        
        /// <summary>
        /// Gets fired before the Length property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LengthChanging;
        
        /// <summary>
        /// Gets fired when the Length property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LengthChanged;
        
        /// <summary>
        /// Gets fired before the AnchorRodLength property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnchorRodLengthChanging;
        
        /// <summary>
        /// Gets fired when the AnchorRodLength property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AnchorRodLengthChanged;
        
        /// <summary>
        /// Gets fired before the Direction property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DirectionChanging;
        
        /// <summary>
        /// Gets fired when the Direction property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DirectionChanged;
        
        /// <summary>
        /// Gets fired before the SecuredStructure property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SecuredStructureChanging;
        
        /// <summary>
        /// Gets fired when the SecuredStructure property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SecuredStructureChanged;
    }
}

