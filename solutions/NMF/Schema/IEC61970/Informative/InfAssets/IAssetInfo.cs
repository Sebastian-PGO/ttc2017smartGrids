//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets
{
    
    
    /// <summary>
    /// The public interface for AssetInfo
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(AssetInfo))]
    [XmlDefaultImplementationTypeAttribute(typeof(AssetInfo))]
    public interface IAssetInfo : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The Asset property
        /// </summary>
        IAsset Asset
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TypeAsset property
        /// </summary>
        ITypeAsset TypeAsset
        {
            get;
            set;
        }
        
        /// <summary>
        /// The AssetModel property
        /// </summary>
        IAssetModel AssetModel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DimensionsInfo property
        /// </summary>
        IDimensionsInfo DimensionsInfo
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Asset property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetChanging;
        
        /// <summary>
        /// Gets fired when the Asset property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetChanged;
        
        /// <summary>
        /// Gets fired before the TypeAsset property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeAssetChanging;
        
        /// <summary>
        /// Gets fired when the TypeAsset property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeAssetChanged;
        
        /// <summary>
        /// Gets fired before the AssetModel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetModelChanging;
        
        /// <summary>
        /// Gets fired when the AssetModel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetModelChanged;
        
        /// <summary>
        /// Gets fired before the DimensionsInfo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DimensionsInfoChanging;
        
        /// <summary>
        /// Gets fired when the DimensionsInfo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DimensionsInfoChanged;
    }
}

