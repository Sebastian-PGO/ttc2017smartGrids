//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets
{
    
    
    /// <summary>
    /// The public interface for TransformerObservation
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(TransformerObservation))]
    [XmlDefaultImplementationTypeAttribute(typeof(TransformerObservation))]
    public interface ITransformerObservation : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The oilIFT property
        /// </summary>
        string OilIFT
        {
            get;
            set;
        }
        
        /// <summary>
        /// The hotSpotTemp property
        /// </summary>
        float HotSpotTemp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The oilDielectricStrength property
        /// </summary>
        float OilDielectricStrength
        {
            get;
            set;
        }
        
        /// <summary>
        /// The topOilTemp property
        /// </summary>
        float TopOilTemp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The pumpVibration property
        /// </summary>
        string PumpVibration
        {
            get;
            set;
        }
        
        /// <summary>
        /// The bushingTemp property
        /// </summary>
        float BushingTemp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The waterContent property
        /// </summary>
        string WaterContent
        {
            get;
            set;
        }
        
        /// <summary>
        /// The freqResp property
        /// </summary>
        string FreqResp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The furfuralDP property
        /// </summary>
        string FurfuralDP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The oilLevel property
        /// </summary>
        string OilLevel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The oilColor property
        /// </summary>
        string OilColor
        {
            get;
            set;
        }
        
        /// <summary>
        /// The dga property
        /// </summary>
        string Dga
        {
            get;
            set;
        }
        
        /// <summary>
        /// The oilNeutralizationNumber property
        /// </summary>
        string OilNeutralizationNumber
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TransformerAsset property
        /// </summary>
        ITransformerAsset TransformerAsset
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Transformer property
        /// </summary>
        IDistributionTransformer Transformer
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ProcedureDataSets property
        /// </summary>
        IOrderedSetExpression<IProcedureDataSet> ProcedureDataSets
        {
            get;
        }
        
        /// <summary>
        /// The BushingInsultationPFs property
        /// </summary>
        IOrderedSetExpression<IBushingInsulationPF> BushingInsultationPFs
        {
            get;
        }
        
        /// <summary>
        /// The WindingInsulationPFs property
        /// </summary>
        IOrderedSetExpression<IWindingInsulation> WindingInsulationPFs
        {
            get;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the OilIFT property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilIFTChanging;
        
        /// <summary>
        /// Gets fired when the OilIFT property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilIFTChanged;
        
        /// <summary>
        /// Gets fired before the HotSpotTemp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotSpotTempChanging;
        
        /// <summary>
        /// Gets fired when the HotSpotTemp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotSpotTempChanged;
        
        /// <summary>
        /// Gets fired before the OilDielectricStrength property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilDielectricStrengthChanging;
        
        /// <summary>
        /// Gets fired when the OilDielectricStrength property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilDielectricStrengthChanged;
        
        /// <summary>
        /// Gets fired before the TopOilTemp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TopOilTempChanging;
        
        /// <summary>
        /// Gets fired when the TopOilTemp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TopOilTempChanged;
        
        /// <summary>
        /// Gets fired before the PumpVibration property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PumpVibrationChanging;
        
        /// <summary>
        /// Gets fired when the PumpVibration property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PumpVibrationChanged;
        
        /// <summary>
        /// Gets fired before the BushingTemp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BushingTempChanging;
        
        /// <summary>
        /// Gets fired when the BushingTemp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BushingTempChanged;
        
        /// <summary>
        /// Gets fired before the WaterContent property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WaterContentChanging;
        
        /// <summary>
        /// Gets fired when the WaterContent property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WaterContentChanged;
        
        /// <summary>
        /// Gets fired before the FreqResp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FreqRespChanging;
        
        /// <summary>
        /// Gets fired when the FreqResp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FreqRespChanged;
        
        /// <summary>
        /// Gets fired before the FurfuralDP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FurfuralDPChanging;
        
        /// <summary>
        /// Gets fired when the FurfuralDP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FurfuralDPChanged;
        
        /// <summary>
        /// Gets fired before the OilLevel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilLevelChanging;
        
        /// <summary>
        /// Gets fired when the OilLevel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilLevelChanged;
        
        /// <summary>
        /// Gets fired before the OilColor property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilColorChanging;
        
        /// <summary>
        /// Gets fired when the OilColor property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilColorChanged;
        
        /// <summary>
        /// Gets fired before the Dga property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DgaChanging;
        
        /// <summary>
        /// Gets fired when the Dga property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DgaChanged;
        
        /// <summary>
        /// Gets fired before the OilNeutralizationNumber property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilNeutralizationNumberChanging;
        
        /// <summary>
        /// Gets fired when the OilNeutralizationNumber property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OilNeutralizationNumberChanged;
        
        /// <summary>
        /// Gets fired before the TransformerAsset property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerAssetChanging;
        
        /// <summary>
        /// Gets fired when the TransformerAsset property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerAssetChanged;
        
        /// <summary>
        /// Gets fired before the Transformer property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerChanging;
        
        /// <summary>
        /// Gets fired when the Transformer property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
    }
}

