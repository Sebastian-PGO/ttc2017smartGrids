using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport
{
    
    
    /// <summary>
    /// The public interface for ErpJournalEntry
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ErpJournalEntry))]
    [XmlDefaultImplementationTypeAttribute(typeof(ErpJournalEntry))]
    public interface IErpJournalEntry : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The accountID property
        /// </summary>
        string AccountID
        {
            get;
            set;
        }
        
        /// <summary>
        /// The amount property
        /// </summary>
        float Amount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The postingDateTime property
        /// </summary>
        DateTime PostingDateTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transactionDateTime property
        /// </summary>
        DateTime TransactionDateTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sourceID property
        /// </summary>
        string SourceID
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpLedgerEntry property
        /// </summary>
        IErpLedgerEntry ErpLedgerEntry
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpJournal property
        /// </summary>
        IErpJournal ErpJournal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CostTypes property
        /// </summary>
        IOrderedSetExpression<ICostType> CostTypes
        {
            get;
        }
        
        /// <summary>
        /// The ErpInvoiceLineItem property
        /// </summary>
        IErpInvoiceLineItem ErpInvoiceLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpPayableLineItems property
        /// </summary>
        IOrderedSetExpression<IErpPayableLineItem> ErpPayableLineItems
        {
            get;
        }
        
        /// <summary>
        /// The ErpRecLineItems property
        /// </summary>
        IOrderedSetExpression<IErpRecLineItem> ErpRecLineItems
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the AccountID property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AccountIDChanging;
        
        /// <summary>
        /// Gets fired when the AccountID property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AccountIDChanged;
        
        /// <summary>
        /// Gets fired before the Amount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountChanging;
        
        /// <summary>
        /// Gets fired when the Amount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountChanged;
        
        /// <summary>
        /// Gets fired before the PostingDateTime property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PostingDateTimeChanging;
        
        /// <summary>
        /// Gets fired when the PostingDateTime property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PostingDateTimeChanged;
        
        /// <summary>
        /// Gets fired before the TransactionDateTime property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionDateTimeChanging;
        
        /// <summary>
        /// Gets fired when the TransactionDateTime property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionDateTimeChanged;
        
        /// <summary>
        /// Gets fired before the SourceID property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SourceIDChanging;
        
        /// <summary>
        /// Gets fired when the SourceID property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SourceIDChanged;
        
        /// <summary>
        /// Gets fired before the ErpLedgerEntry property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpLedgerEntryChanging;
        
        /// <summary>
        /// Gets fired when the ErpLedgerEntry property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpLedgerEntryChanged;
        
        /// <summary>
        /// Gets fired before the ErpJournal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpJournalChanging;
        
        /// <summary>
        /// Gets fired when the ErpJournal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpJournalChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
        
        /// <summary>
        /// Gets fired before the ErpInvoiceLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpInvoiceLineItemChanging;
        
        /// <summary>
        /// Gets fired when the ErpInvoiceLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpInvoiceLineItemChanged;
    }
}

