using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport
{
    
    
    /// <summary>
    /// The public interface for ErpInvoiceLineItem
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ErpInvoiceLineItem))]
    [XmlDefaultImplementationTypeAttribute(typeof(ErpInvoiceLineItem))]
    public interface IErpInvoiceLineItem : IModelElement, IDocument
    {
        
        /// <summary>
        /// The netAmount property
        /// </summary>
        float NetAmount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The lineAmount property
        /// </summary>
        float LineAmount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The previousAmount property
        /// </summary>
        float PreviousAmount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The kind property
        /// </summary>
        Nullable<ErpInvoiceLineItemKind> Kind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The glDateTime property
        /// </summary>
        DateTime GlDateTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// The glAccount property
        /// </summary>
        string GlAccount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The lineNumber property
        /// </summary>
        string LineNumber
        {
            get;
            set;
        }
        
        /// <summary>
        /// The lineVersion property
        /// </summary>
        string LineVersion
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpQuoteLineItem property
        /// </summary>
        IErpQuoteLineItem ErpQuoteLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpPayableLineItem property
        /// </summary>
        IErpPayableLineItem ErpPayableLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpRecLineItem property
        /// </summary>
        IErpRecLineItem ErpRecLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Settlements property
        /// </summary>
        IOrderedSetExpression<ISettlement> Settlements
        {
            get;
        }
        
        /// <summary>
        /// The WorkBillingInfos property
        /// </summary>
        IOrderedSetExpression<IWorkBillingInfo> WorkBillingInfos
        {
            get;
        }
        
        /// <summary>
        /// The MarketFactors property
        /// </summary>
        IOrderedSetExpression<IMarketFactors> MarketFactors
        {
            get;
        }
        
        /// <summary>
        /// The ErpPayments property
        /// </summary>
        IOrderedSetExpression<IErpPayment> ErpPayments
        {
            get;
        }
        
        /// <summary>
        /// The ContainerErpInvoiceLineItem property
        /// </summary>
        IErpInvoiceLineItem ContainerErpInvoiceLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpRecDelvLineItem property
        /// </summary>
        IErpRecDelvLineItem ErpRecDelvLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The billPeriod property
        /// </summary>
        IDateTimeInterval BillPeriod
        {
            get;
            set;
        }
        
        /// <summary>
        /// The UserAttributes property
        /// </summary>
        IOrderedSetExpression<IUserAttribute> UserAttributes
        {
            get;
        }
        
        /// <summary>
        /// The ErpInvoice property
        /// </summary>
        IErpInvoice ErpInvoice
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CustomerBillingInfos property
        /// </summary>
        IOrderedSetExpression<ICustomerBillingInfo> CustomerBillingInfos
        {
            get;
        }
        
        /// <summary>
        /// The ComponentErpInvoiceLineItems property
        /// </summary>
        IOrderedSetExpression<IErpInvoiceLineItem> ComponentErpInvoiceLineItems
        {
            get;
        }
        
        /// <summary>
        /// The ErpJournalEntries property
        /// </summary>
        IOrderedSetExpression<IErpJournalEntry> ErpJournalEntries
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the NetAmount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NetAmountChanging;
        
        /// <summary>
        /// Gets fired when the NetAmount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NetAmountChanged;
        
        /// <summary>
        /// Gets fired before the LineAmount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LineAmountChanging;
        
        /// <summary>
        /// Gets fired when the LineAmount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LineAmountChanged;
        
        /// <summary>
        /// Gets fired before the PreviousAmount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousAmountChanging;
        
        /// <summary>
        /// Gets fired when the PreviousAmount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousAmountChanged;
        
        /// <summary>
        /// Gets fired before the Kind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanging;
        
        /// <summary>
        /// Gets fired when the Kind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanged;
        
        /// <summary>
        /// Gets fired before the GlDateTime property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GlDateTimeChanging;
        
        /// <summary>
        /// Gets fired when the GlDateTime property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GlDateTimeChanged;
        
        /// <summary>
        /// Gets fired before the GlAccount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GlAccountChanging;
        
        /// <summary>
        /// Gets fired when the GlAccount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GlAccountChanged;
        
        /// <summary>
        /// Gets fired before the LineNumber property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LineNumberChanging;
        
        /// <summary>
        /// Gets fired when the LineNumber property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LineNumberChanged;
        
        /// <summary>
        /// Gets fired before the LineVersion property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LineVersionChanging;
        
        /// <summary>
        /// Gets fired when the LineVersion property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LineVersionChanged;
        
        /// <summary>
        /// Gets fired before the ErpQuoteLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpQuoteLineItemChanging;
        
        /// <summary>
        /// Gets fired when the ErpQuoteLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpQuoteLineItemChanged;
        
        /// <summary>
        /// Gets fired before the ErpPayableLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPayableLineItemChanging;
        
        /// <summary>
        /// Gets fired when the ErpPayableLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPayableLineItemChanged;
        
        /// <summary>
        /// Gets fired before the ErpRecLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpRecLineItemChanging;
        
        /// <summary>
        /// Gets fired when the ErpRecLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpRecLineItemChanged;
        
        /// <summary>
        /// Gets fired before the ContainerErpInvoiceLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ContainerErpInvoiceLineItemChanging;
        
        /// <summary>
        /// Gets fired when the ContainerErpInvoiceLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ContainerErpInvoiceLineItemChanged;
        
        /// <summary>
        /// Gets fired before the ErpRecDelvLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpRecDelvLineItemChanging;
        
        /// <summary>
        /// Gets fired when the ErpRecDelvLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpRecDelvLineItemChanged;
        
        /// <summary>
        /// Gets fired before the BillPeriod property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillPeriodChanging;
        
        /// <summary>
        /// Gets fired when the BillPeriod property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillPeriodChanged;
        
        /// <summary>
        /// Gets fired before the ErpInvoice property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpInvoiceChanging;
        
        /// <summary>
        /// Gets fired when the ErpInvoice property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpInvoiceChanged;
    }
}

