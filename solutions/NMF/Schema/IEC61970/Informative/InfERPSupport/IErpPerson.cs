using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport
{
    
    
    /// <summary>
    /// The public interface for ErpPerson
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ErpPerson))]
    [XmlDefaultImplementationTypeAttribute(typeof(ErpPerson))]
    public interface IErpPerson : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The category property
        /// </summary>
        string Category
        {
            get;
            set;
        }
        
        /// <summary>
        /// The firstName property
        /// </summary>
        string FirstName
        {
            get;
            set;
        }
        
        /// <summary>
        /// The lastName property
        /// </summary>
        string LastName
        {
            get;
            set;
        }
        
        /// <summary>
        /// The mName property
        /// </summary>
        string MName
        {
            get;
            set;
        }
        
        /// <summary>
        /// The governmentID property
        /// </summary>
        string GovernmentID
        {
            get;
            set;
        }
        
        /// <summary>
        /// The specialNeed property
        /// </summary>
        string SpecialNeed
        {
            get;
            set;
        }
        
        /// <summary>
        /// The prefix property
        /// </summary>
        string Prefix
        {
            get;
            set;
        }
        
        /// <summary>
        /// The suffix property
        /// </summary>
        string Suffix
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CallBacks property
        /// </summary>
        IOrderedSetExpression<ICallBack> CallBacks
        {
            get;
        }
        
        /// <summary>
        /// The ServiceLocation property
        /// </summary>
        IServiceLocation ServiceLocation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DocumentRoles property
        /// </summary>
        IOrderedSetExpression<IDocErpPersonRole> DocumentRoles
        {
            get;
        }
        
        /// <summary>
        /// The SwitchingStepRoles property
        /// </summary>
        IOrderedSetExpression<IErpPersonScheduleStepRole> SwitchingStepRoles
        {
            get;
        }
        
        /// <summary>
        /// The ChangeItems property
        /// </summary>
        IOrderedSetExpression<IChangeItem> ChangeItems
        {
            get;
        }
        
        /// <summary>
        /// The Skills property
        /// </summary>
        IOrderedSetExpression<ISkill> Skills
        {
            get;
        }
        
        /// <summary>
        /// The electronicAddress property
        /// </summary>
        IElectronicAddress ElectronicAddress
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpOrganisationRoles property
        /// </summary>
        IOrderedSetExpression<IOrgErpPersonRole> ErpOrganisationRoles
        {
            get;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// The LaborItems property
        /// </summary>
        IOrderedSetExpression<ILaborItem> LaborItems
        {
            get;
        }
        
        /// <summary>
        /// The Crafts property
        /// </summary>
        IOrderedSetExpression<ICraft> Crafts
        {
            get;
        }
        
        /// <summary>
        /// The mobilePhone property
        /// </summary>
        ITelephoneNumber MobilePhone
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpCompetency property
        /// </summary>
        IErpCompetency ErpCompetency
        {
            get;
            set;
        }
        
        /// <summary>
        /// The LandPropertyRoles property
        /// </summary>
        IOrderedSetExpression<IPersonPropertyRole> LandPropertyRoles
        {
            get;
        }
        
        /// <summary>
        /// The landlinePhone property
        /// </summary>
        ITelephoneNumber LandlinePhone
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MeasurementValues property
        /// </summary>
        IOrderedSetExpression<IMeasurementValue> MeasurementValues
        {
            get;
        }
        
        /// <summary>
        /// The ActivityRecords property
        /// </summary>
        IOrderedSetExpression<IActivityRecord> ActivityRecords
        {
            get;
        }
        
        /// <summary>
        /// The Crews property
        /// </summary>
        IOrderedSetExpression<ICrew> Crews
        {
            get;
        }
        
        /// <summary>
        /// The Appointments property
        /// </summary>
        IOrderedSetExpression<IAppointment> Appointments
        {
            get;
        }
        
        /// <summary>
        /// The ErpPersonnel property
        /// </summary>
        IErpPersonnel ErpPersonnel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CustomerData property
        /// </summary>
        ICustomer CustomerData
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Category property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CategoryChanging;
        
        /// <summary>
        /// Gets fired when the Category property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CategoryChanged;
        
        /// <summary>
        /// Gets fired before the FirstName property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FirstNameChanging;
        
        /// <summary>
        /// Gets fired when the FirstName property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FirstNameChanged;
        
        /// <summary>
        /// Gets fired before the LastName property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LastNameChanging;
        
        /// <summary>
        /// Gets fired when the LastName property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LastNameChanged;
        
        /// <summary>
        /// Gets fired before the MName property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MNameChanging;
        
        /// <summary>
        /// Gets fired when the MName property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MNameChanged;
        
        /// <summary>
        /// Gets fired before the GovernmentID property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GovernmentIDChanging;
        
        /// <summary>
        /// Gets fired when the GovernmentID property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GovernmentIDChanged;
        
        /// <summary>
        /// Gets fired before the SpecialNeed property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SpecialNeedChanging;
        
        /// <summary>
        /// Gets fired when the SpecialNeed property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SpecialNeedChanged;
        
        /// <summary>
        /// Gets fired before the Prefix property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PrefixChanging;
        
        /// <summary>
        /// Gets fired when the Prefix property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PrefixChanged;
        
        /// <summary>
        /// Gets fired before the Suffix property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SuffixChanging;
        
        /// <summary>
        /// Gets fired when the Suffix property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SuffixChanged;
        
        /// <summary>
        /// Gets fired before the ServiceLocation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceLocationChanging;
        
        /// <summary>
        /// Gets fired when the ServiceLocation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceLocationChanged;
        
        /// <summary>
        /// Gets fired before the ElectronicAddress property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ElectronicAddressChanging;
        
        /// <summary>
        /// Gets fired when the ElectronicAddress property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ElectronicAddressChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
        
        /// <summary>
        /// Gets fired before the MobilePhone property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MobilePhoneChanging;
        
        /// <summary>
        /// Gets fired when the MobilePhone property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MobilePhoneChanged;
        
        /// <summary>
        /// Gets fired before the ErpCompetency property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpCompetencyChanging;
        
        /// <summary>
        /// Gets fired when the ErpCompetency property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpCompetencyChanged;
        
        /// <summary>
        /// Gets fired before the LandlinePhone property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LandlinePhoneChanging;
        
        /// <summary>
        /// Gets fired when the LandlinePhone property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LandlinePhoneChanged;
        
        /// <summary>
        /// Gets fired before the ErpPersonnel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPersonnelChanging;
        
        /// <summary>
        /// Gets fired when the ErpPersonnel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPersonnelChanged;
        
        /// <summary>
        /// Gets fired before the CustomerData property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerDataChanging;
        
        /// <summary>
        /// Gets fired when the CustomerData property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerDataChanged;
    }
}

