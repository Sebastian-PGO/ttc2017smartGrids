using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Outage;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations
{
    
    
    /// <summary>
    /// The public interface for ChangeItem
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ChangeItem))]
    [XmlDefaultImplementationTypeAttribute(typeof(ChangeItem))]
    public interface IChangeItem : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The kind property
        /// </summary>
        Nullable<ChangeItemKind> Kind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sequenceNumber property
        /// </summary>
        int SequenceNumber
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ChangeSet property
        /// </summary>
        IChangeSet ChangeSet
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Asset property
        /// </summary>
        IAsset Asset
        {
            get;
            set;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// The NetworkDataSet property
        /// </summary>
        INetworkDataSet NetworkDataSet
        {
            get;
            set;
        }
        
        /// <summary>
        /// The GmlSelector property
        /// </summary>
        IGmlSelector GmlSelector
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Organisation property
        /// </summary>
        IErpOrganisation Organisation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The GmlObservation property
        /// </summary>
        IGmlObservation GmlObservation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Location property
        /// </summary>
        ILocation Location
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PowerSystemResource property
        /// </summary>
        IPowerSystemResource PowerSystemResource
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Document property
        /// </summary>
        IDocument Document
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpPerson property
        /// </summary>
        IErpPerson ErpPerson
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Kind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanging;
        
        /// <summary>
        /// Gets fired when the Kind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanged;
        
        /// <summary>
        /// Gets fired before the SequenceNumber property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SequenceNumberChanging;
        
        /// <summary>
        /// Gets fired when the SequenceNumber property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SequenceNumberChanged;
        
        /// <summary>
        /// Gets fired before the ChangeSet property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChangeSetChanging;
        
        /// <summary>
        /// Gets fired when the ChangeSet property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChangeSetChanged;
        
        /// <summary>
        /// Gets fired before the Asset property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetChanging;
        
        /// <summary>
        /// Gets fired when the Asset property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
        
        /// <summary>
        /// Gets fired before the NetworkDataSet property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NetworkDataSetChanging;
        
        /// <summary>
        /// Gets fired when the NetworkDataSet property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NetworkDataSetChanged;
        
        /// <summary>
        /// Gets fired before the GmlSelector property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GmlSelectorChanging;
        
        /// <summary>
        /// Gets fired when the GmlSelector property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GmlSelectorChanged;
        
        /// <summary>
        /// Gets fired before the Organisation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OrganisationChanging;
        
        /// <summary>
        /// Gets fired when the Organisation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OrganisationChanged;
        
        /// <summary>
        /// Gets fired before the GmlObservation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GmlObservationChanging;
        
        /// <summary>
        /// Gets fired when the GmlObservation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GmlObservationChanged;
        
        /// <summary>
        /// Gets fired before the Location property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LocationChanging;
        
        /// <summary>
        /// Gets fired when the Location property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LocationChanged;
        
        /// <summary>
        /// Gets fired before the PowerSystemResource property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerSystemResourceChanging;
        
        /// <summary>
        /// Gets fired when the PowerSystemResource property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PowerSystemResourceChanged;
        
        /// <summary>
        /// Gets fired before the Document property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DocumentChanging;
        
        /// <summary>
        /// Gets fired when the Document property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DocumentChanged;
        
        /// <summary>
        /// Gets fired before the ErpPerson property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPersonChanging;
        
        /// <summary>
        /// Gets fired when the ErpPerson property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPersonChanged;
    }
}

