//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.Contingency;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.Production;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.LoadModel;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations
{
    
    
    /// <summary>
    /// The public interface for PassThroughBill
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(PassThroughBill))]
    [XmlDefaultImplementationTypeAttribute(typeof(PassThroughBill))]
    public interface IPassThroughBill : IModelElement, IDocument
    {
        
        /// <summary>
        /// The billEnd property
        /// </summary>
        DateTime BillEnd
        {
            get;
            set;
        }
        
        /// <summary>
        /// The effectiveDate property
        /// </summary>
        DateTime EffectiveDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// The serviceEnd property
        /// </summary>
        DateTime ServiceEnd
        {
            get;
            set;
        }
        
        /// <summary>
        /// The isProfiled property
        /// </summary>
        bool IsProfiled
        {
            get;
            set;
        }
        
        /// <summary>
        /// The previousEnd property
        /// </summary>
        DateTime PreviousEnd
        {
            get;
            set;
        }
        
        /// <summary>
        /// The amount property
        /// </summary>
        float Amount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The timeZone property
        /// </summary>
        string TimeZone
        {
            get;
            set;
        }
        
        /// <summary>
        /// The billedTo property
        /// </summary>
        string BilledTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The isDisputed property
        /// </summary>
        bool IsDisputed
        {
            get;
            set;
        }
        
        /// <summary>
        /// The providedBy property
        /// </summary>
        string ProvidedBy
        {
            get;
            set;
        }
        
        /// <summary>
        /// The billStart property
        /// </summary>
        DateTime BillStart
        {
            get;
            set;
        }
        
        /// <summary>
        /// The previousStart property
        /// </summary>
        DateTime PreviousStart
        {
            get;
            set;
        }
        
        /// <summary>
        /// The serviceStart property
        /// </summary>
        DateTime ServiceStart
        {
            get;
            set;
        }
        
        /// <summary>
        /// The productCode property
        /// </summary>
        string ProductCode
        {
            get;
            set;
        }
        
        /// <summary>
        /// The billRunType property
        /// </summary>
        string BillRunType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transactionType property
        /// </summary>
        string TransactionType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The tradeDate property
        /// </summary>
        DateTime TradeDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// The price property
        /// </summary>
        float Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// The taxAmount property
        /// </summary>
        float TaxAmount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The soldTo property
        /// </summary>
        string SoldTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transactionDate property
        /// </summary>
        DateTime TransactionDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// The paidTo property
        /// </summary>
        string PaidTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The quantity property
        /// </summary>
        object Quantity
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MarketStatementLineItem property
        /// </summary>
        IMarketStatementLineItem MarketStatementLineItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The UserAttributes property
        /// </summary>
        IOrderedSetExpression<IUserAttribute> UserAttributes
        {
            get;
        }
        
        /// <summary>
        /// The ChargeProfiles property
        /// </summary>
        IOrderedSetExpression<IChargeProfile> ChargeProfiles
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the BillEnd property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillEndChanging;
        
        /// <summary>
        /// Gets fired when the BillEnd property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillEndChanged;
        
        /// <summary>
        /// Gets fired before the EffectiveDate property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EffectiveDateChanging;
        
        /// <summary>
        /// Gets fired when the EffectiveDate property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EffectiveDateChanged;
        
        /// <summary>
        /// Gets fired before the ServiceEnd property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceEndChanging;
        
        /// <summary>
        /// Gets fired when the ServiceEnd property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceEndChanged;
        
        /// <summary>
        /// Gets fired before the IsProfiled property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsProfiledChanging;
        
        /// <summary>
        /// Gets fired when the IsProfiled property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsProfiledChanged;
        
        /// <summary>
        /// Gets fired before the PreviousEnd property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousEndChanging;
        
        /// <summary>
        /// Gets fired when the PreviousEnd property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousEndChanged;
        
        /// <summary>
        /// Gets fired before the Amount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountChanging;
        
        /// <summary>
        /// Gets fired when the Amount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountChanged;
        
        /// <summary>
        /// Gets fired before the TimeZone property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TimeZoneChanging;
        
        /// <summary>
        /// Gets fired when the TimeZone property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TimeZoneChanged;
        
        /// <summary>
        /// Gets fired before the BilledTo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BilledToChanging;
        
        /// <summary>
        /// Gets fired when the BilledTo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BilledToChanged;
        
        /// <summary>
        /// Gets fired before the IsDisputed property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsDisputedChanging;
        
        /// <summary>
        /// Gets fired when the IsDisputed property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsDisputedChanged;
        
        /// <summary>
        /// Gets fired before the ProvidedBy property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProvidedByChanging;
        
        /// <summary>
        /// Gets fired when the ProvidedBy property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProvidedByChanged;
        
        /// <summary>
        /// Gets fired before the BillStart property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillStartChanging;
        
        /// <summary>
        /// Gets fired when the BillStart property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillStartChanged;
        
        /// <summary>
        /// Gets fired before the PreviousStart property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousStartChanging;
        
        /// <summary>
        /// Gets fired when the PreviousStart property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousStartChanged;
        
        /// <summary>
        /// Gets fired before the ServiceStart property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceStartChanging;
        
        /// <summary>
        /// Gets fired when the ServiceStart property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceStartChanged;
        
        /// <summary>
        /// Gets fired before the ProductCode property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProductCodeChanging;
        
        /// <summary>
        /// Gets fired when the ProductCode property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProductCodeChanged;
        
        /// <summary>
        /// Gets fired before the BillRunType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillRunTypeChanging;
        
        /// <summary>
        /// Gets fired when the BillRunType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillRunTypeChanged;
        
        /// <summary>
        /// Gets fired before the TransactionType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionTypeChanging;
        
        /// <summary>
        /// Gets fired when the TransactionType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionTypeChanged;
        
        /// <summary>
        /// Gets fired before the TradeDate property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TradeDateChanging;
        
        /// <summary>
        /// Gets fired when the TradeDate property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TradeDateChanged;
        
        /// <summary>
        /// Gets fired before the Price property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PriceChanging;
        
        /// <summary>
        /// Gets fired when the Price property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PriceChanged;
        
        /// <summary>
        /// Gets fired before the TaxAmount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TaxAmountChanging;
        
        /// <summary>
        /// Gets fired when the TaxAmount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TaxAmountChanged;
        
        /// <summary>
        /// Gets fired before the SoldTo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SoldToChanging;
        
        /// <summary>
        /// Gets fired when the SoldTo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SoldToChanged;
        
        /// <summary>
        /// Gets fired before the TransactionDate property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionDateChanging;
        
        /// <summary>
        /// Gets fired when the TransactionDate property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionDateChanged;
        
        /// <summary>
        /// Gets fired before the PaidTo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PaidToChanging;
        
        /// <summary>
        /// Gets fired when the PaidTo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PaidToChanged;
        
        /// <summary>
        /// Gets fired before the Quantity property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanging;
        
        /// <summary>
        /// Gets fired when the Quantity property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanged;
        
        /// <summary>
        /// Gets fired before the MarketStatementLineItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketStatementLineItemChanging;
        
        /// <summary>
        /// Gets fired when the MarketStatementLineItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketStatementLineItemChanged;
    }
}

