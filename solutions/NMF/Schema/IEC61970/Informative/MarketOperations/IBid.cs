//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.Contingency;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.Production;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.LoadModel;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations
{
    
    
    /// <summary>
    /// The public interface for Bid
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Bid))]
    [XmlDefaultImplementationTypeAttribute(typeof(Bid))]
    public interface IBid : IModelElement, IDocument
    {
        
        /// <summary>
        /// The stopTime property
        /// </summary>
        DateTime StopTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// The marketType property
        /// </summary>
        string MarketType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The startTime property
        /// </summary>
        DateTime StartTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ProductBids property
        /// </summary>
        IOrderedSetExpression<IProductBid> ProductBids
        {
            get;
        }
        
        /// <summary>
        /// The BidClearing property
        /// </summary>
        IBidClearing BidClearing
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Market property
        /// </summary>
        IMarket Market
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the StopTime property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StopTimeChanging;
        
        /// <summary>
        /// Gets fired when the StopTime property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StopTimeChanged;
        
        /// <summary>
        /// Gets fired before the MarketType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketTypeChanging;
        
        /// <summary>
        /// Gets fired when the MarketType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketTypeChanged;
        
        /// <summary>
        /// Gets fired before the StartTime property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StartTimeChanging;
        
        /// <summary>
        /// Gets fired when the StartTime property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StartTimeChanged;
        
        /// <summary>
        /// Gets fired before the BidClearing property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BidClearingChanging;
        
        /// <summary>
        /// Gets fired when the BidClearing property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BidClearingChanged;
        
        /// <summary>
        /// Gets fired before the Market property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketChanging;
        
        /// <summary>
        /// Gets fired when the Market property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketChanged;
    }
}

