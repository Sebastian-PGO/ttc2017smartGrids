//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.Contingency;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.Production;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.LoadModel;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations
{
    
    
    /// <summary>
    /// The public interface for BillDeterminant
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(BillDeterminant))]
    [XmlDefaultImplementationTypeAttribute(typeof(BillDeterminant))]
    public interface IBillDeterminant : IModelElement, IDocument
    {
        
        /// <summary>
        /// The precisionLevel property
        /// </summary>
        string PrecisionLevel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The unitOfMeasure property
        /// </summary>
        string UnitOfMeasure
        {
            get;
            set;
        }
        
        /// <summary>
        /// The calculationLevel property
        /// </summary>
        string CalculationLevel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The configVersion property
        /// </summary>
        string ConfigVersion
        {
            get;
            set;
        }
        
        /// <summary>
        /// The numberInterval property
        /// </summary>
        int NumberInterval
        {
            get;
            set;
        }
        
        /// <summary>
        /// The UserAttributes property
        /// </summary>
        IOrderedSetExpression<IUserAttribute> UserAttributes
        {
            get;
        }
        
        /// <summary>
        /// The ChargeProfileData property
        /// </summary>
        IOrderedSetExpression<IChargeProfileData> ChargeProfileData
        {
            get;
        }
        
        /// <summary>
        /// The ChargeProfile property
        /// </summary>
        IChargeProfile ChargeProfile
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the PrecisionLevel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PrecisionLevelChanging;
        
        /// <summary>
        /// Gets fired when the PrecisionLevel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PrecisionLevelChanged;
        
        /// <summary>
        /// Gets fired before the UnitOfMeasure property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitOfMeasureChanging;
        
        /// <summary>
        /// Gets fired when the UnitOfMeasure property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitOfMeasureChanged;
        
        /// <summary>
        /// Gets fired before the CalculationLevel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CalculationLevelChanging;
        
        /// <summary>
        /// Gets fired when the CalculationLevel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CalculationLevelChanged;
        
        /// <summary>
        /// Gets fired before the ConfigVersion property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ConfigVersionChanging;
        
        /// <summary>
        /// Gets fired when the ConfigVersion property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ConfigVersionChanged;
        
        /// <summary>
        /// Gets fired before the NumberInterval property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NumberIntervalChanging;
        
        /// <summary>
        /// Gets fired when the NumberInterval property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NumberIntervalChanged;
        
        /// <summary>
        /// Gets fired before the ChargeProfile property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChargeProfileChanging;
        
        /// <summary>
        /// Gets fired when the ChargeProfile property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChargeProfileChanged;
    }
}

