//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.Reservation
{
    
    
    /// <summary>
    /// The public interface for ServicePoint
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ServicePoint))]
    [XmlDefaultImplementationTypeAttribute(typeof(ServicePoint))]
    public interface IServicePoint : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The CustomerConsumer property
        /// </summary>
        ICustomerConsumer CustomerConsumer
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TransmissionProvider property
        /// </summary>
        ITransmissionProvider TransmissionProvider
        {
            get;
            set;
        }
        
        /// <summary>
        /// The HasAPOR_ property
        /// </summary>
        IOrderedSetExpression<ITransmissionPath> HasAPOR_
        {
            get;
        }
        
        /// <summary>
        /// The GenerationProvider property
        /// </summary>
        IGenerationProvider GenerationProvider
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Declare_TiePoint property
        /// </summary>
        ITiePoint Declare_TiePoint
        {
            get;
            set;
        }
        
        /// <summary>
        /// The HasAPOD_ property
        /// </summary>
        IOrderedSetExpression<ITransmissionPath> HasAPOD_
        {
            get;
        }
        
        /// <summary>
        /// The EnergyProducts property
        /// </summary>
        IOrderedSetExpression<IEnergyProduct> EnergyProducts
        {
            get;
        }
        
        /// <summary>
        /// The MemberOf property
        /// </summary>
        ISubControlArea MemberOf
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the CustomerConsumer property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerConsumerChanging;
        
        /// <summary>
        /// Gets fired when the CustomerConsumer property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerConsumerChanged;
        
        /// <summary>
        /// Gets fired before the TransmissionProvider property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransmissionProviderChanging;
        
        /// <summary>
        /// Gets fired when the TransmissionProvider property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransmissionProviderChanged;
        
        /// <summary>
        /// Gets fired before the GenerationProvider property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GenerationProviderChanging;
        
        /// <summary>
        /// Gets fired when the GenerationProvider property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GenerationProviderChanged;
        
        /// <summary>
        /// Gets fired before the Declare_TiePoint property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Declare_TiePointChanging;
        
        /// <summary>
        /// Gets fired when the Declare_TiePoint property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Declare_TiePointChanged;
        
        /// <summary>
        /// Gets fired before the MemberOf property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MemberOfChanging;
        
        /// <summary>
        /// Gets fired when the MemberOf property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MemberOfChanged;
    }
}

