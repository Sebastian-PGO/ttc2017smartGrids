using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork
{
    
    
    /// <summary>
    /// The public interface for CompatibleUnit
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(CompatibleUnit))]
    [XmlDefaultImplementationTypeAttribute(typeof(CompatibleUnit))]
    public interface ICompatibleUnit : IModelElement, IDocument
    {
        
        /// <summary>
        /// The estCost property
        /// </summary>
        float EstCost
        {
            get;
            set;
        }
        
        /// <summary>
        /// The quantity property
        /// </summary>
        string Quantity
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DesignLocationCUs property
        /// </summary>
        IOrderedSetExpression<IDesignLocationCU> DesignLocationCUs
        {
            get;
        }
        
        /// <summary>
        /// The PropertyUnit property
        /// </summary>
        IPropertyUnit PropertyUnit
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CULaborItems property
        /// </summary>
        IOrderedSetExpression<ICULaborItem> CULaborItems
        {
            get;
        }
        
        /// <summary>
        /// The CUMaterialItems property
        /// </summary>
        IOrderedSetExpression<ICUMaterialItem> CUMaterialItems
        {
            get;
        }
        
        /// <summary>
        /// The CUGroup property
        /// </summary>
        ICUGroup CUGroup
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CUWorkEquipmentItems property
        /// </summary>
        IOrderedSetExpression<ICUWorkEquipmentItem> CUWorkEquipmentItems
        {
            get;
        }
        
        /// <summary>
        /// The CostType property
        /// </summary>
        ICostType CostType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Procedures property
        /// </summary>
        IOrderedSetExpression<IProcedure> Procedures
        {
            get;
        }
        
        /// <summary>
        /// The CUAssets property
        /// </summary>
        IOrderedSetExpression<ICUAsset> CUAssets
        {
            get;
        }
        
        /// <summary>
        /// The CUAllowableAction property
        /// </summary>
        ICUAllowableAction CUAllowableAction
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CUContractorItems property
        /// </summary>
        IOrderedSetExpression<ICUContractorItem> CUContractorItems
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the EstCost property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EstCostChanging;
        
        /// <summary>
        /// Gets fired when the EstCost property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EstCostChanged;
        
        /// <summary>
        /// Gets fired before the Quantity property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanging;
        
        /// <summary>
        /// Gets fired when the Quantity property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanged;
        
        /// <summary>
        /// Gets fired before the PropertyUnit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PropertyUnitChanging;
        
        /// <summary>
        /// Gets fired when the PropertyUnit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PropertyUnitChanged;
        
        /// <summary>
        /// Gets fired before the CUGroup property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CUGroupChanging;
        
        /// <summary>
        /// Gets fired when the CUGroup property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CUGroupChanged;
        
        /// <summary>
        /// Gets fired before the CostType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostTypeChanging;
        
        /// <summary>
        /// Gets fired when the CostType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostTypeChanged;
        
        /// <summary>
        /// Gets fired before the CUAllowableAction property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CUAllowableActionChanging;
        
        /// <summary>
        /// Gets fired when the CUAllowableAction property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CUAllowableActionChanged;
    }
}

