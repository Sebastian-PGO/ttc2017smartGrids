//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork
{
    
    
    /// <summary>
    /// The public interface for MaterialItem
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(MaterialItem))]
    [XmlDefaultImplementationTypeAttribute(typeof(MaterialItem))]
    public interface IMaterialItem : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The account property
        /// </summary>
        string Account
        {
            get;
            set;
        }
        
        /// <summary>
        /// The costDescription property
        /// </summary>
        string CostDescription
        {
            get;
            set;
        }
        
        /// <summary>
        /// The quantity property
        /// </summary>
        object Quantity
        {
            get;
            set;
        }
        
        /// <summary>
        /// The costType property
        /// </summary>
        string CostType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The externalRefID property
        /// </summary>
        string ExternalRefID
        {
            get;
            set;
        }
        
        /// <summary>
        /// The actualCost property
        /// </summary>
        float ActualCost
        {
            get;
            set;
        }
        
        /// <summary>
        /// The materialCode property
        /// </summary>
        string MaterialCode
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpPOLineItems property
        /// </summary>
        IOrderedSetExpression<IErpPOLineItem> ErpPOLineItems
        {
            get;
        }
        
        /// <summary>
        /// The TypeMaterial property
        /// </summary>
        ITypeMaterial TypeMaterial
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpInventoryCounts property
        /// </summary>
        IOrderedSetExpression<IErpInventoryCount> ErpInventoryCounts
        {
            get;
        }
        
        /// <summary>
        /// The Usages property
        /// </summary>
        IOrderedSetExpression<IUsage> Usages
        {
            get;
        }
        
        /// <summary>
        /// The WorkCostDetail property
        /// </summary>
        IWorkCostDetail WorkCostDetail
        {
            get;
            set;
        }
        
        /// <summary>
        /// The WorkTask property
        /// </summary>
        IWorkTask WorkTask
        {
            get;
            set;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpRecDelvLineItems property
        /// </summary>
        IOrderedSetExpression<IErpRecDelvLineItem> ErpRecDelvLineItems
        {
            get;
        }
        
        /// <summary>
        /// The DesignLocation property
        /// </summary>
        IDesignLocation DesignLocation
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Account property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AccountChanging;
        
        /// <summary>
        /// Gets fired when the Account property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AccountChanged;
        
        /// <summary>
        /// Gets fired before the CostDescription property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostDescriptionChanging;
        
        /// <summary>
        /// Gets fired when the CostDescription property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostDescriptionChanged;
        
        /// <summary>
        /// Gets fired before the Quantity property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanging;
        
        /// <summary>
        /// Gets fired when the Quantity property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanged;
        
        /// <summary>
        /// Gets fired before the CostType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostTypeChanging;
        
        /// <summary>
        /// Gets fired when the CostType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostTypeChanged;
        
        /// <summary>
        /// Gets fired before the ExternalRefID property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ExternalRefIDChanging;
        
        /// <summary>
        /// Gets fired when the ExternalRefID property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ExternalRefIDChanged;
        
        /// <summary>
        /// Gets fired before the ActualCost property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActualCostChanging;
        
        /// <summary>
        /// Gets fired when the ActualCost property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActualCostChanged;
        
        /// <summary>
        /// Gets fired before the MaterialCode property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaterialCodeChanging;
        
        /// <summary>
        /// Gets fired when the MaterialCode property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaterialCodeChanged;
        
        /// <summary>
        /// Gets fired before the TypeMaterial property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeMaterialChanging;
        
        /// <summary>
        /// Gets fired when the TypeMaterial property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeMaterialChanged;
        
        /// <summary>
        /// Gets fired before the WorkCostDetail property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WorkCostDetailChanging;
        
        /// <summary>
        /// Gets fired when the WorkCostDetail property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WorkCostDetailChanged;
        
        /// <summary>
        /// Gets fired before the WorkTask property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WorkTaskChanging;
        
        /// <summary>
        /// Gets fired when the WorkTask property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WorkTaskChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
        
        /// <summary>
        /// Gets fired before the DesignLocation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DesignLocationChanging;
        
        /// <summary>
        /// Gets fired when the DesignLocation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DesignLocationChanged;
    }
}

