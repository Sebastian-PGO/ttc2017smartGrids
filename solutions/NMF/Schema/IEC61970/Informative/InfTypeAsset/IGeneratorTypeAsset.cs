//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset
{
    
    
    /// <summary>
    /// The public interface for GeneratorTypeAsset
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(GeneratorTypeAsset))]
    [XmlDefaultImplementationTypeAttribute(typeof(GeneratorTypeAsset))]
    public interface IGeneratorTypeAsset : IModelElement, IElectricalTypeAsset
    {
        
        /// <summary>
        /// The xDirectSync property
        /// </summary>
        float XDirectSync
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rDirectSync property
        /// </summary>
        float RDirectSync
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rQuadTrans property
        /// </summary>
        float RQuadTrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The xQuadSync property
        /// </summary>
        float XQuadSync
        {
            get;
            set;
        }
        
        /// <summary>
        /// The xQuadSubtrans property
        /// </summary>
        float XQuadSubtrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The minP property
        /// </summary>
        float MinP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The minQ property
        /// </summary>
        float MinQ
        {
            get;
            set;
        }
        
        /// <summary>
        /// The maxQ property
        /// </summary>
        float MaxQ
        {
            get;
            set;
        }
        
        /// <summary>
        /// The maxP property
        /// </summary>
        float MaxP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rQuadSync property
        /// </summary>
        float RQuadSync
        {
            get;
            set;
        }
        
        /// <summary>
        /// The xDirectSubtrans property
        /// </summary>
        float XDirectSubtrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The xDirectTrans property
        /// </summary>
        float XDirectTrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rDirectTrans property
        /// </summary>
        float RDirectTrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rDirectSubtrans property
        /// </summary>
        float RDirectSubtrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The xQuadTrans property
        /// </summary>
        float XQuadTrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rQuadSubtrans property
        /// </summary>
        float RQuadSubtrans
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the XDirectSync property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XDirectSyncChanging;
        
        /// <summary>
        /// Gets fired when the XDirectSync property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XDirectSyncChanged;
        
        /// <summary>
        /// Gets fired before the RDirectSync property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDirectSyncChanging;
        
        /// <summary>
        /// Gets fired when the RDirectSync property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDirectSyncChanged;
        
        /// <summary>
        /// Gets fired before the RQuadTrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RQuadTransChanging;
        
        /// <summary>
        /// Gets fired when the RQuadTrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RQuadTransChanged;
        
        /// <summary>
        /// Gets fired before the XQuadSync property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XQuadSyncChanging;
        
        /// <summary>
        /// Gets fired when the XQuadSync property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XQuadSyncChanged;
        
        /// <summary>
        /// Gets fired before the XQuadSubtrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XQuadSubtransChanging;
        
        /// <summary>
        /// Gets fired when the XQuadSubtrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XQuadSubtransChanged;
        
        /// <summary>
        /// Gets fired before the MinP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinPChanging;
        
        /// <summary>
        /// Gets fired when the MinP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinPChanged;
        
        /// <summary>
        /// Gets fired before the MinQ property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinQChanging;
        
        /// <summary>
        /// Gets fired when the MinQ property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinQChanged;
        
        /// <summary>
        /// Gets fired before the MaxQ property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxQChanging;
        
        /// <summary>
        /// Gets fired when the MaxQ property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxQChanged;
        
        /// <summary>
        /// Gets fired before the MaxP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxPChanging;
        
        /// <summary>
        /// Gets fired when the MaxP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxPChanged;
        
        /// <summary>
        /// Gets fired before the RQuadSync property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RQuadSyncChanging;
        
        /// <summary>
        /// Gets fired when the RQuadSync property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RQuadSyncChanged;
        
        /// <summary>
        /// Gets fired before the XDirectSubtrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XDirectSubtransChanging;
        
        /// <summary>
        /// Gets fired when the XDirectSubtrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XDirectSubtransChanged;
        
        /// <summary>
        /// Gets fired before the XDirectTrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XDirectTransChanging;
        
        /// <summary>
        /// Gets fired when the XDirectTrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XDirectTransChanged;
        
        /// <summary>
        /// Gets fired before the RDirectTrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDirectTransChanging;
        
        /// <summary>
        /// Gets fired when the RDirectTrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDirectTransChanged;
        
        /// <summary>
        /// Gets fired before the RDirectSubtrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDirectSubtransChanging;
        
        /// <summary>
        /// Gets fired when the RDirectSubtrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDirectSubtransChanged;
        
        /// <summary>
        /// Gets fired before the XQuadTrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XQuadTransChanging;
        
        /// <summary>
        /// Gets fired when the XQuadTrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> XQuadTransChanged;
        
        /// <summary>
        /// Gets fired before the RQuadSubtrans property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RQuadSubtransChanging;
        
        /// <summary>
        /// Gets fired when the RQuadSubtrans property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RQuadSubtransChanged;
    }
}

