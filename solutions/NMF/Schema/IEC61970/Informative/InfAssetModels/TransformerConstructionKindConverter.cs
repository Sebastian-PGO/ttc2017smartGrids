//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels
{
    
    
    public class TransformerConstructionKindConverter : System.ComponentModel.TypeConverter
    {
        
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType)
        {
            return (sourceType == typeof(string));
        }
        
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType)
        {
            return (destinationType == typeof(string));
        }
        
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value)
        {
            if ((value == null))
            {
                return default(TransformerConstructionKind);
            }
            string valueString = value.ToString();
            if ((valueString == "valut"))
            {
                return TransformerConstructionKind.Valut;
            }
            if ((valueString == "subway"))
            {
                return TransformerConstructionKind.Subway;
            }
            if ((valueString == "aerial"))
            {
                return TransformerConstructionKind.Aerial;
            }
            if ((valueString == "padmountFeedThrough"))
            {
                return TransformerConstructionKind.PadmountFeedThrough;
            }
            if ((valueString == "padmountLoopThrough"))
            {
                return TransformerConstructionKind.PadmountLoopThrough;
            }
            if ((valueString == "padmountDeadFront"))
            {
                return TransformerConstructionKind.PadmountDeadFront;
            }
            if ((valueString == "padmounted"))
            {
                return TransformerConstructionKind.Padmounted;
            }
            if ((valueString == "threePhase"))
            {
                return TransformerConstructionKind.ThreePhase;
            }
            if ((valueString == "padmountLiveFront"))
            {
                return TransformerConstructionKind.PadmountLiveFront;
            }
            if ((valueString == "overhead"))
            {
                return TransformerConstructionKind.Overhead;
            }
            if ((valueString == "unknown"))
            {
                return TransformerConstructionKind.Unknown;
            }
            if ((valueString == "vaultThreePhase"))
            {
                return TransformerConstructionKind.VaultThreePhase;
            }
            if ((valueString == "network"))
            {
                return TransformerConstructionKind.Network;
            }
            if ((valueString == "underground"))
            {
                return TransformerConstructionKind.Underground;
            }
            if ((valueString == "onePhase"))
            {
                return TransformerConstructionKind.OnePhase;
            }
            if ((valueString == "dryType"))
            {
                return TransformerConstructionKind.DryType;
            }
            return default(TransformerConstructionKind);
        }
        
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType)
        {
            if ((value == null))
            {
                return null;
            }
            TransformerConstructionKind valueCasted = ((TransformerConstructionKind)(value));
            if ((valueCasted == TransformerConstructionKind.Valut))
            {
                return "valut";
            }
            if ((valueCasted == TransformerConstructionKind.Subway))
            {
                return "subway";
            }
            if ((valueCasted == TransformerConstructionKind.Aerial))
            {
                return "aerial";
            }
            if ((valueCasted == TransformerConstructionKind.PadmountFeedThrough))
            {
                return "padmountFeedThrough";
            }
            if ((valueCasted == TransformerConstructionKind.PadmountLoopThrough))
            {
                return "padmountLoopThrough";
            }
            if ((valueCasted == TransformerConstructionKind.PadmountDeadFront))
            {
                return "padmountDeadFront";
            }
            if ((valueCasted == TransformerConstructionKind.Padmounted))
            {
                return "padmounted";
            }
            if ((valueCasted == TransformerConstructionKind.ThreePhase))
            {
                return "threePhase";
            }
            if ((valueCasted == TransformerConstructionKind.PadmountLiveFront))
            {
                return "padmountLiveFront";
            }
            if ((valueCasted == TransformerConstructionKind.Overhead))
            {
                return "overhead";
            }
            if ((valueCasted == TransformerConstructionKind.Unknown))
            {
                return "unknown";
            }
            if ((valueCasted == TransformerConstructionKind.VaultThreePhase))
            {
                return "vaultThreePhase";
            }
            if ((valueCasted == TransformerConstructionKind.Network))
            {
                return "network";
            }
            if ((valueCasted == TransformerConstructionKind.Underground))
            {
                return "underground";
            }
            if ((valueCasted == TransformerConstructionKind.OnePhase))
            {
                return "onePhase";
            }
            if ((valueCasted == TransformerConstructionKind.DryType))
            {
                return "dryType";
            }
            throw new ArgumentOutOfRangeException("value");
        }
    }
}

