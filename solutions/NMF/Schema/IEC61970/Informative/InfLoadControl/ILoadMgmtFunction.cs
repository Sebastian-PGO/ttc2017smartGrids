//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLoadControl
{
    
    
    /// <summary>
    /// The public interface for LoadMgmtFunction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(LoadMgmtFunction))]
    [XmlDefaultImplementationTypeAttribute(typeof(LoadMgmtFunction))]
    public interface ILoadMgmtFunction : IModelElement, IDeviceFunction
    {
        
        /// <summary>
        /// The manualOverRide property
        /// </summary>
        bool ManualOverRide
        {
            get;
            set;
        }
        
        /// <summary>
        /// The isAutoOp property
        /// </summary>
        bool IsAutoOp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The schedulingBasis property
        /// </summary>
        Nullable<LoadMgmtKind> SchedulingBasis
        {
            get;
            set;
        }
        
        /// <summary>
        /// The remoteOverRide property
        /// </summary>
        bool RemoteOverRide
        {
            get;
            set;
        }
        
        /// <summary>
        /// The loadStatus property
        /// </summary>
        Nullable<LoadStateKind> LoadStatus
        {
            get;
            set;
        }
        
        /// <summary>
        /// The overRideTimeOut property
        /// </summary>
        float OverRideTimeOut
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Switches property
        /// </summary>
        IOrderedSetExpression<ISwitch> Switches
        {
            get;
        }
        
        /// <summary>
        /// The LoadMgmtRecords property
        /// </summary>
        IOrderedSetExpression<ILoadMgmtRecord> LoadMgmtRecords
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the ManualOverRide property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ManualOverRideChanging;
        
        /// <summary>
        /// Gets fired when the ManualOverRide property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ManualOverRideChanged;
        
        /// <summary>
        /// Gets fired before the IsAutoOp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsAutoOpChanging;
        
        /// <summary>
        /// Gets fired when the IsAutoOp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsAutoOpChanged;
        
        /// <summary>
        /// Gets fired before the SchedulingBasis property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SchedulingBasisChanging;
        
        /// <summary>
        /// Gets fired when the SchedulingBasis property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SchedulingBasisChanged;
        
        /// <summary>
        /// Gets fired before the RemoteOverRide property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteOverRideChanging;
        
        /// <summary>
        /// Gets fired when the RemoteOverRide property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteOverRideChanged;
        
        /// <summary>
        /// Gets fired before the LoadStatus property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LoadStatusChanging;
        
        /// <summary>
        /// Gets fired when the LoadStatus property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LoadStatusChanged;
        
        /// <summary>
        /// Gets fired before the OverRideTimeOut property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OverRideTimeOutChanging;
        
        /// <summary>
        /// Gets fired when the OverRideTimeOut property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OverRideTimeOutChanged;
    }
}

