//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfMetering;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.Metering
{
    
    
    /// <summary>
    /// The default implementation of the EndDeviceGroup class
    /// </summary>
    [XmlNamespaceAttribute("http://iec.ch/TC57/2009/CIM-schema-cim14#Metering")]
    [XmlNamespacePrefixAttribute("cimMetering")]
    [ModelRepresentationClassAttribute("http://iec.ch/TC57/2009/CIM-schema-cim14#//IEC61968/Metering/EndDeviceGroup")]
    [DebuggerDisplayAttribute("EndDeviceGroup {UUID}")]
    public partial class EndDeviceGroup : IdentifiedObject, IEndDeviceGroup, IModelElement
    {
        
        /// <summary>
        /// The backing field for the GroupAddress property
        /// </summary>
        private int _groupAddress;
        
        private static Lazy<ITypedElement> _groupAddressAttribute = new Lazy<ITypedElement>(RetrieveGroupAddressAttribute);
        
        private static Lazy<ITypedElement> _demandResponseProgramReference = new Lazy<ITypedElement>(RetrieveDemandResponseProgramReference);
        
        /// <summary>
        /// The backing field for the DemandResponseProgram property
        /// </summary>
        private IDemandResponseProgram _demandResponseProgram;
        
        private static Lazy<ITypedElement> _endDeviceAssetsReference = new Lazy<ITypedElement>(RetrieveEndDeviceAssetsReference);
        
        /// <summary>
        /// The backing field for the EndDeviceAssets property
        /// </summary>
        private EndDeviceGroupEndDeviceAssetsCollection _endDeviceAssets;
        
        private static Lazy<ITypedElement> _endDeviceControlsReference = new Lazy<ITypedElement>(RetrieveEndDeviceControlsReference);
        
        /// <summary>
        /// The backing field for the EndDeviceControls property
        /// </summary>
        private EndDeviceGroupEndDeviceControlsCollection _endDeviceControls;
        
        private static IClass _classInstance;
        
        public EndDeviceGroup()
        {
            this._endDeviceAssets = new EndDeviceGroupEndDeviceAssetsCollection(this);
            this._endDeviceAssets.CollectionChanging += this.EndDeviceAssetsCollectionChanging;
            this._endDeviceAssets.CollectionChanged += this.EndDeviceAssetsCollectionChanged;
            this._endDeviceControls = new EndDeviceGroupEndDeviceControlsCollection(this);
            this._endDeviceControls.CollectionChanging += this.EndDeviceControlsCollectionChanging;
            this._endDeviceControls.CollectionChanged += this.EndDeviceControlsCollectionChanged;
        }
        
        /// <summary>
        /// The groupAddress property
        /// </summary>
        [XmlElementNameAttribute("groupAddress")]
        [XmlAttributeAttribute(true)]
        public virtual int GroupAddress
        {
            get
            {
                return this._groupAddress;
            }
            set
            {
                if ((this._groupAddress != value))
                {
                    int old = this._groupAddress;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnGroupAddressChanging(e);
                    this.OnPropertyChanging("GroupAddress", e, _groupAddressAttribute);
                    this._groupAddress = value;
                    this.OnGroupAddressChanged(e);
                    this.OnPropertyChanged("GroupAddress", e, _groupAddressAttribute);
                }
            }
        }
        
        /// <summary>
        /// The DemandResponseProgram property
        /// </summary>
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("EndDeviceGroups")]
        public virtual IDemandResponseProgram DemandResponseProgram
        {
            get
            {
                return this._demandResponseProgram;
            }
            set
            {
                if ((this._demandResponseProgram != value))
                {
                    IDemandResponseProgram old = this._demandResponseProgram;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnDemandResponseProgramChanging(e);
                    this.OnPropertyChanging("DemandResponseProgram", e, _demandResponseProgramReference);
                    this._demandResponseProgram = value;
                    if ((old != null))
                    {
                        old.EndDeviceGroups.Remove(this);
                        old.Deleted -= this.OnResetDemandResponseProgram;
                    }
                    if ((value != null))
                    {
                        value.EndDeviceGroups.Add(this);
                        value.Deleted += this.OnResetDemandResponseProgram;
                    }
                    this.OnDemandResponseProgramChanged(e);
                    this.OnPropertyChanged("DemandResponseProgram", e, _demandResponseProgramReference);
                }
            }
        }
        
        /// <summary>
        /// The EndDeviceAssets property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("EndDeviceGroups")]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IEndDeviceAsset> EndDeviceAssets
        {
            get
            {
                return this._endDeviceAssets;
            }
        }
        
        /// <summary>
        /// The EndDeviceControls property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("EndDeviceGroup")]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IEndDeviceControl> EndDeviceControls
        {
            get
            {
                return this._endDeviceControls;
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new EndDeviceGroupReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://iec.ch/TC57/2009/CIM-schema-cim14#//IEC61968/Metering/EndDeviceGroup")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the GroupAddress property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> GroupAddressChanging;
        
        /// <summary>
        /// Gets fired when the GroupAddress property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> GroupAddressChanged;
        
        /// <summary>
        /// Gets fired before the DemandResponseProgram property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> DemandResponseProgramChanging;
        
        /// <summary>
        /// Gets fired when the DemandResponseProgram property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> DemandResponseProgramChanged;
        
        private static ITypedElement RetrieveGroupAddressAttribute()
        {
            return ((ITypedElement)(((ModelElement)(EndDeviceGroup.ClassInstance)).Resolve("groupAddress")));
        }
        
        /// <summary>
        /// Raises the GroupAddressChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnGroupAddressChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.GroupAddressChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the GroupAddressChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnGroupAddressChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.GroupAddressChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        private static ITypedElement RetrieveDemandResponseProgramReference()
        {
            return ((ITypedElement)(((ModelElement)(EndDeviceGroup.ClassInstance)).Resolve("DemandResponseProgram")));
        }
        
        /// <summary>
        /// Raises the DemandResponseProgramChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnDemandResponseProgramChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.DemandResponseProgramChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the DemandResponseProgramChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnDemandResponseProgramChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.DemandResponseProgramChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the DemandResponseProgram property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetDemandResponseProgram(object sender, System.EventArgs eventArgs)
        {
            this.DemandResponseProgram = null;
        }
        
        private static ITypedElement RetrieveEndDeviceAssetsReference()
        {
            return ((ITypedElement)(((ModelElement)(EndDeviceGroup.ClassInstance)).Resolve("EndDeviceAssets")));
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the EndDeviceAssets property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void EndDeviceAssetsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("EndDeviceAssets", e, _endDeviceAssetsReference);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the EndDeviceAssets property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void EndDeviceAssetsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("EndDeviceAssets", e, _endDeviceAssetsReference);
        }
        
        private static ITypedElement RetrieveEndDeviceControlsReference()
        {
            return ((ITypedElement)(((ModelElement)(EndDeviceGroup.ClassInstance)).Resolve("EndDeviceControls")));
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the EndDeviceControls property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void EndDeviceControlsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("EndDeviceControls", e, _endDeviceControlsReference);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the EndDeviceControls property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void EndDeviceControlsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("EndDeviceControls", e, _endDeviceControlsReference);
        }
        
        /// <summary>
        /// Resolves the given attribute name
        /// </summary>
        /// <returns>The attribute value or null if it could not be found</returns>
        /// <param name="attribute">The requested attribute name</param>
        /// <param name="index">The index of this attribute</param>
        protected override object GetAttributeValue(string attribute, int index)
        {
            if ((attribute == "GROUPADDRESS"))
            {
                return this.GroupAddress;
            }
            return base.GetAttributeValue(attribute, index);
        }
        
        /// <summary>
        /// Gets the Model element collection for the given feature
        /// </summary>
        /// <returns>A non-generic list of elements</returns>
        /// <param name="feature">The requested feature</param>
        protected override System.Collections.IList GetCollectionForFeature(string feature)
        {
            if ((feature == "ENDDEVICEASSETS"))
            {
                return this._endDeviceAssets;
            }
            if ((feature == "ENDDEVICECONTROLS"))
            {
                return this._endDeviceControls;
            }
            return base.GetCollectionForFeature(feature);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "DEMANDRESPONSEPROGRAM"))
            {
                this.DemandResponseProgram = ((IDemandResponseProgram)(value));
                return;
            }
            if ((feature == "GROUPADDRESS"))
            {
                this.GroupAddress = ((int)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "DemandResponseProgram"))
            {
                return new DemandResponseProgramProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "DemandResponseProgram"))
            {
                return new DemandResponseProgramProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://iec.ch/TC57/2009/CIM-schema-cim14#//IEC61968/Metering/EndDeviceGroup")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// The collection class to to represent the children of the EndDeviceGroup class
        /// </summary>
        public class EndDeviceGroupReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private EndDeviceGroup _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public EndDeviceGroupReferencedElementsCollection(EndDeviceGroup parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.DemandResponseProgram != null))
                    {
                        count = (count + 1);
                    }
                    count = (count + this._parent.EndDeviceAssets.Count);
                    count = (count + this._parent.EndDeviceControls.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.DemandResponseProgramChanged += this.PropagateValueChanges;
                this._parent.EndDeviceAssets.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.EndDeviceControls.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.DemandResponseProgramChanged -= this.PropagateValueChanges;
                this._parent.EndDeviceAssets.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.EndDeviceControls.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.DemandResponseProgram == null))
                {
                    IDemandResponseProgram demandResponseProgramCasted = item.As<IDemandResponseProgram>();
                    if ((demandResponseProgramCasted != null))
                    {
                        this._parent.DemandResponseProgram = demandResponseProgramCasted;
                        return;
                    }
                }
                IEndDeviceAsset endDeviceAssetsCasted = item.As<IEndDeviceAsset>();
                if ((endDeviceAssetsCasted != null))
                {
                    this._parent.EndDeviceAssets.Add(endDeviceAssetsCasted);
                }
                IEndDeviceControl endDeviceControlsCasted = item.As<IEndDeviceControl>();
                if ((endDeviceControlsCasted != null))
                {
                    this._parent.EndDeviceControls.Add(endDeviceControlsCasted);
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.DemandResponseProgram = null;
                this._parent.EndDeviceAssets.Clear();
                this._parent.EndDeviceControls.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.DemandResponseProgram))
                {
                    return true;
                }
                if (this._parent.EndDeviceAssets.Contains(item))
                {
                    return true;
                }
                if (this._parent.EndDeviceControls.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.DemandResponseProgram != null))
                {
                    array[arrayIndex] = this._parent.DemandResponseProgram;
                    arrayIndex = (arrayIndex + 1);
                }
                IEnumerator<IModelElement> endDeviceAssetsEnumerator = this._parent.EndDeviceAssets.GetEnumerator();
                try
                {
                    for (
                    ; endDeviceAssetsEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = endDeviceAssetsEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    endDeviceAssetsEnumerator.Dispose();
                }
                IEnumerator<IModelElement> endDeviceControlsEnumerator = this._parent.EndDeviceControls.GetEnumerator();
                try
                {
                    for (
                    ; endDeviceControlsEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = endDeviceControlsEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    endDeviceControlsEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.DemandResponseProgram == item))
                {
                    this._parent.DemandResponseProgram = null;
                    return true;
                }
                IEndDeviceAsset endDeviceAssetItem = item.As<IEndDeviceAsset>();
                if (((endDeviceAssetItem != null) 
                            && this._parent.EndDeviceAssets.Remove(endDeviceAssetItem)))
                {
                    return true;
                }
                IEndDeviceControl endDeviceControlItem = item.As<IEndDeviceControl>();
                if (((endDeviceControlItem != null) 
                            && this._parent.EndDeviceControls.Remove(endDeviceControlItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.DemandResponseProgram).Concat(this._parent.EndDeviceAssets).Concat(this._parent.EndDeviceControls).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the groupAddress property
        /// </summary>
        private sealed class GroupAddressProxy : ModelPropertyChange<IEndDeviceGroup, int>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public GroupAddressProxy(IEndDeviceGroup modelElement) : 
                    base(modelElement, "groupAddress")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override int Value
            {
                get
                {
                    return this.ModelElement.GroupAddress;
                }
                set
                {
                    this.ModelElement.GroupAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the DemandResponseProgram property
        /// </summary>
        private sealed class DemandResponseProgramProxy : ModelPropertyChange<IEndDeviceGroup, IDemandResponseProgram>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public DemandResponseProgramProxy(IEndDeviceGroup modelElement) : 
                    base(modelElement, "DemandResponseProgram")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IDemandResponseProgram Value
            {
                get
                {
                    return this.ModelElement.DemandResponseProgram;
                }
                set
                {
                    this.ModelElement.DemandResponseProgram = value;
                }
            }
        }
    }
}

