using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfMetering;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.Metering
{
    
    
    /// <summary>
    /// The public interface for SDPLocation
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(SDPLocation))]
    [XmlDefaultImplementationTypeAttribute(typeof(SDPLocation))]
    public interface ISDPLocation : IModelElement, ILocation
    {
        
        /// <summary>
        /// The accessMethod property
        /// </summary>
        string AccessMethod
        {
            get;
            set;
        }
        
        /// <summary>
        /// The remark property
        /// </summary>
        string Remark
        {
            get;
            set;
        }
        
        /// <summary>
        /// The siteAccessProblem property
        /// </summary>
        string SiteAccessProblem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The occupancyDate property
        /// </summary>
        string OccupancyDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ServiceDeliveryPoints property
        /// </summary>
        IOrderedSetExpression<IServiceDeliveryPoint> ServiceDeliveryPoints
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the AccessMethod property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AccessMethodChanging;
        
        /// <summary>
        /// Gets fired when the AccessMethod property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AccessMethodChanged;
        
        /// <summary>
        /// Gets fired before the Remark property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemarkChanging;
        
        /// <summary>
        /// Gets fired when the Remark property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemarkChanged;
        
        /// <summary>
        /// Gets fired before the SiteAccessProblem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SiteAccessProblemChanging;
        
        /// <summary>
        /// Gets fired when the SiteAccessProblem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SiteAccessProblemChanged;
        
        /// <summary>
        /// Gets fired before the OccupancyDate property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OccupancyDateChanging;
        
        /// <summary>
        /// Gets fired when the OccupancyDate property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OccupancyDateChanged;
    }
}

