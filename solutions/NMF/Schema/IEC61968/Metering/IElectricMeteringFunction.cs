using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfMetering;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.Metering
{
    
    
    /// <summary>
    /// The public interface for ElectricMeteringFunction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ElectricMeteringFunction))]
    [XmlDefaultImplementationTypeAttribute(typeof(ElectricMeteringFunction))]
    public interface IElectricMeteringFunction : IModelElement, IDeviceFunction
    {
        
        /// <summary>
        /// The demandMultiplierApplied property
        /// </summary>
        bool DemandMultiplierApplied
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transformerCTRatio property
        /// </summary>
        float TransformerCTRatio
        {
            get;
            set;
        }
        
        /// <summary>
        /// The billingMultiplier property
        /// </summary>
        float BillingMultiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The currentRating property
        /// </summary>
        float CurrentRating
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transformerRatiosApplied property
        /// </summary>
        bool TransformerRatiosApplied
        {
            get;
            set;
        }
        
        /// <summary>
        /// The kWMultiplier property
        /// </summary>
        int KWMultiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The billingMultiplierApplied property
        /// </summary>
        bool BillingMultiplierApplied
        {
            get;
            set;
        }
        
        /// <summary>
        /// The demandMultiplier property
        /// </summary>
        float DemandMultiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The kWhMultiplier property
        /// </summary>
        int KWhMultiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transformerVTRatio property
        /// </summary>
        float TransformerVTRatio
        {
            get;
            set;
        }
        
        /// <summary>
        /// The voltageRating property
        /// </summary>
        float VoltageRating
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MeteringFunctionConfiguration property
        /// </summary>
        IMeteringFunctionConfiguration MeteringFunctionConfiguration
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the DemandMultiplierApplied property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DemandMultiplierAppliedChanging;
        
        /// <summary>
        /// Gets fired when the DemandMultiplierApplied property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DemandMultiplierAppliedChanged;
        
        /// <summary>
        /// Gets fired before the TransformerCTRatio property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerCTRatioChanging;
        
        /// <summary>
        /// Gets fired when the TransformerCTRatio property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerCTRatioChanged;
        
        /// <summary>
        /// Gets fired before the BillingMultiplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillingMultiplierChanging;
        
        /// <summary>
        /// Gets fired when the BillingMultiplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillingMultiplierChanged;
        
        /// <summary>
        /// Gets fired before the CurrentRating property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentRatingChanging;
        
        /// <summary>
        /// Gets fired when the CurrentRating property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CurrentRatingChanged;
        
        /// <summary>
        /// Gets fired before the TransformerRatiosApplied property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerRatiosAppliedChanging;
        
        /// <summary>
        /// Gets fired when the TransformerRatiosApplied property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerRatiosAppliedChanged;
        
        /// <summary>
        /// Gets fired before the KWMultiplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KWMultiplierChanging;
        
        /// <summary>
        /// Gets fired when the KWMultiplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KWMultiplierChanged;
        
        /// <summary>
        /// Gets fired before the BillingMultiplierApplied property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillingMultiplierAppliedChanging;
        
        /// <summary>
        /// Gets fired when the BillingMultiplierApplied property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillingMultiplierAppliedChanged;
        
        /// <summary>
        /// Gets fired before the DemandMultiplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DemandMultiplierChanging;
        
        /// <summary>
        /// Gets fired when the DemandMultiplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DemandMultiplierChanged;
        
        /// <summary>
        /// Gets fired before the KWhMultiplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KWhMultiplierChanging;
        
        /// <summary>
        /// Gets fired when the KWhMultiplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KWhMultiplierChanged;
        
        /// <summary>
        /// Gets fired before the TransformerVTRatio property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerVTRatioChanging;
        
        /// <summary>
        /// Gets fired when the TransformerVTRatio property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransformerVTRatioChanged;
        
        /// <summary>
        /// Gets fired before the VoltageRating property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageRatingChanging;
        
        /// <summary>
        /// Gets fired when the VoltageRating property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> VoltageRatingChanged;
        
        /// <summary>
        /// Gets fired before the MeteringFunctionConfiguration property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeteringFunctionConfigurationChanging;
        
        /// <summary>
        /// Gets fired when the MeteringFunctionConfiguration property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeteringFunctionConfigurationChanged;
    }
}

