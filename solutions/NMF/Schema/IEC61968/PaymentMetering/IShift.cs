using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfPaymentMetering;

namespace TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering
{
    
    
    /// <summary>
    /// The public interface for Shift
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Shift))]
    [XmlDefaultImplementationTypeAttribute(typeof(Shift))]
    public interface IShift : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The transactionsGrandTotal property
        /// </summary>
        float TransactionsGrandTotal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The receiptsGrandTotalRounding property
        /// </summary>
        float ReceiptsGrandTotalRounding
        {
            get;
            set;
        }
        
        /// <summary>
        /// The transactionsGrandTotalRounding property
        /// </summary>
        float TransactionsGrandTotalRounding
        {
            get;
            set;
        }
        
        /// <summary>
        /// The receiptsGrandTotalNonBankable property
        /// </summary>
        float ReceiptsGrandTotalNonBankable
        {
            get;
            set;
        }
        
        /// <summary>
        /// The receiptsGrandTotalBankable property
        /// </summary>
        float ReceiptsGrandTotalBankable
        {
            get;
            set;
        }
        
        /// <summary>
        /// The activityInterval property
        /// </summary>
        IDateTimeInterval ActivityInterval
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TransactionSummaries property
        /// </summary>
        IOrderedSetExpression<ITransactionSummary> TransactionSummaries
        {
            get;
        }
        
        /// <summary>
        /// The ReceiptSummaries property
        /// </summary>
        IOrderedSetExpression<IReceiptSummary> ReceiptSummaries
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the TransactionsGrandTotal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionsGrandTotalChanging;
        
        /// <summary>
        /// Gets fired when the TransactionsGrandTotal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionsGrandTotalChanged;
        
        /// <summary>
        /// Gets fired before the ReceiptsGrandTotalRounding property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptsGrandTotalRoundingChanging;
        
        /// <summary>
        /// Gets fired when the ReceiptsGrandTotalRounding property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptsGrandTotalRoundingChanged;
        
        /// <summary>
        /// Gets fired before the TransactionsGrandTotalRounding property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionsGrandTotalRoundingChanging;
        
        /// <summary>
        /// Gets fired when the TransactionsGrandTotalRounding property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TransactionsGrandTotalRoundingChanged;
        
        /// <summary>
        /// Gets fired before the ReceiptsGrandTotalNonBankable property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptsGrandTotalNonBankableChanging;
        
        /// <summary>
        /// Gets fired when the ReceiptsGrandTotalNonBankable property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptsGrandTotalNonBankableChanged;
        
        /// <summary>
        /// Gets fired before the ReceiptsGrandTotalBankable property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptsGrandTotalBankableChanging;
        
        /// <summary>
        /// Gets fired when the ReceiptsGrandTotalBankable property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptsGrandTotalBankableChanged;
        
        /// <summary>
        /// Gets fired before the ActivityInterval property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivityIntervalChanging;
        
        /// <summary>
        /// Gets fired when the ActivityInterval property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActivityIntervalChanged;
    }
}

