//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Customers;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Domain;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfPaymentMetering;

namespace TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering
{
    
    
    /// <summary>
    /// The public interface for Tender
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Tender))]
    [XmlDefaultImplementationTypeAttribute(typeof(Tender))]
    public interface ITender : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The amount property
        /// </summary>
        float Amount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The change property
        /// </summary>
        float Change
        {
            get;
            set;
        }
        
        /// <summary>
        /// The kind property
        /// </summary>
        Nullable<TenderKind> Kind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Receipt property
        /// </summary>
        IReceipt Receipt
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Cheque property
        /// </summary>
        ICheque Cheque
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Card property
        /// </summary>
        ICard Card
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Amount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountChanging;
        
        /// <summary>
        /// Gets fired when the Amount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountChanged;
        
        /// <summary>
        /// Gets fired before the Change property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChangeChanging;
        
        /// <summary>
        /// Gets fired when the Change property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChangeChanged;
        
        /// <summary>
        /// Gets fired before the Kind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanging;
        
        /// <summary>
        /// Gets fired when the Kind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KindChanged;
        
        /// <summary>
        /// Gets fired before the Receipt property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptChanging;
        
        /// <summary>
        /// Gets fired when the Receipt property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReceiptChanged;
        
        /// <summary>
        /// Gets fired before the Cheque property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChequeChanging;
        
        /// <summary>
        /// Gets fired when the Cheque property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ChequeChanged;
        
        /// <summary>
        /// Gets fired before the Card property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CardChanging;
        
        /// <summary>
        /// Gets fired when the Card property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CardChanged;
    }
}

