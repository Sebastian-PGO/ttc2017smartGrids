using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.AssetModels
{
    
    
    /// <summary>
    /// The public interface for AssetModel
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(AssetModel))]
    [XmlDefaultImplementationTypeAttribute(typeof(AssetModel))]
    public interface IAssetModel : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The modelVersion property
        /// </summary>
        string ModelVersion
        {
            get;
            set;
        }
        
        /// <summary>
        /// The modelNumber property
        /// </summary>
        string ModelNumber
        {
            get;
            set;
        }
        
        /// <summary>
        /// The corporateStandardKind property
        /// </summary>
        Nullable<CorporateStandardKind> CorporateStandardKind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The usageKind property
        /// </summary>
        Nullable<AssetModelUsageKind> UsageKind
        {
            get;
            set;
        }
        
        /// <summary>
        /// The weightTotal property
        /// </summary>
        float WeightTotal
        {
            get;
            set;
        }
        
        /// <summary>
        /// The AssetInfo property
        /// </summary>
        IAssetInfo AssetInfo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The AssetModelCatalogueItems property
        /// </summary>
        IOrderedSetExpression<IAssetModelCatalogueItem> AssetModelCatalogueItems
        {
            get;
        }
        
        /// <summary>
        /// The TypeAsset property
        /// </summary>
        ITypeAsset TypeAsset
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpInventoryCounts property
        /// </summary>
        IOrderedSetExpression<IErpInventoryCount> ErpInventoryCounts
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the ModelVersion property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ModelVersionChanging;
        
        /// <summary>
        /// Gets fired when the ModelVersion property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ModelVersionChanged;
        
        /// <summary>
        /// Gets fired before the ModelNumber property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ModelNumberChanging;
        
        /// <summary>
        /// Gets fired when the ModelNumber property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ModelNumberChanged;
        
        /// <summary>
        /// Gets fired before the CorporateStandardKind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CorporateStandardKindChanging;
        
        /// <summary>
        /// Gets fired when the CorporateStandardKind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CorporateStandardKindChanged;
        
        /// <summary>
        /// Gets fired before the UsageKind property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UsageKindChanging;
        
        /// <summary>
        /// Gets fired when the UsageKind property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UsageKindChanged;
        
        /// <summary>
        /// Gets fired before the WeightTotal property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeightTotalChanging;
        
        /// <summary>
        /// Gets fired when the WeightTotal property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WeightTotalChanged;
        
        /// <summary>
        /// Gets fired before the AssetInfo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetInfoChanging;
        
        /// <summary>
        /// Gets fired when the AssetInfo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AssetInfoChanged;
        
        /// <summary>
        /// Gets fired before the TypeAsset property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeAssetChanging;
        
        /// <summary>
        /// Gets fired when the TypeAsset property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeAssetChanged;
    }
}

