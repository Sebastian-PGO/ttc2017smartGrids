using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.AssetModels
{
    
    
    public class ConductorInsulationKindConverter : System.ComponentModel.TypeConverter
    {
        
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType)
        {
            return (sourceType == typeof(string));
        }
        
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType)
        {
            return (destinationType == typeof(string));
        }
        
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value)
        {
            if ((value == null))
            {
                return default(ConductorInsulationKind);
            }
            string valueString = value.ToString();
            if ((valueString == "crosslinkedPolyethylene"))
            {
                return ConductorInsulationKind.CrosslinkedPolyethylene;
            }
            if ((valueString == "butyl"))
            {
                return ConductorInsulationKind.Butyl;
            }
            if ((valueString == "treeRetardantCrosslinkedPolyethylene"))
            {
                return ConductorInsulationKind.TreeRetardantCrosslinkedPolyethylene;
            }
            if ((valueString == "asbestosAndVarnishedCambric"))
            {
                return ConductorInsulationKind.AsbestosAndVarnishedCambric;
            }
            if ((valueString == "highPressureFluidFilled"))
            {
                return ConductorInsulationKind.HighPressureFluidFilled;
            }
            if ((valueString == "ethylenePropyleneRubber"))
            {
                return ConductorInsulationKind.EthylenePropyleneRubber;
            }
            if ((valueString == "ozoneResistantRubber"))
            {
                return ConductorInsulationKind.OzoneResistantRubber;
            }
            if ((valueString == "oilPaper"))
            {
                return ConductorInsulationKind.OilPaper;
            }
            if ((valueString == "varnishedDacronGlass"))
            {
                return ConductorInsulationKind.VarnishedDacronGlass;
            }
            if ((valueString == "highMolecularWeightPolyethylene"))
            {
                return ConductorInsulationKind.HighMolecularWeightPolyethylene;
            }
            if ((valueString == "varnishedCambricCloth"))
            {
                return ConductorInsulationKind.VarnishedCambricCloth;
            }
            if ((valueString == "other"))
            {
                return ConductorInsulationKind.Other;
            }
            if ((valueString == "treeResistantHighMolecularWeightPolyethylene"))
            {
                return ConductorInsulationKind.TreeResistantHighMolecularWeightPolyethylene;
            }
            if ((valueString == "unbeltedPilc"))
            {
                return ConductorInsulationKind.UnbeltedPilc;
            }
            if ((valueString == "rubber"))
            {
                return ConductorInsulationKind.Rubber;
            }
            if ((valueString == "beltedPilc"))
            {
                return ConductorInsulationKind.BeltedPilc;
            }
            if ((valueString == "lowCapacitanceRubber"))
            {
                return ConductorInsulationKind.LowCapacitanceRubber;
            }
            if ((valueString == "siliconRubber"))
            {
                return ConductorInsulationKind.SiliconRubber;
            }
            return default(ConductorInsulationKind);
        }
        
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType)
        {
            if ((value == null))
            {
                return null;
            }
            ConductorInsulationKind valueCasted = ((ConductorInsulationKind)(value));
            if ((valueCasted == ConductorInsulationKind.CrosslinkedPolyethylene))
            {
                return "crosslinkedPolyethylene";
            }
            if ((valueCasted == ConductorInsulationKind.Butyl))
            {
                return "butyl";
            }
            if ((valueCasted == ConductorInsulationKind.TreeRetardantCrosslinkedPolyethylene))
            {
                return "treeRetardantCrosslinkedPolyethylene";
            }
            if ((valueCasted == ConductorInsulationKind.AsbestosAndVarnishedCambric))
            {
                return "asbestosAndVarnishedCambric";
            }
            if ((valueCasted == ConductorInsulationKind.HighPressureFluidFilled))
            {
                return "highPressureFluidFilled";
            }
            if ((valueCasted == ConductorInsulationKind.EthylenePropyleneRubber))
            {
                return "ethylenePropyleneRubber";
            }
            if ((valueCasted == ConductorInsulationKind.OzoneResistantRubber))
            {
                return "ozoneResistantRubber";
            }
            if ((valueCasted == ConductorInsulationKind.OilPaper))
            {
                return "oilPaper";
            }
            if ((valueCasted == ConductorInsulationKind.VarnishedDacronGlass))
            {
                return "varnishedDacronGlass";
            }
            if ((valueCasted == ConductorInsulationKind.HighMolecularWeightPolyethylene))
            {
                return "highMolecularWeightPolyethylene";
            }
            if ((valueCasted == ConductorInsulationKind.VarnishedCambricCloth))
            {
                return "varnishedCambricCloth";
            }
            if ((valueCasted == ConductorInsulationKind.Other))
            {
                return "other";
            }
            if ((valueCasted == ConductorInsulationKind.TreeResistantHighMolecularWeightPolyethylene))
            {
                return "treeResistantHighMolecularWeightPolyethylene";
            }
            if ((valueCasted == ConductorInsulationKind.UnbeltedPilc))
            {
                return "unbeltedPilc";
            }
            if ((valueCasted == ConductorInsulationKind.Rubber))
            {
                return "rubber";
            }
            if ((valueCasted == ConductorInsulationKind.BeltedPilc))
            {
                return "beltedPilc";
            }
            if ((valueCasted == ConductorInsulationKind.LowCapacitanceRubber))
            {
                return "lowCapacitanceRubber";
            }
            if ((valueCasted == ConductorInsulationKind.SiliconRubber))
            {
                return "siliconRubber";
            }
            throw new ArgumentOutOfRangeException("value");
        }
    }
}

