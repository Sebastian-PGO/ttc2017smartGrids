using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.AssetModels
{
    
    
    /// <summary>
    /// The public interface for WireType
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(WireType))]
    [XmlDefaultImplementationTypeAttribute(typeof(WireType))]
    public interface IWireType : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The rAC75 property
        /// </summary>
        float RAC75
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rAC50 property
        /// </summary>
        float RAC50
        {
            get;
            set;
        }
        
        /// <summary>
        /// The radius property
        /// </summary>
        float Radius
        {
            get;
            set;
        }
        
        /// <summary>
        /// The strandCount property
        /// </summary>
        int StrandCount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coreRadius property
        /// </summary>
        float CoreRadius
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rAC25 property
        /// </summary>
        float RAC25
        {
            get;
            set;
        }
        
        /// <summary>
        /// The rDC20 property
        /// </summary>
        float RDC20
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sizeDescription property
        /// </summary>
        string SizeDescription
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coreStrandCount property
        /// </summary>
        int CoreStrandCount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ratedCurrent property
        /// </summary>
        float RatedCurrent
        {
            get;
            set;
        }
        
        /// <summary>
        /// The gmr property
        /// </summary>
        float Gmr
        {
            get;
            set;
        }
        
        /// <summary>
        /// The material property
        /// </summary>
        Nullable<ConductorMaterialKind> Material
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ConcentricNeutralCableInfos property
        /// </summary>
        IOrderedSetExpression<IConcentricNeutralCableInfo> ConcentricNeutralCableInfos
        {
            get;
        }
        
        /// <summary>
        /// The WireArrangements property
        /// </summary>
        IOrderedSetExpression<IWireArrangement> WireArrangements
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the RAC75 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RAC75Changing;
        
        /// <summary>
        /// Gets fired when the RAC75 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RAC75Changed;
        
        /// <summary>
        /// Gets fired before the RAC50 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RAC50Changing;
        
        /// <summary>
        /// Gets fired when the RAC50 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RAC50Changed;
        
        /// <summary>
        /// Gets fired before the Radius property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RadiusChanging;
        
        /// <summary>
        /// Gets fired when the Radius property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RadiusChanged;
        
        /// <summary>
        /// Gets fired before the StrandCount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrandCountChanging;
        
        /// <summary>
        /// Gets fired when the StrandCount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StrandCountChanged;
        
        /// <summary>
        /// Gets fired before the CoreRadius property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreRadiusChanging;
        
        /// <summary>
        /// Gets fired when the CoreRadius property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreRadiusChanged;
        
        /// <summary>
        /// Gets fired before the RAC25 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RAC25Changing;
        
        /// <summary>
        /// Gets fired when the RAC25 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RAC25Changed;
        
        /// <summary>
        /// Gets fired before the RDC20 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDC20Changing;
        
        /// <summary>
        /// Gets fired when the RDC20 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RDC20Changed;
        
        /// <summary>
        /// Gets fired before the SizeDescription property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeDescriptionChanging;
        
        /// <summary>
        /// Gets fired when the SizeDescription property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeDescriptionChanged;
        
        /// <summary>
        /// Gets fired before the CoreStrandCount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreStrandCountChanging;
        
        /// <summary>
        /// Gets fired when the CoreStrandCount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreStrandCountChanged;
        
        /// <summary>
        /// Gets fired before the RatedCurrent property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RatedCurrentChanging;
        
        /// <summary>
        /// Gets fired when the RatedCurrent property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RatedCurrentChanged;
        
        /// <summary>
        /// Gets fired before the Gmr property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GmrChanging;
        
        /// <summary>
        /// Gets fired when the Gmr property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GmrChanged;
        
        /// <summary>
        /// Gets fired before the Material property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaterialChanging;
        
        /// <summary>
        /// Gets fired when the Material property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaterialChanged;
    }
}

