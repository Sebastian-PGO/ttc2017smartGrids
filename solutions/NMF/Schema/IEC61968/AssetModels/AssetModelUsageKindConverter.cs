using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61968.AssetModels
{
    
    
    public class AssetModelUsageKindConverter : System.ComponentModel.TypeConverter
    {
        
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType)
        {
            return (sourceType == typeof(string));
        }
        
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType)
        {
            return (destinationType == typeof(string));
        }
        
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value)
        {
            if ((value == null))
            {
                return default(AssetModelUsageKind);
            }
            string valueString = value.ToString();
            if ((valueString == "streetlight"))
            {
                return AssetModelUsageKind.Streetlight;
            }
            if ((valueString == "other"))
            {
                return AssetModelUsageKind.Other;
            }
            if ((valueString == "substation"))
            {
                return AssetModelUsageKind.Substation;
            }
            if ((valueString == "customerSubstation"))
            {
                return AssetModelUsageKind.CustomerSubstation;
            }
            if ((valueString == "distributionUnderground"))
            {
                return AssetModelUsageKind.DistributionUnderground;
            }
            if ((valueString == "distributionOverhead"))
            {
                return AssetModelUsageKind.DistributionOverhead;
            }
            if ((valueString == "transmission"))
            {
                return AssetModelUsageKind.Transmission;
            }
            if ((valueString == "unknown"))
            {
                return AssetModelUsageKind.Unknown;
            }
            return default(AssetModelUsageKind);
        }
        
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType)
        {
            if ((value == null))
            {
                return null;
            }
            AssetModelUsageKind valueCasted = ((AssetModelUsageKind)(value));
            if ((valueCasted == AssetModelUsageKind.Streetlight))
            {
                return "streetlight";
            }
            if ((valueCasted == AssetModelUsageKind.Other))
            {
                return "other";
            }
            if ((valueCasted == AssetModelUsageKind.Substation))
            {
                return "substation";
            }
            if ((valueCasted == AssetModelUsageKind.CustomerSubstation))
            {
                return "customerSubstation";
            }
            if ((valueCasted == AssetModelUsageKind.DistributionUnderground))
            {
                return "distributionUnderground";
            }
            if ((valueCasted == AssetModelUsageKind.DistributionOverhead))
            {
                return "distributionOverhead";
            }
            if ((valueCasted == AssetModelUsageKind.Transmission))
            {
                return "transmission";
            }
            if ((valueCasted == AssetModelUsageKind.Unknown))
            {
                return "unknown";
            }
            throw new ArgumentOutOfRangeException("value");
        }
    }
}

