using System.Collections.Specialized;
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;

namespace TTC2017.SmartGrids.CIM.IEC61968.Common
{
    
    
    /// <summary>
    /// The public interface for Location
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Location))]
    [XmlDefaultImplementationTypeAttribute(typeof(Location))]
    public interface ILocation : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The geoInfoReference property
        /// </summary>
        string GeoInfoReference
        {
            get;
            set;
        }
        
        /// <summary>
        /// The category property
        /// </summary>
        string Category
        {
            get;
            set;
        }
        
        /// <summary>
        /// The corporateCode property
        /// </summary>
        string CorporateCode
        {
            get;
            set;
        }
        
        /// <summary>
        /// The direction property
        /// </summary>
        string Direction
        {
            get;
            set;
        }
        
        /// <summary>
        /// The secondaryAddress property
        /// </summary>
        IStreetAddress SecondaryAddress
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Measurements property
        /// </summary>
        IOrderedSetExpression<IMeasurement> Measurements
        {
            get;
        }
        
        /// <summary>
        /// The Directions property
        /// </summary>
        IOrderedSetExpression<IDirection> Directions
        {
            get;
        }
        
        /// <summary>
        /// The PowerSystemResources property
        /// </summary>
        IOrderedSetExpression<IPowerSystemResource> PowerSystemResources
        {
            get;
        }
        
        /// <summary>
        /// The phone2 property
        /// </summary>
        ITelephoneNumber Phone2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The phone1 property
        /// </summary>
        ITelephoneNumber Phone1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The LandProperties property
        /// </summary>
        IOrderedSetExpression<ILandProperty> LandProperties
        {
            get;
        }
        
        /// <summary>
        /// The DimensionsInfo property
        /// </summary>
        IDimensionsInfo DimensionsInfo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ChangeItems property
        /// </summary>
        IOrderedSetExpression<IChangeItem> ChangeItems
        {
            get;
        }
        
        /// <summary>
        /// The ErpOrganisations property
        /// </summary>
        IOrderedSetExpression<IErpOrganisation> ErpOrganisations
        {
            get;
        }
        
        /// <summary>
        /// The CoordinateSystems property
        /// </summary>
        IOrderedSetExpression<ICoordinateSystem> CoordinateSystems
        {
            get;
        }
        
        /// <summary>
        /// The Assets property
        /// </summary>
        IOrderedSetExpression<IAsset> Assets
        {
            get;
        }
        
        /// <summary>
        /// The Routes property
        /// </summary>
        IOrderedSetExpression<IRoute> Routes
        {
            get;
        }
        
        /// <summary>
        /// The Hazards property
        /// </summary>
        IOrderedSetExpression<IHazard> Hazards
        {
            get;
        }
        
        /// <summary>
        /// The mainAddress property
        /// </summary>
        IStreetAddress MainAddress
        {
            get;
            set;
        }
        
        /// <summary>
        /// The electronicAddress property
        /// </summary>
        IElectronicAddress ElectronicAddress
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RedLines property
        /// </summary>
        IOrderedSetExpression<IRedLine> RedLines
        {
            get;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Crews property
        /// </summary>
        IOrderedSetExpression<ICrew> Crews
        {
            get;
        }
        
        /// <summary>
        /// The Position property
        /// </summary>
        IPositionPoint Position
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the GeoInfoReference property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GeoInfoReferenceChanging;
        
        /// <summary>
        /// Gets fired when the GeoInfoReference property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GeoInfoReferenceChanged;
        
        /// <summary>
        /// Gets fired before the Category property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CategoryChanging;
        
        /// <summary>
        /// Gets fired when the Category property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CategoryChanged;
        
        /// <summary>
        /// Gets fired before the CorporateCode property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CorporateCodeChanging;
        
        /// <summary>
        /// Gets fired when the CorporateCode property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CorporateCodeChanged;
        
        /// <summary>
        /// Gets fired before the Direction property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DirectionChanging;
        
        /// <summary>
        /// Gets fired when the Direction property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DirectionChanged;
        
        /// <summary>
        /// Gets fired before the SecondaryAddress property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SecondaryAddressChanging;
        
        /// <summary>
        /// Gets fired when the SecondaryAddress property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SecondaryAddressChanged;
        
        /// <summary>
        /// Gets fired before the Phone2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Phone2Changing;
        
        /// <summary>
        /// Gets fired when the Phone2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Phone2Changed;
        
        /// <summary>
        /// Gets fired before the Phone1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Phone1Changing;
        
        /// <summary>
        /// Gets fired when the Phone1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> Phone1Changed;
        
        /// <summary>
        /// Gets fired before the DimensionsInfo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DimensionsInfoChanging;
        
        /// <summary>
        /// Gets fired when the DimensionsInfo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DimensionsInfoChanged;
        
        /// <summary>
        /// Gets fired before the MainAddress property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MainAddressChanging;
        
        /// <summary>
        /// Gets fired when the MainAddress property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MainAddressChanged;
        
        /// <summary>
        /// Gets fired before the ElectronicAddress property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ElectronicAddressChanging;
        
        /// <summary>
        /// Gets fired when the ElectronicAddress property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ElectronicAddressChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
        
        /// <summary>
        /// Gets fired before the Position property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PositionChanging;
        
        /// <summary>
        /// Gets fired when the Position property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PositionChanged;
    }
}

