//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfPaymentMetering;

namespace TTC2017.SmartGrids.CIM.IEC61968.Customers
{
    
    
    /// <summary>
    /// The public interface for CustomerAgreement
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(CustomerAgreement))]
    [XmlDefaultImplementationTypeAttribute(typeof(CustomerAgreement))]
    public interface ICustomerAgreement : IModelElement, IAgreement
    {
        
        /// <summary>
        /// The billingCycle property
        /// </summary>
        string BillingCycle
        {
            get;
            set;
        }
        
        /// <summary>
        /// The loadMgmt property
        /// </summary>
        string LoadMgmt
        {
            get;
            set;
        }
        
        /// <summary>
        /// The budgetBill property
        /// </summary>
        string BudgetBill
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ServiceSupplier property
        /// </summary>
        IServiceSupplier ServiceSupplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The StandardIndustryCode property
        /// </summary>
        IStandardIndustryCode StandardIndustryCode
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ServiceDeliveryPoints property
        /// </summary>
        IOrderedSetExpression<IServiceDeliveryPoint> ServiceDeliveryPoints
        {
            get;
        }
        
        /// <summary>
        /// The MeterReadings property
        /// </summary>
        IOrderedSetExpression<IMeterReading> MeterReadings
        {
            get;
        }
        
        /// <summary>
        /// The ServiceLocations property
        /// </summary>
        IOrderedSetExpression<IServiceLocation> ServiceLocations
        {
            get;
        }
        
        /// <summary>
        /// The PricingStructures property
        /// </summary>
        IOrderedSetExpression<IPricingStructure> PricingStructures
        {
            get;
        }
        
        /// <summary>
        /// The AuxiliaryAgreements property
        /// </summary>
        IOrderedSetExpression<IAuxiliaryAgreement> AuxiliaryAgreements
        {
            get;
        }
        
        /// <summary>
        /// The EndDeviceControls property
        /// </summary>
        IOrderedSetExpression<IEndDeviceControl> EndDeviceControls
        {
            get;
        }
        
        /// <summary>
        /// The Customer property
        /// </summary>
        ICustomer Customer
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ServiceCategory property
        /// </summary>
        IServiceCategory ServiceCategory
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CustomerAccount property
        /// </summary>
        ICustomerAccount CustomerAccount
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DemandResponseProgram property
        /// </summary>
        IDemandResponseProgram DemandResponseProgram
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Equipments property
        /// </summary>
        IOrderedSetExpression<IEquipment> Equipments
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the BillingCycle property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillingCycleChanging;
        
        /// <summary>
        /// Gets fired when the BillingCycle property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BillingCycleChanged;
        
        /// <summary>
        /// Gets fired before the LoadMgmt property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LoadMgmtChanging;
        
        /// <summary>
        /// Gets fired when the LoadMgmt property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LoadMgmtChanged;
        
        /// <summary>
        /// Gets fired before the BudgetBill property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BudgetBillChanging;
        
        /// <summary>
        /// Gets fired when the BudgetBill property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BudgetBillChanged;
        
        /// <summary>
        /// Gets fired before the ServiceSupplier property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceSupplierChanging;
        
        /// <summary>
        /// Gets fired when the ServiceSupplier property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceSupplierChanged;
        
        /// <summary>
        /// Gets fired before the StandardIndustryCode property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StandardIndustryCodeChanging;
        
        /// <summary>
        /// Gets fired when the StandardIndustryCode property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StandardIndustryCodeChanged;
        
        /// <summary>
        /// Gets fired before the Customer property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerChanging;
        
        /// <summary>
        /// Gets fired when the Customer property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerChanged;
        
        /// <summary>
        /// Gets fired before the ServiceCategory property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceCategoryChanging;
        
        /// <summary>
        /// Gets fired when the ServiceCategory property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ServiceCategoryChanged;
        
        /// <summary>
        /// Gets fired before the CustomerAccount property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerAccountChanging;
        
        /// <summary>
        /// Gets fired when the CustomerAccount property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CustomerAccountChanged;
        
        /// <summary>
        /// Gets fired before the DemandResponseProgram property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DemandResponseProgramChanging;
        
        /// <summary>
        /// Gets fired when the DemandResponseProgram property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DemandResponseProgramChanged;
    }
}

