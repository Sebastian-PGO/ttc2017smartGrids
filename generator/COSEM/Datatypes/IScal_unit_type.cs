//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace TTC2017.SmartGrids.COSEM.Datatypes
{
    
    
    /// <summary>
    /// The public interface for scal_unit_type
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Scal_unit_type))]
    [XmlDefaultImplementationTypeAttribute(typeof(Scal_unit_type))]
    public interface IScal_unit_type : IModelElement
    {
        
        /// <summary>
        /// The scaler property
        /// </summary>
        Nullable<int> Scaler
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Unit property
        /// </summary>
        Nullable<Units> Unit
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Scaler property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ScalerChanging;
        
        /// <summary>
        /// Gets fired when the Scaler property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ScalerChanged;
        
        /// <summary>
        /// Gets fired before the Unit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitChanging;
        
        /// <summary>
        /// Gets fired when the Unit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UnitChanged;
    }
}

