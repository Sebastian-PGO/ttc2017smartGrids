//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.Production;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Generation.GenerationDynamics
{
    
    
    /// <summary>
    /// The public interface for PWRSteamSupply
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(PWRSteamSupply))]
    [XmlDefaultImplementationTypeAttribute(typeof(PWRSteamSupply))]
    public interface IPWRSteamSupply : IModelElement, ISteamSupply
    {
        
        /// <summary>
        /// The hotLegToColdLegGain property
        /// </summary>
        float HotLegToColdLegGain
        {
            get;
            set;
        }
        
        /// <summary>
        /// The pressureCG property
        /// </summary>
        float PressureCG
        {
            get;
            set;
        }
        
        /// <summary>
        /// The hotLegLagTC property
        /// </summary>
        float HotLegLagTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The steamPressureDropLagTC property
        /// </summary>
        float SteamPressureDropLagTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The throttlePressureSP property
        /// </summary>
        float ThrottlePressureSP
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coldLegFBLeadTC2 property
        /// </summary>
        float ColdLegFBLeadTC2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coldLegFBLeadTC1 property
        /// </summary>
        float ColdLegFBLeadTC1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coldLegLagTC property
        /// </summary>
        float ColdLegLagTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The steamFlowFG property
        /// </summary>
        float SteamFlowFG
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coreHTLagTC2 property
        /// </summary>
        float CoreHTLagTC2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coreHTLagTC1 property
        /// </summary>
        float CoreHTLagTC1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coreNeutronicsEffTC property
        /// </summary>
        float CoreNeutronicsEffTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// The steamPressureFG property
        /// </summary>
        float SteamPressureFG
        {
            get;
            set;
        }
        
        /// <summary>
        /// The feedbackFactor property
        /// </summary>
        float FeedbackFactor
        {
            get;
            set;
        }
        
        /// <summary>
        /// The hotLegSteamGain property
        /// </summary>
        float HotLegSteamGain
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coreNeutronicsHT property
        /// </summary>
        float CoreNeutronicsHT
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coldLegFG1 property
        /// </summary>
        float ColdLegFG1
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coldLegFG2 property
        /// </summary>
        float ColdLegFG2
        {
            get;
            set;
        }
        
        /// <summary>
        /// The throttlePressureFactor property
        /// </summary>
        float ThrottlePressureFactor
        {
            get;
            set;
        }
        
        /// <summary>
        /// The coldLegFBLagTC property
        /// </summary>
        float ColdLegFBLagTC
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the HotLegToColdLegGain property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotLegToColdLegGainChanging;
        
        /// <summary>
        /// Gets fired when the HotLegToColdLegGain property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotLegToColdLegGainChanged;
        
        /// <summary>
        /// Gets fired before the PressureCG property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PressureCGChanging;
        
        /// <summary>
        /// Gets fired when the PressureCG property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PressureCGChanged;
        
        /// <summary>
        /// Gets fired before the HotLegLagTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotLegLagTCChanging;
        
        /// <summary>
        /// Gets fired when the HotLegLagTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotLegLagTCChanged;
        
        /// <summary>
        /// Gets fired before the SteamPressureDropLagTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamPressureDropLagTCChanging;
        
        /// <summary>
        /// Gets fired when the SteamPressureDropLagTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamPressureDropLagTCChanged;
        
        /// <summary>
        /// Gets fired before the ThrottlePressureSP property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThrottlePressureSPChanging;
        
        /// <summary>
        /// Gets fired when the ThrottlePressureSP property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThrottlePressureSPChanged;
        
        /// <summary>
        /// Gets fired before the ColdLegFBLeadTC2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFBLeadTC2Changing;
        
        /// <summary>
        /// Gets fired when the ColdLegFBLeadTC2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFBLeadTC2Changed;
        
        /// <summary>
        /// Gets fired before the ColdLegFBLeadTC1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFBLeadTC1Changing;
        
        /// <summary>
        /// Gets fired when the ColdLegFBLeadTC1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFBLeadTC1Changed;
        
        /// <summary>
        /// Gets fired before the ColdLegLagTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegLagTCChanging;
        
        /// <summary>
        /// Gets fired when the ColdLegLagTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegLagTCChanged;
        
        /// <summary>
        /// Gets fired before the SteamFlowFG property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamFlowFGChanging;
        
        /// <summary>
        /// Gets fired when the SteamFlowFG property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamFlowFGChanged;
        
        /// <summary>
        /// Gets fired before the CoreHTLagTC2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreHTLagTC2Changing;
        
        /// <summary>
        /// Gets fired when the CoreHTLagTC2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreHTLagTC2Changed;
        
        /// <summary>
        /// Gets fired before the CoreHTLagTC1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreHTLagTC1Changing;
        
        /// <summary>
        /// Gets fired when the CoreHTLagTC1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreHTLagTC1Changed;
        
        /// <summary>
        /// Gets fired before the CoreNeutronicsEffTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreNeutronicsEffTCChanging;
        
        /// <summary>
        /// Gets fired when the CoreNeutronicsEffTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreNeutronicsEffTCChanged;
        
        /// <summary>
        /// Gets fired before the SteamPressureFG property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamPressureFGChanging;
        
        /// <summary>
        /// Gets fired when the SteamPressureFG property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SteamPressureFGChanged;
        
        /// <summary>
        /// Gets fired before the FeedbackFactor property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FeedbackFactorChanging;
        
        /// <summary>
        /// Gets fired when the FeedbackFactor property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FeedbackFactorChanged;
        
        /// <summary>
        /// Gets fired before the HotLegSteamGain property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotLegSteamGainChanging;
        
        /// <summary>
        /// Gets fired when the HotLegSteamGain property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> HotLegSteamGainChanged;
        
        /// <summary>
        /// Gets fired before the CoreNeutronicsHT property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreNeutronicsHTChanging;
        
        /// <summary>
        /// Gets fired when the CoreNeutronicsHT property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CoreNeutronicsHTChanged;
        
        /// <summary>
        /// Gets fired before the ColdLegFG1 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFG1Changing;
        
        /// <summary>
        /// Gets fired when the ColdLegFG1 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFG1Changed;
        
        /// <summary>
        /// Gets fired before the ColdLegFG2 property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFG2Changing;
        
        /// <summary>
        /// Gets fired when the ColdLegFG2 property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFG2Changed;
        
        /// <summary>
        /// Gets fired before the ThrottlePressureFactor property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThrottlePressureFactorChanging;
        
        /// <summary>
        /// Gets fired when the ThrottlePressureFactor property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThrottlePressureFactorChanged;
        
        /// <summary>
        /// Gets fired before the ColdLegFBLagTC property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFBLagTCChanging;
        
        /// <summary>
        /// Gets fired when the ColdLegFBLagTC property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ColdLegFBLagTCChanged;
    }
}

