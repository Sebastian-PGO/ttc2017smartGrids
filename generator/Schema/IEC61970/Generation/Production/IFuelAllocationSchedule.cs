//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.GenerationDynamics;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Generation.Production
{
    
    
    /// <summary>
    /// The public interface for FuelAllocationSchedule
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(FuelAllocationSchedule))]
    [XmlDefaultImplementationTypeAttribute(typeof(FuelAllocationSchedule))]
    public interface IFuelAllocationSchedule : IModelElement, ICurve
    {
        
        /// <summary>
        /// The fuelType property
        /// </summary>
        Nullable<FuelType> FuelType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The maxFuelAllocation property
        /// </summary>
        float MaxFuelAllocation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The fuelAllocationStartDate property
        /// </summary>
        DateTime FuelAllocationStartDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// The minFuelAllocation property
        /// </summary>
        float MinFuelAllocation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The fuelAllocationEndDate property
        /// </summary>
        DateTime FuelAllocationEndDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// The FossilFuel property
        /// </summary>
        IFossilFuel FossilFuel
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ThermalGeneratingUnit property
        /// </summary>
        IThermalGeneratingUnit ThermalGeneratingUnit
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the FuelType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FuelTypeChanging;
        
        /// <summary>
        /// Gets fired when the FuelType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FuelTypeChanged;
        
        /// <summary>
        /// Gets fired before the MaxFuelAllocation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxFuelAllocationChanging;
        
        /// <summary>
        /// Gets fired when the MaxFuelAllocation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaxFuelAllocationChanged;
        
        /// <summary>
        /// Gets fired before the FuelAllocationStartDate property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FuelAllocationStartDateChanging;
        
        /// <summary>
        /// Gets fired when the FuelAllocationStartDate property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FuelAllocationStartDateChanged;
        
        /// <summary>
        /// Gets fired before the MinFuelAllocation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinFuelAllocationChanging;
        
        /// <summary>
        /// Gets fired when the MinFuelAllocation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MinFuelAllocationChanged;
        
        /// <summary>
        /// Gets fired before the FuelAllocationEndDate property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FuelAllocationEndDateChanging;
        
        /// <summary>
        /// Gets fired when the FuelAllocationEndDate property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FuelAllocationEndDateChanged;
        
        /// <summary>
        /// Gets fired before the FossilFuel property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FossilFuelChanging;
        
        /// <summary>
        /// Gets fired when the FossilFuel property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FossilFuelChanged;
        
        /// <summary>
        /// Gets fired before the ThermalGeneratingUnit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThermalGeneratingUnitChanging;
        
        /// <summary>
        /// Gets fired when the ThermalGeneratingUnit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThermalGeneratingUnitChanged;
    }
}

