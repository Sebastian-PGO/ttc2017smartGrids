//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Topology;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.StateVariables
{
    
    
    /// <summary>
    /// The public interface for SvStatus
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(SvStatus))]
    [XmlDefaultImplementationTypeAttribute(typeof(SvStatus))]
    public interface ISvStatus : IModelElement, IStateVariable
    {
        
        /// <summary>
        /// The inService property
        /// </summary>
        bool InService
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ConductingEquipment property
        /// </summary>
        IConductingEquipment ConductingEquipment
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the InService property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> InServiceChanging;
        
        /// <summary>
        /// Gets fired when the InService property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> InServiceChanged;
        
        /// <summary>
        /// Gets fired before the ConductingEquipment property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ConductingEquipmentChanging;
        
        /// <summary>
        /// Gets fired when the ConductingEquipment property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ConductingEquipmentChanged;
    }
}

