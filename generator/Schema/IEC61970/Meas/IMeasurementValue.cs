//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.ControlArea;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Reservation;
using TTC2017.SmartGrids.CIM.IEC61970.SCADA;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Meas
{
    
    
    /// <summary>
    /// The public interface for MeasurementValue
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(MeasurementValue))]
    [XmlDefaultImplementationTypeAttribute(typeof(MeasurementValue))]
    public interface IMeasurementValue : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The sensorAccuracy property
        /// </summary>
        float SensorAccuracy
        {
            get;
            set;
        }
        
        /// <summary>
        /// The timeStamp property
        /// </summary>
        DateTime TimeStamp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The GmlValues property
        /// </summary>
        IOrderedSetExpression<IGmlValue> GmlValues
        {
            get;
        }
        
        /// <summary>
        /// The ProcedureDataSets property
        /// </summary>
        IOrderedSetExpression<IProcedureDataSet> ProcedureDataSets
        {
            get;
        }
        
        /// <summary>
        /// The MeasurementValueQuality property
        /// </summary>
        IMeasurementValueQuality MeasurementValueQuality
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpPerson property
        /// </summary>
        IErpPerson ErpPerson
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MeasurementValueSource property
        /// </summary>
        IMeasurementValueSource MeasurementValueSource
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RemoteSource property
        /// </summary>
        IRemoteSource RemoteSource
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the SensorAccuracy property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SensorAccuracyChanging;
        
        /// <summary>
        /// Gets fired when the SensorAccuracy property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SensorAccuracyChanged;
        
        /// <summary>
        /// Gets fired before the TimeStamp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TimeStampChanging;
        
        /// <summary>
        /// Gets fired when the TimeStamp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TimeStampChanged;
        
        /// <summary>
        /// Gets fired before the MeasurementValueQuality property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeasurementValueQualityChanging;
        
        /// <summary>
        /// Gets fired when the MeasurementValueQuality property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeasurementValueQualityChanged;
        
        /// <summary>
        /// Gets fired before the ErpPerson property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPersonChanging;
        
        /// <summary>
        /// Gets fired when the ErpPerson property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ErpPersonChanged;
        
        /// <summary>
        /// Gets fired before the MeasurementValueSource property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeasurementValueSourceChanging;
        
        /// <summary>
        /// Gets fired when the MeasurementValueSource property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeasurementValueSourceChanged;
        
        /// <summary>
        /// Gets fired before the RemoteSource property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteSourceChanging;
        
        /// <summary>
        /// Gets fired when the RemoteSource property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteSourceChanged;
    }
}

