//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;

namespace TTC2017.SmartGrids.CIM.IEC61970.SCADA
{
    
    
    /// <summary>
    /// The public interface for RemoteControl
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(RemoteControl))]
    [XmlDefaultImplementationTypeAttribute(typeof(RemoteControl))]
    public interface IRemoteControl : IModelElement, IRemotePoint
    {
        
        /// <summary>
        /// The actuatorMaximum property
        /// </summary>
        float ActuatorMaximum
        {
            get;
            set;
        }
        
        /// <summary>
        /// The remoteControlled property
        /// </summary>
        bool RemoteControlled
        {
            get;
            set;
        }
        
        /// <summary>
        /// The actuatorMinimum property
        /// </summary>
        float ActuatorMinimum
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Control property
        /// </summary>
        IControl Control
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the ActuatorMaximum property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActuatorMaximumChanging;
        
        /// <summary>
        /// Gets fired when the ActuatorMaximum property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActuatorMaximumChanged;
        
        /// <summary>
        /// Gets fired before the RemoteControlled property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteControlledChanging;
        
        /// <summary>
        /// Gets fired when the RemoteControlled property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemoteControlledChanged;
        
        /// <summary>
        /// Gets fired before the ActuatorMinimum property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActuatorMinimumChanging;
        
        /// <summary>
        /// Gets fired when the ActuatorMinimum property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ActuatorMinimumChanged;
        
        /// <summary>
        /// Gets fired before the Control property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ControlChanging;
        
        /// <summary>
        /// Gets fired when the Control property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ControlChanged;
    }
}

