//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.AssetModels;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.WiresExt;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssetModels;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets
{
    
    
    /// <summary>
    /// The public interface for DimensionsInfo
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(DimensionsInfo))]
    [XmlDefaultImplementationTypeAttribute(typeof(DimensionsInfo))]
    public interface IDimensionsInfo : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The orientation property
        /// </summary>
        string Orientation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sizeWidth property
        /// </summary>
        float SizeWidth
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sizeDepth property
        /// </summary>
        float SizeDepth
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sizeDiameter property
        /// </summary>
        float SizeDiameter
        {
            get;
            set;
        }
        
        /// <summary>
        /// The sizeLength property
        /// </summary>
        float SizeLength
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Locations property
        /// </summary>
        IOrderedSetExpression<ILocation> Locations
        {
            get;
        }
        
        /// <summary>
        /// The Specifications property
        /// </summary>
        IOrderedSetExpression<ISpecification> Specifications
        {
            get;
        }
        
        /// <summary>
        /// The AssetInfos property
        /// </summary>
        IOrderedSetExpression<IAssetInfo> AssetInfos
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Orientation property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OrientationChanging;
        
        /// <summary>
        /// Gets fired when the Orientation property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OrientationChanged;
        
        /// <summary>
        /// Gets fired before the SizeWidth property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeWidthChanging;
        
        /// <summary>
        /// Gets fired when the SizeWidth property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeWidthChanged;
        
        /// <summary>
        /// Gets fired before the SizeDepth property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeDepthChanging;
        
        /// <summary>
        /// Gets fired when the SizeDepth property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeDepthChanged;
        
        /// <summary>
        /// Gets fired before the SizeDiameter property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeDiameterChanging;
        
        /// <summary>
        /// Gets fired when the SizeDiameter property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeDiameterChanged;
        
        /// <summary>
        /// Gets fired before the SizeLength property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeLengthChanging;
        
        /// <summary>
        /// Gets fired when the SizeLength property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeLengthChanged;
    }
}

