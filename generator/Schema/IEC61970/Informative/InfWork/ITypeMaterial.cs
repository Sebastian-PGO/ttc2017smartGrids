//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork
{
    
    
    /// <summary>
    /// The public interface for TypeMaterial
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(TypeMaterial))]
    [XmlDefaultImplementationTypeAttribute(typeof(TypeMaterial))]
    public interface ITypeMaterial : IModelElement, IDocument
    {
        
        /// <summary>
        /// The stockItem property
        /// </summary>
        bool StockItem
        {
            get;
            set;
        }
        
        /// <summary>
        /// The quantity property
        /// </summary>
        string Quantity
        {
            get;
            set;
        }
        
        /// <summary>
        /// The costType property
        /// </summary>
        string CostType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The estUnitCost property
        /// </summary>
        float EstUnitCost
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpIssueInventories property
        /// </summary>
        IOrderedSetExpression<IErpIssueInventory> ErpIssueInventories
        {
            get;
        }
        
        /// <summary>
        /// The ErpReqLineItems property
        /// </summary>
        IOrderedSetExpression<IErpReqLineItem> ErpReqLineItems
        {
            get;
        }
        
        /// <summary>
        /// The MaterialItems property
        /// </summary>
        IOrderedSetExpression<IMaterialItem> MaterialItems
        {
            get;
        }
        
        /// <summary>
        /// The CUMaterialItems property
        /// </summary>
        IOrderedSetExpression<ICUMaterialItem> CUMaterialItems
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the StockItem property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StockItemChanging;
        
        /// <summary>
        /// Gets fired when the StockItem property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StockItemChanged;
        
        /// <summary>
        /// Gets fired before the Quantity property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanging;
        
        /// <summary>
        /// Gets fired when the Quantity property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> QuantityChanged;
        
        /// <summary>
        /// Gets fired before the CostType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostTypeChanging;
        
        /// <summary>
        /// Gets fired when the CostType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CostTypeChanged;
        
        /// <summary>
        /// Gets fired before the EstUnitCost property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EstUnitCostChanging;
        
        /// <summary>
        /// Gets fired when the EstUnitCost property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EstUnitCostChanged;
    }
}

