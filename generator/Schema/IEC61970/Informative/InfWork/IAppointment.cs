//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork
{
    
    
    /// <summary>
    /// The public interface for Appointment
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Appointment))]
    [XmlDefaultImplementationTypeAttribute(typeof(Appointment))]
    public interface IAppointment : IModelElement, IScheduledEvent
    {
        
        /// <summary>
        /// The remark property
        /// </summary>
        string Remark
        {
            get;
            set;
        }
        
        /// <summary>
        /// The callAhead property
        /// </summary>
        bool CallAhead
        {
            get;
            set;
        }
        
        /// <summary>
        /// The address property
        /// </summary>
        IStreetAddress Address
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CallBack property
        /// </summary>
        ICallBack CallBack
        {
            get;
            set;
        }
        
        /// <summary>
        /// The meetingInterval property
        /// </summary>
        IDateTimeInterval MeetingInterval
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpPersons property
        /// </summary>
        IOrderedSetExpression<IErpPerson> ErpPersons
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Remark property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemarkChanging;
        
        /// <summary>
        /// Gets fired when the Remark property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RemarkChanged;
        
        /// <summary>
        /// Gets fired before the CallAhead property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CallAheadChanging;
        
        /// <summary>
        /// Gets fired when the CallAhead property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CallAheadChanged;
        
        /// <summary>
        /// Gets fired before the Address property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AddressChanging;
        
        /// <summary>
        /// Gets fired when the Address property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AddressChanged;
        
        /// <summary>
        /// Gets fired before the CallBack property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CallBackChanging;
        
        /// <summary>
        /// Gets fired when the CallBack property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CallBackChanged;
        
        /// <summary>
        /// Gets fired before the MeetingInterval property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeetingIntervalChanging;
        
        /// <summary>
        /// Gets fired when the MeetingInterval property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MeetingIntervalChanged;
    }
}

