//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Assets;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfAssets;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCommon;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfGMLSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLocations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfTypeAsset;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfWork
{
    
    
    /// <summary>
    /// The public interface for CostType
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(CostType))]
    [XmlDefaultImplementationTypeAttribute(typeof(CostType))]
    public interface ICostType : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The level property
        /// </summary>
        string Level
        {
            get;
            set;
        }
        
        /// <summary>
        /// The amountAssignmentFlag property
        /// </summary>
        bool AmountAssignmentFlag
        {
            get;
            set;
        }
        
        /// <summary>
        /// The code property
        /// </summary>
        string Code
        {
            get;
            set;
        }
        
        /// <summary>
        /// The stage property
        /// </summary>
        string Stage
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ErpJournalEntries property
        /// </summary>
        IOrderedSetExpression<IErpJournalEntry> ErpJournalEntries
        {
            get;
        }
        
        /// <summary>
        /// The WorkCostDetails property
        /// </summary>
        IOrderedSetExpression<IWorkCostDetail> WorkCostDetails
        {
            get;
        }
        
        /// <summary>
        /// The ParentCostType property
        /// </summary>
        ICostType ParentCostType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The CompatibleUnits property
        /// </summary>
        IOrderedSetExpression<ICompatibleUnit> CompatibleUnits
        {
            get;
        }
        
        /// <summary>
        /// The status property
        /// </summary>
        IStatus Status
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ChildCostTypes property
        /// </summary>
        IOrderedSetExpression<ICostType> ChildCostTypes
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Level property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LevelChanging;
        
        /// <summary>
        /// Gets fired when the Level property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LevelChanged;
        
        /// <summary>
        /// Gets fired before the AmountAssignmentFlag property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountAssignmentFlagChanging;
        
        /// <summary>
        /// Gets fired when the AmountAssignmentFlag property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AmountAssignmentFlagChanged;
        
        /// <summary>
        /// Gets fired before the Code property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CodeChanging;
        
        /// <summary>
        /// Gets fired when the Code property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CodeChanged;
        
        /// <summary>
        /// Gets fired before the Stage property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StageChanging;
        
        /// <summary>
        /// Gets fired when the Stage property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StageChanged;
        
        /// <summary>
        /// Gets fired before the ParentCostType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ParentCostTypeChanging;
        
        /// <summary>
        /// Gets fired when the ParentCostType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ParentCostTypeChanged;
        
        /// <summary>
        /// Gets fired before the Status property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanging;
        
        /// <summary>
        /// Gets fired when the Status property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> StatusChanged;
    }
}

