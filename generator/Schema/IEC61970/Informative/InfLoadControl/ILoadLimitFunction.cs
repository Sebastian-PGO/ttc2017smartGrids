//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.InfLoadControl
{
    
    
    /// <summary>
    /// The public interface for LoadLimitFunction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(LoadLimitFunction))]
    [XmlDefaultImplementationTypeAttribute(typeof(LoadLimitFunction))]
    public interface ILoadLimitFunction : IModelElement, ILoadMgmtFunction
    {
        
        /// <summary>
        /// The isAutoReconOp property
        /// </summary>
        bool IsAutoReconOp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The maximumLoad property
        /// </summary>
        float MaximumLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// The reconnectTimeDelay property
        /// </summary>
        float ReconnectTimeDelay
        {
            get;
            set;
        }
        
        /// <summary>
        /// The disconnectTimeDelay property
        /// </summary>
        float DisconnectTimeDelay
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the IsAutoReconOp property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsAutoReconOpChanging;
        
        /// <summary>
        /// Gets fired when the IsAutoReconOp property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsAutoReconOpChanged;
        
        /// <summary>
        /// Gets fired before the MaximumLoad property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaximumLoadChanging;
        
        /// <summary>
        /// Gets fired when the MaximumLoad property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MaximumLoadChanged;
        
        /// <summary>
        /// Gets fired before the ReconnectTimeDelay property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReconnectTimeDelayChanging;
        
        /// <summary>
        /// Gets fired when the ReconnectTimeDelay property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ReconnectTimeDelayChanged;
        
        /// <summary>
        /// Gets fired before the DisconnectTimeDelay property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DisconnectTimeDelayChanging;
        
        /// <summary>
        /// Gets fired when the DisconnectTimeDelay property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DisconnectTimeDelayChanged;
    }
}

