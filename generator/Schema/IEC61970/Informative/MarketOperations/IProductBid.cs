//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61970.Contingency;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Generation.Production;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.EnergyScheduling;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.Financial;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.LoadModel;
using TTC2017.SmartGrids.CIM.IEC61970.Meas;
using TTC2017.SmartGrids.CIM.IEC61970.Wires;

namespace TTC2017.SmartGrids.CIM.IEC61970.Informative.MarketOperations
{
    
    
    /// <summary>
    /// The public interface for ProductBid
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ProductBid))]
    [XmlDefaultImplementationTypeAttribute(typeof(ProductBid))]
    public interface IProductBid : IModelElement, IIdentifiedObject
    {
        
        /// <summary>
        /// The Bid property
        /// </summary>
        IBid Bid
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ProductBidClearing property
        /// </summary>
        IProductBidClearing ProductBidClearing
        {
            get;
            set;
        }
        
        /// <summary>
        /// The BidPriceCurve property
        /// </summary>
        IBidPriceCurve BidPriceCurve
        {
            get;
            set;
        }
        
        /// <summary>
        /// The MarketProduct property
        /// </summary>
        IMarketProduct MarketProduct
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Bid property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BidChanging;
        
        /// <summary>
        /// Gets fired when the Bid property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BidChanged;
        
        /// <summary>
        /// Gets fired before the ProductBidClearing property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProductBidClearingChanging;
        
        /// <summary>
        /// Gets fired when the ProductBidClearing property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ProductBidClearingChanged;
        
        /// <summary>
        /// Gets fired before the BidPriceCurve property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BidPriceCurveChanging;
        
        /// <summary>
        /// Gets fired when the BidPriceCurve property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BidPriceCurveChanged;
        
        /// <summary>
        /// Gets fired before the MarketProduct property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketProductChanging;
        
        /// <summary>
        /// Gets fired when the MarketProduct property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> MarketProductChanged;
    }
}

