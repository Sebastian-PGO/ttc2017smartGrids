//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using TTC2017.SmartGrids.CIM.IEC61968.Common;
using TTC2017.SmartGrids.CIM.IEC61968.Metering;
using TTC2017.SmartGrids.CIM.IEC61968.PaymentMetering;
using TTC2017.SmartGrids.CIM.IEC61968.Work;
using TTC2017.SmartGrids.CIM.IEC61970.Core;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfCustomers;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfERPSupport;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfOperations;
using TTC2017.SmartGrids.CIM.IEC61970.Informative.InfPaymentMetering;

namespace TTC2017.SmartGrids.CIM.IEC61968.Customers
{
    
    
    public class ServiceKindConverter : System.ComponentModel.TypeConverter
    {
        
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType)
        {
            return (sourceType == typeof(string));
        }
        
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType)
        {
            return (destinationType == typeof(string));
        }
        
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value)
        {
            if ((value == null))
            {
                return default(ServiceKind);
            }
            string valueString = value.ToString();
            if ((valueString == "time"))
            {
                return ServiceKind.Time;
            }
            if ((valueString == "gas"))
            {
                return ServiceKind.Gas;
            }
            if ((valueString == "sewerage"))
            {
                return ServiceKind.Sewerage;
            }
            if ((valueString == "rates"))
            {
                return ServiceKind.Rates;
            }
            if ((valueString == "electricity"))
            {
                return ServiceKind.Electricity;
            }
            if ((valueString == "tvLicence"))
            {
                return ServiceKind.TvLicence;
            }
            if ((valueString == "other"))
            {
                return ServiceKind.Other;
            }
            if ((valueString == "refuse"))
            {
                return ServiceKind.Refuse;
            }
            if ((valueString == "water"))
            {
                return ServiceKind.Water;
            }
            if ((valueString == "internet"))
            {
                return ServiceKind.Internet;
            }
            if ((valueString == "heat"))
            {
                return ServiceKind.Heat;
            }
            return default(ServiceKind);
        }
        
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType)
        {
            if ((value == null))
            {
                return null;
            }
            ServiceKind valueCasted = ((ServiceKind)(value));
            if ((valueCasted == ServiceKind.Time))
            {
                return "time";
            }
            if ((valueCasted == ServiceKind.Gas))
            {
                return "gas";
            }
            if ((valueCasted == ServiceKind.Sewerage))
            {
                return "sewerage";
            }
            if ((valueCasted == ServiceKind.Rates))
            {
                return "rates";
            }
            if ((valueCasted == ServiceKind.Electricity))
            {
                return "electricity";
            }
            if ((valueCasted == ServiceKind.TvLicence))
            {
                return "tvLicence";
            }
            if ((valueCasted == ServiceKind.Other))
            {
                return "other";
            }
            if ((valueCasted == ServiceKind.Refuse))
            {
                return "refuse";
            }
            if ((valueCasted == ServiceKind.Water))
            {
                return "water";
            }
            if ((valueCasted == ServiceKind.Internet))
            {
                return "internet";
            }
            if ((valueCasted == ServiceKind.Heat))
            {
                return "heat";
            }
            throw new ArgumentOutOfRangeException("value");
        }
    }
}

